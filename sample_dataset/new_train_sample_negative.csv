code1,code2,similar
"['#C - Traveling Salesman around Lake WA(ヒント)\n', 'K,N = map(int,input().split())\n', 'A = list(map(int, input().split()))\n', '\n', 'A[N+1:] = [A[0] + K]#Aを二回繰り返して円を表現\n', '\n', 'distance_list = []\n', 'for i in range(N):\n', '    distance = abs(A[i] - A[i+1])\n', '    distance_list.append(distance)\n', 'distance_list.remove(max(distance_list))\n', 'print(sum(distance_list))']","['import sys\n', '\n', 'lines = [line.strip() for line in sys.stdin]\n', 's = lines[0] + lines[0]\n', 'p = lines[1].strip()\n', '\n', 'if s.find(p) != -1:\n', ""    print('Yes')\n"", 'else:\n', ""    print('No')""]",0
"['N,M=map(int, input().split())\n', 'a = list(map(int, input().split()))\n', 'z = sum(a)\n', 'a.sort(reverse=True)\n', '\n', 'for i in a[:M]:\n', '    if i < z/4/M:\n', ""        print('No')\n"", '        break\n', 'else:\n', ""    print('Yes')""]","['class CircleInaRectangle:\n', '    def __init__(self, W, H, x, y, r):\n', '        if 0 <= x - r and 0 <= y - r and x + r <= W and y + r <= H:\n', '            print ""Yes""\n', '        else:\n', '            print ""No""\n', '\n', 'if __name__ == ""__main__"":\n', '    W, H, x, y, r = map(int, raw_input().split())\n', '    CircleInaRectangle(W, H, x, y, r)']",0
"['X,Y= map(int,input().split())\n', 'a = Y/2-X \n', 'b = X*2-Y/2\n', '\n', 'if Y%2 ==0:\n', '    if a >= 0 and b >= 0:\n', ""        print('Yes')\n"", '    else:\n', ""        print('No')\n"", 'else:\n', ""    print('No')""]","['def i1():\n', ' return int(input())\n', 'def i2():\n', ' return [int(i) for i in input().split()]\n', 'mod=10**9+7\n', 'def bp(a,n):\n', '        r=1\n', '        while(n):\n', '           if n%2:\n', '              r=r*a%mod\n', '           a=a*a%mod\n', '           n>>=1\n', '        return r\n', '[n,k]=i2()\n', 'if n<=k:\n', '   x=1\n', '   for i in range(n-1):\n', '      x*=2*n-1-i\n', '      x%=mod\n', '   y=1\n', '   for i in range(n-1):\n', '      y*=i+1\n', '      y%=mod\n', '   print((x*bp(y,10**9+5))%mod)   \n', '   \n', 'else:\n', '   x=1\n', '   y=1\n', '   t=1\n', '   for i in range(k):\n', '      t*=i+1\n', '      t%=mod\n', '      y*=n-1-i\n', '      y%=mod\n', '      y*=n-i\n', '      y%=mod\n', '      c=bp(t,10**9+5)\n', '      x+=y*c*c\n', '      x%=mod\n', '   print(x)   ']",0
"['#!/usr/bin/env python3\n', 'X, Y = map(int, input().split())\n', 'if (X + Y) % 3:\n', '    exit(print(0))\n', 'm = (2*X - Y) // 3\n', 'n = X - 2*m\n', 'if n < 0 or m < 0:\n', '    exit(print(0))\n', '\n', '## class\n', 'def egcd(a, b):\n', '    if a == 0:\n', '        return (b, 0, 1)\n', '    else:\n', '        g, y, x = egcd(b % a, a)\n', '        return (g, x - (b // a) * y, y)\n', '\n', 'def modinv(a, m):\n', '    g, x, y = egcd(a, m)\n', '    if g != 1:\n', ""        raise Exception('modular inverse does not exist')\n"", '    else:\n', '        return x % m\n', '\n', 'def power(a, b, c):\n', '    try:\n', '        return pow(a, b, c)\n', '    except (ValueError, TypeError) as e:\n', '        if b < 0:\n', '            return pow(modinv(a, c), -b, c)\n', '        else:\n', '            print(e)\n', '\n', 'class Factorial:\n', '    def __init__(self, n, mod):\n', '        self.f = f =[0] * (n + 1)\n', '        f[0] = b = 1\n', '        for i in range(1, n + 1):f[i] = b = b * i % mod\n', '        self.inv = inv = [0] * (n + 1)\n', '        inv[n] = b = power(self.f[n], -1, mod)\n', '        for i in range(n,0,-1):inv[i-1] = b = b * i % mod\n', '        self.mod = mod\n', '    def factorial(self, i):\n', '        return self.f[i]\n', '    def ifactorial(self, i):\n', '        return self.inv[i]\n', '    def comb(self, n, k):\n', '        if n >= k:return self.f[n] * self.inv[n - k] * self.inv[k] % self.mod\n', '        else:return 0\n', '\n', 'def nCr(n, r, mod = None, limit = None):\n', '    if mod and limit:\n', '        return Factorial(limit, mod).comb(n, r)\n', '    elif mod:\n', '        r = min(r, n - r)\n', '        a = 1\n', '        for i in range(r):\n', '            a = a * (n - i) * power(i + 1, mod - 2, mod) % mod\n', '        return a\n', '    else:\n', '        from math import factorial as f\n', '        return f(n) // (f(n - r) * f(r))\n', '\n', 'MOD = 10**9+7\n', 'print(nCr(m + n, n, MOD, 2*10**6))']","['# 27\n', ""N, A, B = map(int, input().split(' '))\n"", ' \n', 'ans = 0\n', 'if (A + B) != 0:\n', '    taple = divmod(N, A + B)\n', '    ans = taple[0] * A\n', '    if B == 0: ans = N\n', '    elif taple[1] > A: ans += A\n', '    else: ans += taple[1]\n', ' \n', 'print(ans)']",0
"['N = int(input())\n', 'X = str(input())\n', 'F = [0] * N\n', '\n', 'def calc_f(n:int)->int:\n', '    global F\n', '    x = n\n', '    res = 0\n', '    while 0 < x:\n', '        if F[x] != 0:\n', '            res += F[x]\n', '            break\n', ""        pop = bin(n).count('1')\n"", '        x %= pop\n', '        res += 1\n', '    F[n] = res\n', '\n', '# 前処理 N以下のF値テーブル\n', 'for i in range(1, N):\n', '    calc_f(i)\n', '\n', '# ビット反転すると初期の1の個数に対して+1または-1どちらか\n', ""pop_ini = X.count('1')\n"", 'pp = pop_ini + 1  # pop_plus\n', 'pm = pop_ini - 1  # pop_minus\n', '\n', '# 2進の各桁をppとpmで割った値のテーブル\n', 'ap = [0] * N  # arr_plus\n', 'am = [0] * N  # arr_minus\n', 'for i in range(N):\n', '    ap[i] = pow(2, N-1-i, pp)\n', '    if 0 < pm:\n', '        am[i] = pow(2, N-1-i, pm)\n', '\n', '# 所与のXで計算、ベースになる値\n', 'fp = 0  # f_plus\n', 'fm = 0  # f_minus\n', 'for i in range(N):\n', ""    if X[i] == '1':\n"", '        fp = (fp + ap[i]) % pp\n', '        if 0 < pm:\n', '            fm = (fm + am[i]) % pm\n', '\n', '# 各桁を反転した場合では差分更新のみ\n', 'for i in range(N):\n', '    ans = 1\n', ""    if X[i] == '1':\n"", '        if 0 < pm:\n', '            v = (fm + pm - am[i]) % pm\n', '        else:\n', '            ans = 0\n', '            v = 0\n', '    else:\n', '        v = (fp + ap[i]) % pp\n', '    if 0 < v:\n', '        ans += F[v]\n', '    print(ans)']","['print("""".join([x.upper() if x.islower() else x.lower() for x in raw_input()]))']",0
"[""N, M = map(int, input().split(' '))\n"", 'ac_set = set()\n', 'wa_cnt_list = [0] * N\n', 'ac_cnt, wa_cnt = 0, 0\n', 'for i in range(M):\n', ""    num, res = input().split(' ')\n"", '    num = int(num) - 1\n', '    if num not in ac_set:\n', ""        if res == 'AC':\n"", '            ac_cnt += 1\n', '            wa_cnt += wa_cnt_list[num]\n', '            ac_set.add(num)\n', '        else:\n', '            wa_cnt_list[num] += 1\n', 'print(ac_cnt, wa_cnt)']","['import math\n', '\n', 'n, m = map(int, input().split())\n', 'x = 0\n', 'y = 0\n', 'if n >= 2:\n', '    x = math.factorial(n) // ((math.factorial(n-2))*2)\n', 'elif n <= 1:\n', '    x = 0\n', 'if m >= 2:\n', '    y = math.factorial(m) // ((math.factorial(m-2))*2)\n', 'elif m <= 1:\n', '    y = 0\n', 'print(x + y)']",0
"['import numpy as np\n', 'import sys\n', 'read = sys.stdin.buffer.read\n', 'readline = sys.stdin.buffer.readline\n', '\n', 'from numba import njit\n', '\n', '\n', 'def getInputs():\n', '    D = int(readline())\n', '    CS = np.array(read().split(), np.int32)\n', '    C = CS[:26]\n', '    S = CS[26:].reshape((-1, 26))\n', '    return D, C, S\n', '\n', '\n', ""@njit('(i8, i4[:], i4[:, :], i4[:], )', cache=True)\n"", 'def _compute_score1(D, C, S, out):\n', '    score = 0\n', '    last = np.zeros(26, np.int32)\n', '    for d in range(len(out)):\n', '        i = out[d]\n', '        score += S[d, i]\n', '        last[i] = d + 1\n', '        score -= np.sum(C * (d + 1 - last))\n', '    return last, score\n', '\n', '\n', 'def _update_score():\n', '    pass\n', '\n', ""@njit('(i8, i4[:], i4[:, :], i4[:], i8, )', cache=True)\n"", 'def _random_update(D, C, S, out, score):\n', '    d = np.random.randint(0, D)\n', '    q = np.random.randint(0, 26)\n', '    p = out[d]\n', '\n', '    if p == q:\n', '        return out, score\n', '\n', '    out[d] = q\n', '    _, new_score = _compute_score1(D, C, S, out)\n', '    if score < new_score:\n', '        score = new_score\n', '    else:\n', '        out[d] = p\n', '\n', '    return out, score\n', '\n', '\n', ""@njit('(i8, i4[:], i4[:, :], i4[:], i8, i8, )', cache=True)\n"", 'def _random_swap(D, C, S, out, score, delta):\n', '    d1 = np.random.randint(0, D)\n', '    d2 = np.random.randint(max(0, d1 - delta), min(D, d1 + delta))\n', '    #p, q = out[[d1, d2]]\n', '    p = out[d1]\n', '    q = out[d2]\n', '\n', '    if d1 == d2 or p == q:\n', '        return out, score\n', '\n', '    #out[[d1, d2]] = (q, p)\n', '    out[d1] = q\n', '    out[d2] = p\n', '    _, new_score = _compute_score1(D, C, S, out)\n', '    if score < new_score:\n', '        score = new_score\n', '    else:\n', '        #out[[d1, d2]] = (p, q)\n', '        out[d1] = p\n', '        out[d2] = q\n', '\n', '    return out, score\n', '\n', '\n', '\n', 'def step1(D, C, S):\n', '    out = []\n', '    LAST = 0\n', '    for d in range(D):\n', '        max_score = -10000000\n', '        best_i = 0\n', '        \n', '        for i in range(26):\n', '            out.append(i)\n', '            last, score = _compute_score1(D, C, S, np.array(out, np.int32))\n', '            if max_score < score:\n', '                max_score = score\n', '                LAST = last\n', '                best_i = i\n', '            out.pop()\n', '\n', '        out.append(best_i)\n', '\n', '    return np.array(out), LAST, max_score\n', '\n', '\n', 'def step2(D, C, S, out, score):\n', '    for _ in range(48 * 10 ** 3):\n', '        flag = np.random.rand() >= 0.5\n', '        out = out.astype(np.int32)\n', '\n', '        if flag:\n', '            out, score = _random_update(D, C, S, out, score)\n', '        else:\n', '            out, score = _random_swap(D, C, S, out, score, 13)\n', '\n', '    return out, score\n', '\n', '\n', 'def output(out):\n', '    out += 1\n', ""    print('\\n'.join(out.astype(str).tolist()))\n"", '\n', '\n', 'D, C, S = getInputs()\n', 'out, _, score = step1(D, C, S)\n', '#print(score)\n', 'out, score = step2(D, C, S, out, score)\n', 'output(out)\n', '#print(score)']","['N, M = map(int, input().split())\n', 'S = input()\n', '\n', 'p = N\n', 'ans = []\n', 'ans_ok = True\n', 'while True:\n', '    if p <= M:\n', '        ans.append(p)\n', '        p -= p\n', '        break\n', '    check = False\n', '    for i in range(M, 0, -1):\n', ""        if S[p-i] == '0':\n"", '            check = True\n', '            ans.append(i)\n', '            p -= i\n', '            break\n', '    if not check:\n', '        ans_ok = False\n', '        break\n', 'if ans_ok:\n', ""    print(' '.join(map(str, ans[::-1])))\n"", 'else:\n', '    print(-1)']",0
"['from operator import mul\n', 'from functools import reduce\n', 'import sys\n', '\n', 'def cmb(n,r):\n', '    r=min(n-r,r)\n', '    if r==0:\n', '        return 1\n', '    over=reduce(mul,range(n,n-r,-1))\n', '    under=reduce(mul,range(1,r+1))\n', '    return over//under\n', '\n', 'N,P=map(int,input().split())\n', 'S=list(map(int,list(input())))\n', '\n', 'if P==2:\n', '    ans=0\n', '    for i in range(N):\n', '        if S[i]%2==0:\n', '            ans+=i+1\n', '    print(ans)\n', '    sys.exit()\n', '\n', 'if P==5:\n', '    ans=0\n', '    for i in range(N):\n', '        if S[i]==0 or S[i]==5:\n', '            ans+=i+1\n', '    print(ans)\n', '    sys.exit()\n', '\n', '\n', 'data=[1]*N\n', 'for i in range(N-2,-1,-1):\n', '    data[i]=data[i+1]*10%P\n', '\n', 'data[-1]=data[-1]*S[-1]%P\n', '\n', 'for i in range(N-2,-1,-1):\n', '    data[i]=(data[i]*S[i]+data[i+1])%P\n', '\n', 'data.sort()\n', 'cnt=1\n', 'ans=data.count(0)\n', 'for i in range(1,N):\n', '    if data[i]==data[i-1]:\n', '        cnt+=1\n', '    else:\n', '        if cnt>=2:\n', '            ans+=cmb(cnt,2)\n', '        cnt=1\n', 'if cnt>=2:\n', '    ans+=cmb(cnt,2)\n', '    \n', 'print(ans)']","['S = input()\n', 'T = input()\n', 'largest = 0\n', 'for i in range(len(S) - len(T)+1):\n', '    count = 0\n', '    for j in range(len(T)):\n', '        if S[i+j] == T[j]:\n', '            count += 1\n', '    if largest < count:\n', '        largest = count\n', 'print(len(T) - largest)\n']",0
"['import sys\n', '\n', 'l = []\n', 'for i in sys.stdin:\n', '    l.append(i)\n', '\n', 'for i in range(0,len(l)):\n', '    if int(l[i]) == 0:\n', '        break\n', '    count = 0\n', '    for j in range(0,len(l[i])-1):\n', '        count += int(l[i][j])\n', '    print(count)\n']","['import sys\n', 'sys.setrecursionlimit(10**7)\n', 'def input(): return sys.stdin.readline().rstrip()\n', '\n', '\n', 'def main():\n', '    n, k = map(int, input().split())\n', '    p = tuple(map(int, input().split()))\n', '    c = tuple(map(int, input().split()))\n', '    ans = -10**18\n', '    for i in range(n):\n', '        start, count = i, 1\n', '        val = c[start]\n', '        while p[start]-1 != i:\n', '            start = p[start]-1\n', '            count += 1\n', '            val += c[start]\n', '        start = i\n', '        if val > 0:\n', '            a = (k//count-1)*val\n', '            ans = max(a, ans)\n', '            num = count + k % count\n', '        else:\n', '            a = 0\n', '            num = min(k, count)\n', '        for _ in range(num):\n', '            a += c[start]\n', '            start = p[start] - 1\n', '            ans = max(a, ans)\n', '    print(ans)\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    main()']",0
"['c=0\n', 'for _ in[0]*int(input()):\n', ' x=int(input())\n', ' if 2 in[x,pow(2,x,x)]:c+=1\n', 'print(c)\n']","['from collections import Counter\n', 'N,*D = map(int, open(0).read().split())\n', 'MOD = 998244353\n', 'c = Counter(D)\n', 'cnt = 1\n', 'M = max(c.keys())\n', 'ans = 1\n', 'if D[0]!=0 or c[0]!=1:\n', '  print(0)\n', '  import sys\n', '  sys.exit()\n', 'while cnt<=M:\n', '  ans *= c[cnt-1]**c[cnt]\n', '  ans %= MOD\n', '  cnt += 1\n', 'print(ans)']",0
"['from collections import Counter as c\n', 'N = int(input())\n', 'A = list(input().split())\n', 'if c(A).most_common()[0][1] == 1: print(""YES"")\n', 'else: print(""NO"")']","['input()\n', 's = input().split()\n', 'input()\n', 't = input().split()\n', '\n', 'cnt = 0\n', '\n', 'for t1 in t:\n', '    for s1 in s:\n', '        if t1 == s1:\n', '            cnt += 1\n', '            break\n', '\n', 'print(cnt)']",0
"['# coding=utf-8\n', '\n', ""if __name__ == '__main__':\n"", '    N, K = map(int, input().split())\n', '\n', '    sunuke = [0] * N\n', '    #print(sunuke)\n', '\n', '    for i in range(K):\n', '        D = int(input())\n', '        li = list(map(int, input().split()))\n', '\n', '        for j in range(D):\n', '            sunuke[li[j] - 1] += 1\n', '            #print(sunuke)\n', '\n', '    print(sunuke.count(0))\n']","['midScore =[0]*50\n', 'finScore = [0]*50\n', 'reScore = [0]*50\n', 'personNum = 0\n', 'while True:\n', '    m,f,r = map(int,input().split())\n', '    midScore[personNum] = m\n', '    finScore[personNum] = f\n', '    reScore[personNum] = r\n', '    personNum += 1\n', '    if m is f is r is -1:\n', '        break\n', '    \n', '    \n', 'for person in range(personNum):\n', '    totalScore = midScore[person] + finScore[person]\n', '    if midScore[person] is finScore[person] is reScore[person] is -1:\n', '        pass\n', '    elif midScore[person] == -1 or finScore[person] == -1:\n', '        print(""F"")\n', '    elif 80<=totalScore:\n', '        print(""A"")\n', '    elif 65<=totalScore<80:\n', '        print(""B"")\n', '    elif 50<=totalScore<65:\n', '        print(""C"")\n', '    elif 30<=totalScore<50:\n', '        if 50<=reScore[person]:\n', '            print(""C"")\n', '        else:\n', '            print(""D"")\n', '    elif totalScore<30:\n', '        print(""F"")\n']",0
"['\n', '\n', 'm = 0\n', 'while m == 0:\n', '    n, x = map(int,raw_input().split())\n', '    count = 0    \n', '    if n == 0 and x == 0:\n', '        break\n', '    for i in xrange(1,n+1):\n', '        for j in xrange(1,n+1):\n', '            for k in xrange(1,n+1):\n', '                ans = i + j + k\n', '                if ans == x and i != j and j != k and k != i:\n', '                    count = count + 1\n', '    print count / 6']","['total_sec = int(input())\n', 'h = int(total_sec / 3600)\n', 'last_seconds = total_sec % 3600\n', 'm = int(last_seconds / 60)\n', 's = last_seconds % 60\n', ""print(f'{h}:{m}:{s}')\n"", '\n']",0
"['n = int(input())\n', 'a = list(map(int,input().split()))\n', '\n', '# i個使う時の要素の和の最大値\n', 'dp = [0]*(n+1)\n', 'dp[1] = 0\n', 'dp[2] = max(a[0],a[1])\n', '\n', '# 奇数の番号の累積和\n', 'b = [0]*(n+1)\n', 'b[1] = a[0]\n', 'for i in range(1,n-1,2):\n', '    b[i+2] = b[i] + a[i+1]\n', '# print(b)\n', '\n', 'for i in range(3,n+1):\n', '    if i % 2 == 0:\n', '        dp[i] = max(dp[i-2] + a[i-1], b[i-1])\n', '    else:\n', '        dp[i] = max(dp[i-2] + a[i-1], dp[i-3] + a[i-2], b[i-2])\n', '\n', '# print(dp)\n', 'print(dp[n])']","['N = list(map(int, input()))\n', 'if N[0] == 7 or N[1] == 7 or N[2] == 7:\n', ""  print('Yes')\n"", 'else:\n', ""  print('No')""]",0
"['N = int(input())\n', 'A = []\n', 'XY = []\n', 'for i in range(N):\n', '    a = int(input())\n', '    A.append(a)\n', '    xy = [list(map(int,input().split())) for j in range(a)]\n', '    XY.append(xy)\n', 'ans = 0\n', 'for i in range(2**N):\n', '    b = [i>>j&1 for j in range(N)]\n', '    f = 0\n', '    for j in range(N):\n', '        if b[j] == 1:\n', '            for k in range(A[j]):\n', '                x = XY[j][k][0] -1\n', '                y = XY[j][k][1]\n', '                if b[x] != y:\n', '                    f = 1\n', '                    break\n', '        if f:\n', '            break\n', '    else:\n', '        ans = max(ans,b.count(1))\n', 'print(ans)']","['import itertools\n', '\n', 'N = int(input())\n', 'cities = [list(map(int, input().split())) for _ in range(N)]\n', 'patterns = itertools.permutations(cities, N)\n', 'result = 0\n', 'count = 0\n', 'for ptn in patterns:\n', '  count += 1\n', '  dis = 0\n', '  for i in range(N-1):\n', '    dis += ((ptn[i][0]-ptn[i+1][0])**2 + (ptn[i][1]-ptn[i+1][1])**2)**0.5\n', '  result += dis\n', 'print(result/count)\n', '\n']",0
"['#! /usr/bin/env python3\n', '\n', 'noOfInputs = int(input())\n', 'for i in range(noOfInputs):\n', '\tnumsInStr = input().split()\n', '\tnums = []\n', '\tfor n in numsInStr:\n', '\t\tnums.append(int(n))\n', '\n', '\tlargest = max(nums)\t\n', '\tnums.remove(max(nums))\n', '\t#print(nums)\n', '\n', '\tif (largest**2 == sum([i**2 for i in nums])):\n', ""\t\tprint('YES')\n"", '\telse:\n', ""\t\tprint('NO')""]","['S, T = input().split()\n', 'print(T + S)']",0
"['r,c,k=map(int,input().split())\n', 'lst=[[0]*(c+1) for i in range(r+1)]\n', 'for i in range(k):\n', '  s,t,u=map(int,input().split())\n', '  lst[s][t]=u\n', '\n', '\n', 'dp1=[[0]*(c+1) for i in range(r+1)]\n', 'dp2=[[0]*(c+1) for i in range(r+1)]\n', 'dp3=[[0]*(c+1) for i in range(r+1)]\n', '\n', 'for i in range(1,r+1):\n', '  for j in range(1,c+1):\n', '    dp1[i][j]=max(dp1[i][j-1],dp1[i-1][j]+lst[i][j],dp2[i-1][j]+lst[i][j],dp3[i-1][j]+lst[i][j])\n', '    dp2[i][j]=max(dp2[i][j-1],dp1[i][j-1]+lst[i][j])\n', '    dp3[i][j]=max(dp3[i][j-1],dp2[i][j-1]+lst[i][j])\n', '\n', 'print(max(dp1[-1][-1],dp2[-1][-1],dp3[-1][-1],0))\n']","['(h,n),*c=[[*map(int,i.split())]for i in open(0)]\n', 'd=[0]*20002\n', 'for i in range(h):d[i]=min(d[i-a]+b for a,b in c)\n', 'print(d[h-1])']",0
"['a = input()\n', ""print('a' if ord(a) >= ord('a') and ord(a)<=ord('z') else 'A')\n""]","['import itertools\n', 'import sys\n', 'sys.setrecursionlimit(10**9)\n', '\n', 'def mi(): return map(int,input().split())\n', 'def ii(): return int(input())\n', 'def isp(): return input().split()\n', 'def deb(text): print(""-------\\n{}\\n-------"".format(text))\n', '\n', '# x1+x2+x3+...xN = X (x>=0) \n', 'def nHk_list(N,X):\n', '    if N == 0: return []\n', '    elif N == 1: return [[X]]\n', '\n', '    border = [i for i in range(X+1)]\n', '    res = []\n', '    for S in itertools.combinations_with_replacement(border, N-1):\n', '        # print(S)\n', '        pre = 0\n', '        sub = []\n', '        for s in S:\n', '            sub.append(s-pre)\n', '            pre = s\n', '        sub.append(X-pre)\n', '        res.append(sub)\n', '    return res\n', '\n', '\n', 'INF=10**20\n', 'def main():\n', '    N=ii()\n', '    alphabet = [""a"",""b"",""c"",""d"",""e"",""f"",""g"",""h"",""i"",""j""]\n', '\n', '    ans = []\n', '    for c in range(1,N+1):\n', '        # print(""___\\nc"",c)\n', '        for X in nHk_list(c,N-c):\n', '            # print(""X:"",X,""c:"",c,""N-c:"",N-c)\n', '            V = []\n', '            for i in range(len(X)):\n', '                x = X[i]\n', '                V.append(list(itertools.product(alphabet[:i+1],repeat=x)))\n', '\n', '            # print(""V"",V)\n', '            U = itertools.product(*V)\n', '            base = alphabet[:c]\n', '            for u in U:\n', '                char = """"\n', '                for i in range(c):\n', '                    char += alphabet[i] + """".join(list(u[i]))\n', '        \n', '                ans.append(char)\n', '        \n', '    \n', '    ans.sort()\n', '    # ans.append("""".join(alphabet[:N]))\n', ""    print(*ans,sep='\\n')\n"", '\n', '            \n', '            \n', '\n', '        \n', '\n', 'if __name__ == ""__main__"":\n', '    main()']",0
"['\n', 'def s0():return input()\n', 'def s1():return input().split()\n', 'def s2(n):return [input() for x in range(n)]\n', 'def s3(n):return [input().split() for _ in range(n)]\n', 'def s4(n):return [[x for x in s] for s in s2(n)]\n', 'def n0():return int(input())\n', 'def n1():return [int(x) for x in input().split()]\n', 'def n2(n):return [int(input()) for _ in range(n)]\n', 'def n3(n):return [[int(x) for x in input().split()] for _ in range(n)]\n', 'def t3(n):return [tuple(int(x) for x in input().split()) for _ in range(n)]\n', 'def p0(b,yes=""Yes"",no=""No""): print(yes if b else no)\n', '# from sys import setrecursionlimit\n', '# setrecursionlimit(1000000)\n', '# from collections import Counter,deque,defaultdict\n', '# import itertools\n', '# import math\n', '# import networkx as nx\n', '# from bisect import bisect_left,bisect_right\n', '# from heapq import heapify,heappush,heappop\n', 'a,v=n1()\n', 'b,w=n1()\n', 't=n0()\n', '\n', 'ans=""NO""\n', 'if w<v:\n', '    k=(v-w)*t\n', '    if k>=abs(a-b):\n', '        ans=""YES""\n', 'print(ans)']","['n=int(input())\n', 'a=list(map(str,input().split()))\n', '\n', 'ab=a[:]\n', 'flg=True\n', 'i=0\n', 'while flg:\n', '    flg=False\n', '    for j in range(n-1,i,-1):\n', '        if ab[j][1]<ab[j-1][1]:\n', '            ab[j],ab[j-1]=ab[j-1],ab[j]\n', '            flg=True\n', '    i+=1\n', ""print(' '.join(map(str,ab)))\n"", ""print('Stable')\n"", '\n', 'ac=a[:]\n', 'for i in range(n):\n', '    minj=i\n', '    for j in range(i,n):\n', '        if ac[j][1]<ac[minj][1]:\n', '            j,minj=minj,j\n', '    if i!=minj:\n', '        ac[i],ac[minj]=ac[minj],ac[i]\n', ""print(' '.join(map(str,ac)))\n"", '\n', 'if ab==ac:\n', ""    print('Stable')\n"", 'else:\n', ""    print('Not stable')\n""]",0
"['# -*- coding: utf-8 -*-\n', '\n', 'import math\n', '\n', 'def main():\n', '  N = float(input())\n', '  print(int(math.pow(N,3)))\n', '\n', ""if __name__ == '__main__':\n"", '  main()']","['\n', ""if __name__ == '__main__':\n"", '\ts = input().split()\n', '\tif s[0] < s[1]:\n', '\t\ttmp = s[0]\n', '\t\ts[0] = s[1]\n', '\t\ts[1] = tmp\n', '\twhile True:\n', '\t\tx = int(s[0]) % int(s[1])\n', '\t\tif x==0:\n', '\t\t\tbreak\n', '\t\ts[0] = s[1]\n', '\t\ts[1] = x\n', '\n', '\tprint (s[1])\n', '\n', '\n']",0
"['while 1:\n', '\ta, op, b = input().split()\n', '\ta = int(a)\n', '\tb = int(b)\n', '\n', ""\tif op == '?': break\n"", ""\tif op == '+': print(a + b)\n"", ""\tif op == '-': print(a - b)\n"", ""\tif op == '*': print(a * b)\n"", ""\tif op == '/': print(a // b)""]","['a = list(map(int, input().split()))\n', 'kishou = a[0] * 60 + a[1]\n', 'shuusin = a[2] * 60 + a[3]\n', 'print(shuusin - kishou - a[4])']",0
"['def eq1(A,B,x):\n', '    temp = (A*x)\n', '    temp //= B\n', '    return temp\n', '\n', 'def eq2(A,B,x):\n', '    temp = x//B\n', '    temp = temp*A\n', '    return temp\n', '\n', 'def main():\n', '    A,B,N = map(int,input().split())\n', '\n', '    if B <= N:\n', '        x = B-1\n', '        ans = eq1(A,B,x) - eq2(A,B,x)\n', '        return ans\n', '    else:\n', '        x = N\n', '        ans = eq1(A,B,x) - eq2(A,B,x)\n', '        return ans\n', '\n', 'print(main())\n']","['k = int(input())\n', 's = input()\n', 'a = list(s.split())\n', 'if len(s) <= k:\n', '  print(s)\n', 'elif len(s) > k:\n', ""  print((s[0:k] + '...'))""]",0
"['cc = input().rstrip()\n', ""r = 'a' if ord('a') <= ord(cc) and ord(cc) <= ord('z') else 'A'\n"", 'print(r)\n']","['X = int(input())\n', 'ret = 0\n', 'cur = 0\n', 'while True:\n', '    ret += 1\n', '    cur += X\n', '    if cur % 360 == 0:\n', '        print(ret)\n', '        break\n']",0
"['N,K = map(int,input().split())\n', 'a = list(map(int,input().split()))\n', 'for i in range(1,N-K+1):\n', '    if a[K+i-1]>a[i-1]:\n', '        print(""Yes"")\n', '    else:\n', '        print(""No"")']","['now = int(input())\n', '\n', 'if now >= 30:\n', ""    print('Yes')\n"", 'else:\n', ""    print('No')\n""]",0
"['\n', '# ABC152\n', '\n', 'a, b = map(int, input().split())\n', 'print(min(str(a)*b, str(b)*a))\n']","['a,b=map(int,input().split())\n', '\n', 'if a>b:\n', '    if a%b==0:\n', '        gcd=b\n', '    else:\n', '        p=a\n', '        q=b\n', '        r=p%q\n', '        while r!=0:\n', '            p=q\n', '            q=r\n', '            r=p%q\n', '            if r==0:\n', '            \tgcd=q\n', '            \tbreak\n', 'elif a<b:\n', '    if b%a==0:\n', '    \tgcd=a\n', '    else:\n', '        p=b\n', '        q=a\n', '        r=p%q\n', '        while r!=0:\n', '            p=q\n', '            q=r\n', '            r=p%q\n', '            if r==0:\n', '            \tgcd=q\n', '            \tbreak\n', 'A=a//gcd\n', 'B=b//gcd\n', 'print(A*B*gcd)']",0
"['n, a, b = map(int, input().split())\n', '\n', 'set_num = n // (a + b)\n', 'remain_num = n - (a + b) * set_num\n', '\n', 'print(set_num * a + min(remain_num, a))\n']","['N = int(input())\n', 'cnt = 0\n', 'for a in range(1, N):\n', '    n = (N - 1) // a\n', '    cnt += n\n', '\n', 'print(cnt)\n']",0
"['#!usr/bin/env python3\n', '\n', 'def string_two_numbers_spliter():\n', '    a, b = [int(i) for i in input().split()]\n', '    return a, b\n', '\n', '\n', 'def main():\n', '    a, b = string_two_numbers_spliter()\n', '\n', '    if a < b:\n', ""        print('a < b')\n"", '    elif a > b:\n', ""        print('a > b')\n"", '    else:\n', ""        print('a == b')\n"", '\n', '\n', ""if __name__ == '__main__':\n"", '    main()']","['import math\n', 'a, b, h, m = map(int, input().split())\n', 'c = abs((60*h+m)*0.5 - m*6)\n', 'if c>180:\n', '    c=360-c\n', 'c=(a**2 + b**2 - 2*a*b*math.cos(math.radians(c)))**0.5\n', 'print(c)']",0
"['n,m,k=map(int,input().split())\n', 'a=list(map(int,input().split()))\n', 'b=list(map(int,input().split()))\n', 'asum=[0]\n', 'bsum=[0]\n', 'for i in range(n):\n', '    asum.append(asum[-1]+a[i])\n', 'for i in range(m):\n', '    bsum.append(bsum[-1]+b[i])\n', 'ans=0\n', 'for i in range(n+1):\n', '    if asum[i]>k:\n', '        break\n', '    while asum[i]+bsum[m]>k and m>0:\n', '        m-=1\n', '    ans=max(ans,i+m)\n', 'print(ans)']","['k = int(input())\n', 'l = []\n', 'for i in range(k):\n', ""    l.append('ACL')\n"", '\n', ""ans = ''.join(l)\n"", 'print(ans)']",0
"['N = int(input())\n', 'A = list(map(int, input().split()))\n', '\n', 'all_fav_num_xor = 0\n', 'for a in A:\n', '    all_fav_num_xor ^= a\n', '\n', 'l = [all_fav_num_xor ^ a for a in A]\n', '\n', 'print(*l)']","['a,b,c = input().split()\n', 'ti = [a,b,c]\n', 'ti.sort()\n', 'print(ti[0],ti[1],ti[2])\n']",0
"['H,N=map(int,input().split())\n', 'deathblows=map(int,input().split())\n', 'if sum(deathblows) >= H:\n', ""    print('Yes')\n"", 'else:\n', ""    print('No')""]","['#!python3\n', '\n', 'import sys\n', 'iim = lambda: map(int, sys.stdin.readline().rstrip().split())\n', '\n', 'def _cmb(N, mod):\n', '    N1 = N + 1\n', '    fact = [1] * N1\n', '    inv = [1] * N1\n', '\n', '    for i in range(2, N1):\n', '        fact[i] = fact[i-1] * i % mod\n', '\n', '    inv[N] = pow(fact[N], mod-2, mod)\n', '    for i in range(N-1, 1, -1):\n', '        inv[i] = inv[i+1]*(i+1) % mod\n', '\n', '    def cmb(a, b):\n', '        return fact[a] * inv[b] % mod * inv[a-b] % mod\n', '    return cmb\n', '\n', 'def resolve():\n', '    K = int(input())\n', '    s = input()\n', '    ls = len(s) - 1\n', '    mod = 10**9+7\n', '\n', '    cmb = _cmb(ls+K, mod)\n', '\n', '    ans = 0\n', '    pp = 1 * pow(26, K, mod) % mod\n', '    px = 25 * pow(26, mod-2, mod) % mod\n', '    for i in range(K+1):\n', '        ans = (ans + cmb(ls+i, ls) * pp % mod) % mod\n', '        pp = pp * px % mod\n', '    print(ans)\n', '\n', 'if __name__ == ""__main__"":\n', '    resolve()\n']",0
"['from collections import defaultdict\n', '\n', 'N = int(input())\n', 'A = list(map(int, input().split()))\n', 'Ai = [(i + 1) - a for i, a in enumerate(A)]\n', 'Aj = [(j + 1) + a for j, a in enumerate(A)]\n', 'cntAi = defaultdict(lambda: 0)\n', 'for ai in Ai:\n', '    cntAi[ai] += 1\n', '\n', 'ans = 0\n', 'for ai, aj in zip(Ai, Aj):\n', '    cntAi[ai] -= 1\n', '    ans += cntAi[aj]\n', 'print(ans)\n']","['x,y,a,b,c=map(int,input().split())\n', 'p=sorted(list(map(int,input().split())))[-x:]\n', 'q=sorted(list(map(int,input().split())))[-y:]\n', 'r=sorted(list(map(int,input().split())))[::-1]\n', '\n', 'i=j=k=0\n', 'oi=0\n', 'while i<c:\n', '  if x>j and y>k:\n', '    if p[j]>=q[k] and q[k]<r[i]:\n', '      q[k]=r[i]\n', '      k+=1\n', '      i+=1\n', '    elif p[j]<q[k] and p[j]<r[i]:\n', '      p[j]=r[i]\n', '      j+=1\n', '      i+=1\n', '  elif x>j:\n', '    if p[j]<r[i]:\n', '      p[j]=r[i]\n', '      j+=1\n', '      i+=1\n', '  elif y>k:\n', '    if q[k]<r[i]:\n', '      q[k]=r[i]\n', '      k+=1\n', '      i+=1\n', '  if oi==i:break\n', '  oi=i\n', '\n', 'print(sum(p)+sum(q))\n', '\n']",0
"['from collections import Counter\n', 'S = input()\n', 'S = S[::-1]\n', '# 1桁のmod2019, 2桁の2019, ...\n', '# 0桁のmod2019=0と定めると都合が良いので入れておく\n', 'l = [0]\n', 'num = 0\n', 'for i in range(len(S)):\n', '    # 繰り返し二乗法で累乗の部分を高速化\n', '    # 自分で書かなくてもpow()で既に実装されている\n', '    # 一つ前のmodを利用するとPythonで通せた、それをしなくてもPyPyなら通る\n', '    num += int(S[i]) * pow(10,i,2019)\n', '    l.append(num % 2019)\n', '# print(l)\n', 'ans = 0\n', 'c = Counter(l)\n', 'for v in c.values():\n', '    ans += v*(v-1)//2\n', 'print(ans)\n']","['x,y,a,b,c=map(int,input().split())\n', '*p,=sorted(map(int, input().split()))\n', '*q,=sorted(map(int, input().split()))\n', '*r,=map(int, input().split())\n', '\n', 'p=p[-x:]\n', 'q=q[-y:]\n', 'r=sorted(p+q+r)\n', 'print(sum(r[-x-y:]))']",0
"['def i1():\n', ' return int(input())\n', 'def i2():\n', ' return [int(i) for i in input().split()]\n', 'mod=10**9+7\n', 'def bp(a,n):\n', '        r=1\n', '        while(n):\n', '           if n%2:\n', '              r=r*a%mod\n', '           a=a*a%mod\n', '           n>>=1\n', '        return r\n', '[n,k]=i2()\n', 'if n<=k:\n', '   x=1\n', '   for i in range(n-1):\n', '      x*=2*n-1-i\n', '      x%=mod\n', '   y=1\n', '   for i in range(n-1):\n', '      y*=i+1\n', '      y%=mod\n', '   print((x*bp(y,10**9+5))%mod)   \n', '   \n', 'else:\n', '   x=1\n', '   y=1\n', '   t=1\n', '   for i in range(k):\n', '      t*=i+1\n', '      t%=mod\n', '      y*=n-1-i\n', '      y%=mod\n', '      y*=n-i\n', '      y%=mod\n', '      c=bp(t,10**9+5)\n', '      x+=y*c*c\n', '      x%=mod\n', '   print(x)   ']","['numbers = []\n', 'n = raw_input()\n', 'numbers = n.split("" "")\n', 'for i in range(3):\n', '\tnumbers[i] = int(numbers[i])\n', 'flag = 1\n', 'while flag:\n', '\tflag = 0\n', '\tfor i in range(2, 0, -1):\n', '\t\tif numbers[i] < numbers[i - 1]:\n', '\t\t\tnumbers[i], numbers[i - 1] = numbers[i - 1], numbers[i]\n', '\t\t\tflag = 1\n', ""print ' '.join([str(a) for a in numbers])""]",0
"['import math\n', '\n', 'n=input()\n', 'm=math.radians(60)\n', '\n', 'def kock(n, p1x, p1y, p2x, p2y):\n', '\n', '    \n', '    if(n == 0):\n', '        return\n', '\n', '    sx=(2*p1x+1*p2x)/3\n', '    sy=(2*p1y+1*p2y)/3\n', '    tx=(1*p1x+2*p2x)/3\n', '    ty=(1*p1y+2*p2y)/3\n', '\n', '    ux=(tx-sx)*math.cos(m)-(ty-sy)*math.sin(m)+sx\n', '    uy=(tx-sx)*math.sin(m)+(ty-sy)*math.cos(m)+sy\n', '\n', '\n', '    kock(n-1, p1x, p1y, sx, sy)\n', '    print round(sx,8),round(sy, 8)\n', '    kock(n-1, sx, sy, ux, uy)\n', '    print round(ux, 8),round(uy, 8)\n', '    kock(n-1, ux, uy, tx, ty)\n', '    print round(tx, 8),round(ty, 8)\n', '    kock(n-1, tx, ty, p2x, p2y)\n', '    \n', '\n', 'p1x = 0.00000000\n', 'p1y = 0.00000000\n', 'p2x = 100.00000000\n', 'p2y = 0.00000000\n', ' \n', 'print p1x, p1y\n', 'kock(n, p1x, p1y, p2x, p2y)\n', 'print p2x, p2y']","['n = int(input())\n', 'a = list(map(int, input().split()))\n', '\n', 'm = [0] * (n+1)\n', 'mx = 1\n', 'for i in range(n+1):\n', '    mx -= a[i]\n', '    m[i] = mx\n', '\n', '    if (mx <= 0 and i != n) or (mx < 0 and i == n):\n', '        print(-1)\n', '        exit()\n', '    mx *= 2\n', '\n', 'a.reverse()\n', 'm.reverse()\n', 'm[0] = a[0]\n', 'for i in range(1, n+1):\n', '    m[i] = min(m[i], m[i-1]) + a[i]\n', '\n', 'print(sum(m))\n']",0
"['#!/usr/bin/env python3\n', 'x, y = map(int, input().split())\n', 'ans = (x == y == 1) * 400000\n', 'ans += 100000 * max(0, 4 - x)\n', 'ans += 100000 * max(0, 4 - y)\n', 'print(ans)\n']","['import sys\n', 'sys.setrecursionlimit(10**9)\n', '\n', 'def mi(): return map(int,input().split())\n', 'def ii(): return int(input())\n', 'def isp(): return input().split()\n', 'def deb(text): print(""-------\\n{}\\n-------"".format(text))\n', '\n', 'INF=10**20\n', 'def main():\n', '    X=ii()\n', '\n', '    i = 1\n', '    yen = 100\n', '    while yen < X:\n', '        r =  yen // 100\n', '        yen += r\n', '        i += 1\n', '\n', '    print(i-1)\n', '\n', '\n', '\n', '\n', 'if __name__ == ""__main__"":\n', '    main()']",0
"['n,k = map(int, input().split())\n', '\n', 'al = list(map(int, input().split()))\n', '\n', 'for _ in range(min(100,k)):\n', '    imos = [0]*(n+1)\n', '    for i,a in enumerate(al):\n', '        l = max(0,i-a)\n', '        r = min(n,i+a+1)\n', '        imos[l] += 1\n', '        imos[r] -= 1\n', '    new_al = []\n', '    curr_val = 0\n', '    for im in imos[:-1]:\n', '        curr_val += im\n', '        new_al.append(curr_val)\n', '    al = new_al[:]\n', '\n', 'print(*al)']","['a=map(int, raw_input().split())\n', '\n', 'if a[0]<a[1]<a[2]:\n', '    print(""Yes"")\n', 'else :\n', '    print(""No"")']",0
"['#!/usr/bin/env python3\n', 'from networkx.utils import UnionFind\n', 'import sys\n', 'def input(): return sys.stdin.readline().rstrip()\n', '\n', '\n', 'def main():\n', '    n,m=map(int, input().split())\n', '    uf = UnionFind()\n', '    for i in range(1,n+1):\n', '        _=uf[i]\n', '    for _ in range(m):\n', '        a,b=map(int, input().split())\n', '        uf.union(a, b)  # aとbをマージ\n', '    print(len(list(uf.to_sets()))-1)\n', '    #for group in uf.to_sets():  # すべてのグループのリストを返す\n', '        #print(group)\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n', '\n']","['from math import gcd\n', 'from collections import defaultdict\n', 'MOD = 10**9+7\n', 'n = int(input())\n', 'cnt = defaultdict(lambda: [0, 0])\n', 'zeros = 0\n', 'for _ in range(n):\n', '    a, b = map(int, input().split())\n', '    if a == b == 0:\n', '        zeros += 1\n', '        continue\n', '    if a < 0:\n', '        a *= -1\n', '        b *= -1\n', '    g = gcd(a, b)\n', '    a //= g\n', '    b //= g\n', '    if b > 0:\n', '        cnt[(a, b)][0] += 1\n', '    else:\n', '        if a == 0 and b < 0:\n', '            cnt[(a, -b)][0] += 1\n', '        else:\n', '            cnt[(-b, a)][1] += 1\n', '\n', 'ans = 1\n', 'for v, v2 in cnt.values():\n', '    ans *= 1+pow(2, v, MOD)-1+pow(2, v2, MOD)-1\n', '    ans %= MOD\n', 'ans = (ans+zeros-1) % MOD\n', 'print(ans)\n']",0
"['n=list(map(int,input()))\n', 'if 7 in n:\n', '  print(""Yes"")\n', 'else:\n', '  print(""No"")\n']","['#dp\n', '\n', '#dp[T] T分での最大幸福 幸福度B、時間A\n', '\n', 'N,T = map(int,input().split())\n', '\n', 'li = [list(map(int,input().split())) for _ in  range(N)]\n', '\n', 'li = sorted(li,key=lambda x: x[0])\n', '\n', 'dp = [0]*T\n', 'counter = 0\n', 'for i in range(N-1):\n', '    A,B = li[i]\n', '    counter = max(counter,max(dp)+B)\n', '    if A>T-1:\n', '        continue\n', '    for t in range(T-A-1,-1,-1):\n', '        dp[t+A]=max(dp[t]+B,dp[t+A])\n', '\n', 'print(max(max(dp)+li[N-1][1],counter))\n']",0
"['(h, n), *m = [[*map(int, i.split())] for i in open(0)]\n', 'dp = [0] * 20001\n', 'for i in range(1, h + 1):\n', '    dp[i] = min(dp[i-a]+b for a, b in m)\n', 'print(dp[h])\n']","['import sys\n', 'from functools import reduce\n', '\n', '\n', 'def input():\n', '    return sys.stdin.readline()[:-1]\n', '\n', '\n', 'a, b, c, d = map(int, input().split())\n', 'ans1 = a * c\n', 'ans2 = b * d\n', 'ans3 = b * c\n', 'ans4 = a * d\n', 'print(max([ans1, ans2, ans3, ans4]))\n']",0
"['n, k = map(int, input().split())\n', 'wlist = []\n', 'for i in range(n):\n', '    wlist.append(int(input()))\n', '\n', 'ma = sum(wlist) + 1\n', 'mi = max(wlist) - 1\n', 'while (ma - mi > 1):\n', '    mid = (ma + mi)//2\n', '    truck = [0for i in range(k)] ## k개\n', '    i = 0\n', '    gobigger = 0\n', '    for w in wlist:\n', '        if(truck[i] + w <= mid):\n', '            truck[i] = truck[i] + w\n', '        else:\n', '            i = i+1\n', '            if (i == k):\n', '                gobigger = 1\n', '                break\n', '            truck[i] = truck[i] + w\n', '    if (gobigger == 1):\n', '        mi = mid\n', '    else:\n', '        ma = mid\n', '    \n', 'print(ma)\n', '        \n']","['H,W,M=map(int,input().split())\n', 'nh=[0]*H\n', 'nw=[0]*W\n', 'boms=set()\n', 'for _ in range(M):\n', '    h,w=map(int,input().split())\n', '    nh[h-1] += 1\n', '    nw[w-1] += 1\n', '    boms.add((h-1, w-1))\n', '\n', 'maxh = max(nh)\n', 'maxw = max(nw)\n', '\n', 'i_indexes=[]\n', 'for i in range(H):\n', '    if nh[i] == maxh:\n', '        i_indexes.append(i)\n', 'j_indexes=[]\n', 'for j in range(W):\n', '    if nw[j] == maxw:\n', '        j_indexes.append(j)\n', '\n', 'for i in i_indexes:\n', '    for j in j_indexes:\n', '        if (i,j) in boms:\n', '            continue\n', '        print(maxh + maxw)\n', '        exit()\n', 'print(maxh + maxw - 1)']",0
"['w = input().lower()\n', 'cnt = 0\n', 'while 1:\n', '  l = input().split()\n', '  if ""END_OF_TEXT"" in l: break\n', '  for e in l:\n', '    if e.lower() == w: cnt += 1\n', 'print(cnt)\n']","['# -*- coding: utf-8 -*-\n', '\n', 'def selection_sort(a, n):\n', '    count = 0\n', '    for i in range(n):\n', '        minj = i\n', '        for j in range(i+1, n):\n', '            if a[j] < a[minj]:\n', '                minj = j\n', '        a[i], a[minj] = a[minj], a[i]\n', '        if a[i] != a[minj]:\n', '            count += 1\n', '    return a, count\n', '\n', 'def main():\n', '    input_num = int(input())\n', '    input_list = [int(i) for i in input().split()]\n', '\n', '    ans_list, count = selection_sort(input_list, input_num)\n', '    for i in range(input_num):\n', '        if i != 0:\n', '            print("" "", end="""")\n', ""        print(ans_list[i], end='')\n"", '    print()\n', '    print(count)\n', '\n', ""if __name__ == '__main__':\n"", '    main()']",0
"['N,M=map(int,input().split())\n', 'ans=0\n', 'if N>1:\n', '  ans += N*(N-1)//2\n', 'else:\n', '  pass\n', 'if M>1:\n', '  ans += M*(M-1)//2\n', 'else:\n', '  pass\n', 'print(ans)']","['n,m,l=map(int,raw_input().split())\n', 'A=[]\n', 'B=[]\n', 'for i in range(n):\n', '    A.append(map(int,raw_input().split()))\n', 'for i in range(m):\n', '    B.append(map(int,raw_input().split()))\n', 'for i in range(n):\n', ""    print(' '.join(map(str,[sum([A[i][j]*B[j][k] for j in range(m)]) for k in range(l)])))""]",0
"['while True:\n', '    x_sum = sum([int(x) for x in raw_input()])\n', '    if x_sum == 0:\n', '        break\n', '    print x_sum']","['data = [None] * 4\n', 'for i in xrange(4):\n', '    data[i] = [None] * 3\n', '    for j in xrange(3):\n', '        data[i][j] = [0] * 10\n', '\n', 'n = input()\n', 'for i in xrange(n):\n', '    line = map(int, raw_input().split())\n', '    data[line[0] - 1][line[1] - 1][line[2] - 1] += line[3]\n', '\n', 'for i in xrange(4):\n', '    for j in xrange(3):\n', '        s = """"\n', '        for k in xrange(10):\n', ""            s += ' '\n"", '            s += str(data[i][j][k])\n', '        print s\n', '    if i < 3:\n', ""        print '#' * 20""]",0
"['while True:\n', '    x = []\n', '    x = input().split( )\n', '    y = [int(s) for s in x]\n', '    if sum(y) == -3:\n', '        break\n', '    if y[0] == -1 or y[1] == -1:\n', '        print(""F"")\n', '    elif y[0] + y[1] < 30:\n', '        print(""F"")\n', '    elif y[0] + y[1] >= 30 and y[0] + y[1] <50:\n', '        if y[2] >= 50:\n', '            print(""C"")\n', '        else:\n', '            print(""D"")\n', '    elif  y[0] + y[1] >= 50 and y[0] + y[1] <65:\n', '        print(""C"")\n', '    elif  y[0] + y[1] >= 65 and y[0] + y[1] <80:\n', '        print(""B"")\n', '    elif  y[0] + y[1] >= 80:\n', '        print(""A"")\n']","['_ = input()\n', 'arr = list(map(int, input().split()))\n', '\n', 'min = arr[0]\n', 'max = arr[0]\n', 'sum = 0\n', '\n', 'for a in arr:\n', '\tif a < min:\n', '\t\tmin = a\n', '\tif max < a:\n', '\t\tmax = a\n', '\tsum += a\n', '\n', 'print(min, max, sum)']",0
"['from sys import stdin\n', 'readline = stdin.buffer.readline\n', 'def r_map(): return map(int, readline().rstrip().split())\n', 'def r_list(): return list(r_map())\n', '\n', 'def main():\n', '    N = int(readline().rstrip())\n', '    A = r_list()\n', '    M = max(A)\n', '    d = [0] * (M + 1)\n', '    g = True\n', '    for a in A:\n', '        d[a] += 1\n', '    for i in range(2, M + 1):\n', '        c = sum(d[i::i])\n', '        if c == N:\n', '            print(""not coprime"")\n', '            exit()\n', '        elif c > 1:\n', '            g = False\n', '    if g:\n', ""        print('pairwise coprime')\n"", '    else:\n', ""        print('setwise coprime')\n"", '\n', 'if __name__ == ""__main__"":\n', '    main()\n']","['def bingo(appear):\n', '\tfor j in range(3):\n', '\t\tif appear[0][j] and appear[1][j] and appear[2][j]:\n', '\t\t\treturn ""Yes""\n', '\tfor i in range(3):\n', '\t\tif appear[i][0] and appear[i][1] and appear[i][2]:\n', '\t\t\treturn ""Yes""\n', '\tif appear[0][0] and appear[1][1] and appear[2][2]:\n', '\t\treturn ""Yes""\n', '\tif appear[0][2] and appear[1][1] and appear[2][0]:\n', '\t\treturn ""Yes""\n', '\treturn ""No""\n', '\n', '\n', 'card = []\n', 'for _ in range(3):\n', '\tarr = list(map(int, input().split()))\n', '\tcard.append(arr)\n', 'appear = [[False for _ in range(3)] for _ in range(3)]\n', 'n = int(input())\n', 'for _ in range(n):\n', '\ta = int(input())\n', '\tfor i in range(3):\n', '\t\tfor j in range(3):\n', '\t\t\tif a == card[i][j]:\n', '\t\t\t\tappear[i][j] = True\n', '\n', 'print(bingo(appear))']",0
"['print(""aA""[input().isupper()])']","['import sys\n', 'sr = lambda: sys.stdin.readline().rstrip()\n', 'ir = lambda: int(sr())\n', 'lr = lambda: list(map(int, sr().split()))\n', 'SIZE=4*10**5+1; MOD=10**9+7 #998244353 #ここを変更する\n', ' \n', 'SIZE += 1\n', 'inv = [0]*SIZE  # inv[j] = j^{-1} mod MOD\n', 'fac = [0]*SIZE  # fac[j] = j! mod MOD\n', 'finv = [0]*SIZE # finv[j] = (j!)^{-1} mod MOD\n', 'inv[1] = 1\n', 'fac[0] = fac[1] = 1\n', 'finv[0] = finv[1] = 1\n', 'for i in range(2,SIZE):\n', '    inv[i] = MOD - (MOD//i)*inv[MOD%i]%MOD\n', '    fac[i] = fac[i-1]*i%MOD\n', '    finv[i]= finv[i-1]*inv[i]%MOD\n', ' \n', 'def choose(n,r): # nCk mod MOD の計算\n', '    if 0 <= r <= n:\n', '        return (fac[n]*finv[r]%MOD)*finv[n-r]%MOD\n', '    else:\n', '        return 0\n', 'def resolve():\n', '    n, k = lr()\n', '    ans = choose(2*n-1, n)\n', '    if n-1 > k:\n', '        for i in range(1, n-k):\n', '            ans -= choose(n, i)*choose(n-1, n-i)\n', '            ans %= MOD\n', '    print(ans)\n', 'resolve()']",0
"['a,b,c = map(int,input().split())\n', 'print(""%d %d %d"" %(c,a,b))']","['s = input()\n', 't = input()\n', '\n', 'ans = 10 ** 8\n', 'for i in range(len(s)-len(t)+1):\n', '  check = 0\n', '  for j in range(len(t)):\n', '    if s[i+j] != t[j]:\n', '      check = check + 1\n', '  if ans > check:\n', '    ans = check\n', 'print(ans)']",0
"['import math\n', 'x = int(input())\n', 'ans =x\n', '\n', 'for j in range(x,2*x):\n', '  flag=1\n', '  for i in range(2,int(math.sqrt(x))+1):\n', '    if x%i==0:\n', '      flag=0\n', '  if flag==1:\n', '    print(x)\n', '    exit(0)\n', '  x+=1']","['n = int(input())\n', 'print(sum((n - 1) // i for i in range(1, n)))']",0
"['N = int(input())\n', 'X = list(map(int, input().split()))\n', 'assert len(X) == N\n', '# N人が点Xiに住んでいる\n', '# 任意の整数値の点で集会を開く\n', '# 2乗距離の体力を消耗\n', '\n', '# 点yで集会\n', 'def sum_power(y):\n', '  return sum([(x - y) * (x - y) for x in X])\n', '\n', 'import sys\n', 'minimum = sys.maxsize\n', 'for y in range(min(X), max(X)+1):\n', '  minimum = min(minimum, sum_power(y))\n', 'print(minimum)']","['n, m = map(int, input().split())\n', 'height = [int(i) for i in input().split()]\n', 'neighbors = {}\n', 'for _ in range(m):\n', '  a, b = map(int, input().split())\n', '  if a not in neighbors:\n', '    neighbors.update({a:set()})\n', '  if b not in neighbors[a]:\n', '    neighbors[a].add(b)\n', '  if b not in neighbors:\n', '    neighbors.update({b:set()})\n', '  if a not in neighbors[b]:\n', '    neighbors[b].add(a)\n', '#print(neighbors)\n', '#print(height)\n', 'count = 0\n', 'visited = set()\n', 'for std, s in neighbors.items():\n', '  flag = True\n', '  visited.add(std)\n', '  height_std = height[std - 1]\n', '  for each in s:\n', '    h = height[each - 1]\n', '    if height_std <= h:\n', '      flag = False\n', '      break\n', '  if flag:\n', '    count += 1\n', '#print(visited)\n', 'for i in range(n):\n', '  if i + 1 not in visited:\n', '    count += 1\n', 'print(count)']",0
"['n = int(input())\n', 'nums = list(map(int,input().split()))\n', 'nums.sort()\n', 'ans = 0\n', 'cnt = {}\n', 'flag = [0]*1000005\n', 'for i in nums:\n', '  cnt[i] = cnt.get(i,0) + 1\n', '\n', 'for i in nums:\n', '  if flag[i] == 0 and cnt[i] == 1:\n', '    ans += 1\n', '  if flag[i] == 1:\n', '    continue\n', '  for j in range(i,1000001,i):\n', '    flag[j] = 1\n', '\n', 'print(ans)']","['#!usr/bin/env python3\n', '\n', 'def string_three_numbers_spliter():\n', '    a, b, c = [int(i) for i in input().split()]\n', '    return a, b, c\n', '\n', '\n', 'def main():\n', '    a, b, c = string_three_numbers_spliter()\n', '\n', '    if a < b and a < c:\n', ""        print('Yes')\n"", '    else:\n', ""        print('No')\n"", '\n', '\n', ""if __name__ == '__main__':\n"", '    main()']",0
"['f,g,h=range,max,input\n', 'R,C,K=map(int,h().split())\n', 'G=[[0]*-~C for i in f(R+1)]\n', ""for i in'_'*K:r,c,v=map(int,h().split());G[r][c]=v\n"", 'F=[[[0]*-~C for i in f(R+1)]for i in f(4)]\n', 'for r in f(1,R+1):\n', '\tfor x in f(1,4):\n', '\t\tfor c in f(1,C+1):F[x][r][c]=g(F[x-1][r][c],F[x-1][r][c-1]+G[r][c],F[x][r][c-1],(x<2)*(G[r][c]+g(F[1][r-1][c],F[2][r-1][c],F[3][r-1][c])))\n', 'print(F[3][R][C])']","['N,K = map(int,input().split())\n', 'A = list(map(int,input().split()))\n', '\n', 'def f(n):\n', '    now = 0\n', '    for i in range(N):\n', '        now += (A[i]-1)//x\n', '    if now <= K:\n', '        return True\n', '    else:\n', '        return False\n', '\n', 'l = 0; r = 10**10\n', 'while r-l > 1:\n', '    x = (l+r)//2\n', '    if f(x):\n', '        r = x\n', '    else:\n', '        l = x\n', 'print(r)']",0
"['n=int(input())\n', 's=str(input())\n', 'd=True\n', '\n', 'if len(s)%2==0:\n', '  for i in range(len(s)//2):\n', '    if s[i]!=s[len(s)//2+i]:\n', '      d=False\n', 'else:\n', '  d=False\n', '  \n', 'if d:\n', ""  print('Yes')\n"", 'else:\n', ""  print('No')""]","['# rainy season\n', '\n', 'def rainy(S):\n', ""  if 'RRR' in S:\n"", '    return 3\n', ""  if 'RR' in S:\n"", '    return 2\n', ""  if 'R' in S:\n"", '    return 1\n', '  return 0\n', '\n', 'if __name__ == ""__main__"":\n', '  input = list(input().split())\n', '  print(rainy(input[0]))\n']",0
"['n = int(input())\n', 'res = 0\n', 'for i in range(1,n+1):\n', '  for j in range(1,n+1):\n', '    if i*j < n:\n', '      res += 1\n', '    else:\n', '        break\n', 'print(res)']","['while True:\n', '    h,w = map(int,input().split())\n', '    if h == w == 0:\n', '        break\n', '    for y in range(h):\n', '        for x in range(w):\n', '            if (y+x)%2 == 0:\n', '                print(\'#\',end="""")\n', '            if (y+x)%2 == 1:\n', '                print(\'.\',end="""")\n', '        print()\n', '    print()']",0
"['from collections import defaultdict\n', '\n', '\n', 'def dfs(N, tree, v):\n', '    s = []\n', '    done = [False for _ in range(N)]\n', '    dist = [0 for _ in range(N)]\n', '\n', '    done[v] = True\n', '    dist[v] = 0\n', '    s.append(v)\n', '\n', '    while 0 < len(s):\n', '        v = s.pop()\n', '\n', '        # process\n', '        # print(v, tree[v], dist[v])\n', '\n', '        for i in tree[v]:\n', '            if not done[i]:\n', '                done[i] = True\n', '                dist[i] = dist[v] + 1\n', '                s.append(i)\n', '\n', '    return dist\n', '\n', '\n', 'def main():\n', '    N, u, v = map(int, input().split())\n', '    u -= 1\n', '    v -= 1\n', '\n', '    tree = defaultdict(list)\n', '\n', '    for _ in range(N - 1):\n', '        A, B = map(int, input().split())\n', '        A -= 1\n', '        B -= 1\n', '\n', '        tree[A].append(B)\n', '        tree[B].append(A)\n', '\n', '    u_dist = dfs(N, tree, u)\n', '    v_dist = dfs(N, tree, v)\n', '    # print(u_dist)\n', '    # print(v_dist)\n', '\n', '    ans = 0\n', '    for u1, v1 in zip(u_dist, v_dist):\n', '        if u1 < v1:\n', '            ans = max(ans, v1 - 1)\n', '\n', '    print(ans)\n', '\n', '\n', 'main()\n']","['# -*- coding: utf-8 -*-\n', '\n', 'count = 0\n', 'backslash_index = []\n', 'area_pond = []\n', 'pending_area=[]\n', 'for index,symbol in enumerate(input()):\n', '\tif symbol == ""\\\\"":\n', '\t\tbackslash_index += [index]\n', ""\telif symbol == '/' and backslash_index:\n"", '\t\tlast_bs_index = backslash_index.pop()\n', '\t\tdiff = index - last_bs_index \n', '\t\tcount += diff \n', '\t\twhile area_pond and area_pond[-1] > last_bs_index:\n', '\t\t\tdiff += pending_area.pop()\n', '\t\t\tarea_pond.pop()\n', '\n', '\t\tarea_pond += [last_bs_index]\n', '\t\tpending_area += [diff]\n', '\n', 'print(count)\n', 'print(len(area_pond),*(pending_area))\n', ""#print(len(area_pond), ' '.join(map(str, pending_area)))\n"", '\n']",0
"['def merge(a,left,mid,right):\n', '    count=0\n', '    L=a[left:mid]+[float(""inf"")]\n', '    R=a[mid:right]+[float(""inf"")]\n', '    i,j=0,0\n', '    for k in range(left,right):\n', '        count+=1\n', '        if L[i]<=R[j]:\n', '            a[k]=L[i]\n', '            i+=1\n', '        else:\n', '            a[k]=R[j]\n', '            j+=1\n', '    return count\n', '\n', 'def mergeSort(a,left,right):\n', '    if left+1<right:\n', '        mid=(left+right)//2\n', '        countl=mergeSort(a,left,mid)\n', '        countr=mergeSort(a,mid,right)\n', '        return merge(a,left,mid,right)+countl+countr\n', '    return 0\n', '\n', '\n', '\n', 'n=int(input())\n', 'a=list(map(int,input().split()))\n', 'ans=mergeSort(a,0,n)\n', 'print("" "".join(map(str,a)))\n', 'print(ans)\n']","['#!/usr/bin/env python\n', '\n', 'import sys\n', 'input = sys.stdin.buffer.readline\n', 'sys.setrecursionlimit(10**6)\n', '\n', 'def main():\n', '    A,V = map(int,input().split())\n', '    B,W = map(int,input().split())\n', '    T = int(input())\n', '\n', '    dx = abs(A-B)\n', '    dv = V-W\n', '\n', '    if dv*T >= dx:\n', '        print(""YES"")\n', '    else:\n', '        print(""NO"")\n', '\n', 'if __name__ == ""__main__"":\n', '    main()']",0
"['n,m=map(int,input().split())\n', 'a = []\n', 'for i in range(n):\n', '    a.append(list(map(int, input().split())))\n', '    a[i]+=[sum(a[i])]\n', '    print(*a[i])\n', 'a=list(zip(*a[::-1]))\n', ""for i in range(m):print(sum(a[i]),end=' ')\n"", 'print(sum(a[m]))\n']","['def main():\n', '    N = int(input())\n', '    A = list(map(int, input().split()))\n', '    a0, a1, a2, b0, b1, b2 = 0, 0, 0, 0, 0, 0\n', '    for i, a in enumerate(A):\n', '        a0, a1, a2, b0, b1, b2 = (\n', '                b0,\n', '                max(b1, a0),\n', '                max(b2, a1),\n', '                a0 + a,\n', '                a1 + a if i >= 1 else a1,\n', '                a2 + a if i >= 2 else a2)\n', '\n', '    if N & 1:\n', '        return max(b2, a1)\n', '    else:\n', '        return max(b1, a0)\n', '\n', '\n', 'print(main())\n']",0
"['\n', 'a=int(input())\n', '\n', '\n', ""b=''\n"", 'for i in range(a):\n', ""    b=b+'ACL'\n"", '\n', '\n', 'print(b)\n']","['a,b,c=map(int,input().split())\n', 'd=[i for i in range(a,b+1)]\n', 'count=0\n', 'for i in d:\n', '    if c%i==0:\n', '        count+=1\n', 'print(count)']",0
"['def solve():\n', '    N, M = input().split()\n', '    return M+N\n', '\n', 'print(solve())']","['n=int(input())\n', 'print((n*n*n)/27)']",0
"['import sys\n', 'import numpy as np\n', 'from math import ceil as C, floor as F, sqrt\n', 'from collections import defaultdict as D, Counter as CNT\n', 'from functools import reduce as R\n', 'import heapq as H\n', '  \n', ""ALP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n"", ""alp = 'abcdefghijklmnopqrstuvwxyz'\n"", ""def _X(): return sys.stdin.readline().rstrip().split(' ')\n"", 'def _S(ss): return tuple(ss) if len(ss) > 1 else ss[0]\n', 'def S(): return _S(_X())\n', 'def Ss(): return list(S())\n', 'def _I(ss): return tuple([int(s) for s in ss]) if isinstance(ss, tuple) else int(ss)\n', 'def I(): return _I(S())\n', 'def _Is(ss): return list(ss) if isinstance(ss, tuple) else [ss]\n', 'def Is(): return _Is(I())\n', 'def rec(h, w): return [[0] * w for i in range(h)] \n', '\n', 'n = I()\n', 'xs = Is()\n', '\n', 'xs = sorted(xs, reverse=True)\n', '\n', 'seats = [-xs[0]]\n', 'H.heapify(seats)\n', '\n', 'ans = 0\n', 'for x in xs[1:]:\n', '  ans -= H.heappop(seats)\n', '  H.heappush(seats, -x)\n', '  H.heappush(seats, -x)\n', '\n', 'print(ans)']","['n1 = int(input())\n', '\n', 'r1 = n1 * n1\n', '\n', 'print(r1)\n']",0
"['h = int(input())\n', 'w = int(input())\n', 'n = int(input())\n', 'for i in range(min(h,w)):\n', '    n = n - max(h,w)\n', '    if n <= 0:\n', '        print(i + 1)\n', '        break']","['def main():\n', '    n, k = map(int, input().split())\n', '    MOD = 10 ** 9 + 7\n', '    ans = 0\n', '    cnt = [0] * (k + 1)\n', '    for i in range(1, k + 1):\n', '        cnt[i] = pow(k // i, n, MOD)\n', '    for i in range(k, 0, -1):\n', '        for j in range(2, k // i + 1):\n', '            cnt[i] -= cnt[i * j]\n', '    ans = 0\n', '    for i, c in enumerate(cnt):\n', '        ans += i * c\n', '        ans %= MOD\n', '    print(ans)\n', '    \n', '\n', ""if __name__ == '__main__':\n"", '    main()']",0
"['a, b = map(int, input().split())\n', 'c = str(a)*b\n', 'd = str(b)*a\n', 'my_list = [c, d]\n', 'my_list.sort()\n', 'print(my_list[0])']","['from sys import exit\n', 'n, m = map(int, input().split())\n', 's = input()\n', '\n', 'one_sequence = 0\n', 'for i in range(1, n):\n', '    if s[i] == ""1"":\n', '        one_sequence += 1\n', '        if one_sequence == m:\n', '            print(-1)\n', '            exit()\n', '    else:\n', '        one_sequence = 0\n', '\n', 'pos = n\n', 'ans = """"\n', 'while pos != 0:\n', '    for i in range(1, m+1)[::-1]:\n', '        if pos-i < 0:\n', '            continue\n', '        if s[pos-i] != ""1"":\n', '            ans = str(i) + "" "" + ans\n', '            pos -= i\n', '            break\n', 'print(ans)\n']",0
"['import sys\n', 'import math\n', '#from queue import *\n', '#import random\n', '#sys.setrecursionlimit(int(1e6))\n', 'input = sys.stdin.readline\n', ' \n', '############ ---- USER DEFINED INPUT FUNCTIONS ---- ############\n', 'def inp():\n', '    return(int(input()))\n', 'def inara():\n', '    return(list(map(int,input().split())))\n', 'def insr():\n', '    s = input()\n', '    return(list(s[:len(s) - 1]))\n', 'def invr():\n', '    return(map(int,input().split()))\n', '################################################################\n', '############ ---- THE ACTUAL CODE STARTS BELOW ---- ############\n', '\n', 'n=inp()\n', '\n', 'min1=min2=int(1e15)\n', 'max1=max2=-int(1e15)\n', '\n', 'for i in range(n):\n', '\tx,y=invr()\n', '\t\n', '\tmin1=min(min1,x+y)\n', '\tmin2=min(min2,x-y)\n', '\t\n', '\tmax1=max(max1,x+y)\n', '\tmax2=max(max2,x-y)\n', '\n', 'ans=max(max1-min1,max2-min2)\n', '\n', 'print(ans)\n']","['S = input()\n', 'n = len(S)+1\n', '\n', 'lr = []\n', 'num = []\n', 'a = S[0]\n', 'cnt = 0\n', 'for s in S:\n', '    if s == a:\n', '        cnt += 1\n', '    else:\n', '        num.append(cnt)\n', ""        if a == '<':\n"", '            lr.append(1)\n', '        else:\n', '            lr.append(0)\n', '        a = s\n', '        cnt = 1\n', 'num.append(cnt)\n', ""if a == '<':\n"", '    lr.append(1)\n', 'else:\n', '    lr.append(0)\n', '\n', 'ans = 0\n', 'if (len(lr) == 1 and lr[0] == 0) or (len(lr) > 1 and lr[0] == 0):\n', '    ans += (num[0]*(num[0]+1))//2\n', '    lr, num = lr[1:], num[1:]\n', 'if (len(lr) == 1 and lr[0] == 1) or (len(lr) > 1 and lr[-1] == 1):\n', '    ans += (num[-1]*(num[-1]+1))//2\n', '    lr.pop()\n', '    num.pop()\n', '\n', 'if not lr:\n', '    print(ans)\n', '    exit()\n', '\n', 'for i in range(0, len(lr), 2):\n', '    if num[i] == num[i+1]:\n', '        b = num[i]\n', '        c = num[i]\n', '    elif num[i] < num[i+1]:\n', '        b = num[i+1]\n', '        c = num[i]\n', '    else:\n', '        b = num[i]\n', '        c = num[i+1]\n', '    ans += (b*(b+1))//2 + ((c-1)*c)//2\n', 'print(ans)']",0
"['N=int(input())\n', 'S=[int(s) for s in input().split()]\n', 'for i in range(N):\n', '    if S[i]%2==0 and S[i]%5!=0 and S[i]%3!=0:\n', '        print(""DENIED"")\n', '        break\n', '    elif i==N-1:\n', '        print(""APPROVED"")']","['import sys\n', 'read = sys.stdin.buffer.read\n', 'readline = sys.stdin.buffer.readline\n', 'readlines = sys.stdin.buffer.readlines\n', 'sys.setrecursionlimit(10 ** 7)\n', '\n', 'from collections import Counter\n', '\n', 'n, p = map(int, readline().split())\n', 's = readline().rstrip().decode()\n', 'cnt = 0\n', 'if p == 2 or p == 5:\n', '    for i, ss in enumerate(s):\n', '        if int(ss) % p == 0:\n', '            cnt += (i + 1)\n', 'else:\n', '    memo = [0]\n', '    m = 0\n', '    d = 1\n', '    for ss in s[::-1]:\n', '        m += int(ss) * d\n', '        m %= p\n', '        d *= 10\n', '        d %= p\n', '        memo.append(m)\n', '    counter = Counter(memo)\n', '    for i in range(p + 1):\n', '        cnt += counter[i] * (counter[i] - 1) // 2\n', 'print(cnt)\n']",0
"['import collections\n', 'n = int(input())\n', 'num_list = list(map(int, input().split()))\n', 'all = 0\n', '\n', 'c = collections.Counter(num_list)\n', '\n', 'for i in c:\n', '    all += c[i]*(c[i]-1)//2\n', '\n', 'for k in range(n):\n', '    print(all - c[num_list[k]] + 1)']","['N = int(input())\n', 'total = 0\n', 'for n in range(1, N+1):\n', '  if (n % 3 > 0) and (n % 5 > 0):\n', '#    print(n)\n', '    total += n\n', 'print(total)']",0
"['n, k = map(int, input().split())\n', 'a = list(map(int, input().split()))\n', 'for i in range(n):\n', '    a[i] = a[i] % k\n', '\n', 'if k == 1:\n', '    print(0)\n', '    exit()\n', '\n', 'ruiseki = [0]\n', 'for i in range(n):\n', '    ruiseki.append((a[i]+ruiseki[-1])%k)\n', '\n', 'mini = 0\n', 'dic = {}\n', 'ans = 0\n', 'for j in range(1, n+1):\n', '    if j-k+1 > mini:\n', '        dic[(ruiseki[mini]-mini)%k] -= 1\n', '        mini += 1\n', '    if (ruiseki[j-1]-(j-1))%k in dic:\n', '        dic[(ruiseki[j-1]-(j-1))%k] += 1\n', '    else:\n', '        dic[(ruiseki[j-1]-(j-1))%k] = 1\n', '    if (ruiseki[j]-j)%k in dic:\n', '        ans += dic[(ruiseki[j]-j)%k]\n', 'print(ans)']","['data = list(input().split("" ""))\n', 'stack = []\n', 'for d in data:\n', ""    if d == '+':\n"", '        stack.append(stack.pop() + stack.pop())\n', ""    elif d == '-':\n"", '        stack.append(- stack.pop() + stack.pop())\n', ""    elif d == '*':\n"", '        stack.append(stack.pop() * stack.pop())\n', '    else:\n', '        stack.append(int(d))\n', 'print(stack[0])']",0
"['n = int(input())\n', '\n', 'def three_points(p1,p2):\n', '    q1 = ((2*p1[0]+p2[0])/3, (2*p1[1]+p2[1])/3)\n', '    q2 = ((p1[0]+2*p2[0])/3, (p1[1]+2*p2[1])/3)\n', '    dx,dy = p2[0]-p1[0], p2[1]-p1[1]\n', '    q3 = (p1[0]+dx/2-3**0.5/6*dy, p1[1]+dy/2+3**0.5/6*dx)\n', '    return [q1,q3,q2]\n', '\n', 'm = [(0,0),(100,0)]\n', 'for i in range(n):\n', '    tmpm = []\n', '    for j in range(len(m)-1):\n', '        tmpm += [m[j]] + three_points(m[j],m[j+1])\n', '    tmpm += [m[-1]]\n', '    m = tmpm\n', '\n', 'for x in m:\n', '    print(x[0], x[1])\n']","['n, m = map(int, input().split())\n', '\n', 'if m >= n:\n', '    print(""Yes"")\n', 'else:\n', ""    print('No')""]",0
"['import sys\n', 'from collections import deque\n', '\n', 'read = sys.stdin.read\n', 'readline = sys.stdin.readline\n', 'readlines = sys.stdin.readlines\n', 'sys.setrecursionlimit(10 ** 9)\n', 'INF = 1 << 60\n', 'MOD = 1000000007\n', '\n', '\n', 'def main():\n', '    N, p, q, *AB = map(int, read().split())\n', '    p -= 1\n', '    q -= 1\n', '\n', '    G = [[] for _ in range(N)]\n', '    for a, b in zip(*[iter(AB)] * 2):\n', '        G[a - 1].append(b - 1)\n', '        G[b - 1].append(a - 1)\n', '\n', '    if len(G[p]) == 1 and G[p][0] == q:\n', '        print(0)\n', '        return\n', '\n', '    dist1 = [-1] * N\n', '    dist1[p] = 0\n', '    queue = deque([p])\n', '    while queue:\n', '        v = queue.popleft()\n', '        for nv in G[v]:\n', '            if dist1[nv] == -1:\n', '                dist1[nv] = dist1[v] + 1\n', '                queue.append(nv)\n', '\n', '    dist2 = [-1] * N\n', '    dist2[q] = 0\n', '    queue = deque([q])\n', '    while queue:\n', '        v = queue.popleft()\n', '        for nv in G[v]:\n', '            if dist2[nv] == -1:\n', '                dist2[nv] = dist2[v] + 1\n', '                queue.append(nv)\n', '\n', '    max_d = 0\n', '    for d1, d2 in zip(dist1, dist2):\n', '        if d1 < d2 and max_d < d2:\n', '            max_d = d2\n', '\n', '    print(max_d - 1)\n', '    return\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']","['n, k = map(int, input().split())\n', 'a = list(map(int, input().split()))\n', 'dist = [-1] * n\n', '\n', 'i = 0\n', 'dist[0] = 0\n', 'while True:\n', '    nxt = a[i] - 1\n', '    if dist[nxt] >= 0:\n', '        if k > dist[nxt]:\n', '            k -= dist[nxt]\n', '            k %= dist[i] - dist[nxt] + 1\n', '            k += dist[nxt]\n', '        print(dist.index(k) + 1)\n', '        break\n', '    dist[nxt] = dist[i] + 1\n', '    i = nxt']",0
"['from functools import lru_cache\n', '@lru_cache(maxsize=None)\n', 'def solve(n):\n', '    if n == 1:\n', '        return 1\n', '    else:\n', '        return solve(n//2) * 2 + 1\n', 'H = int(input())\n', 'print(solve(H))\n']","['import sys\n', 'n = int(sys.stdin.read())\n', 'print(sum(i for i in range(1, n + 1) if i % 3 and i % 5))']",0
"['#!/usr/bin/env python3\n', '\n', 'a = input()\n', 'ans = ""a"" if a == a.lower() else ""A""\n', 'print(ans)\n']","['import math\n', '\n', 'def comb(n, r):\n', '    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\n', '\n', 's = int(input())\n', '\n', 'x = s // 3\n', 'ans = 0\n', 'for xi in range(1, x+1):\n', '    tmp = s - xi*3\n', '    ans += comb(tmp+xi-1, xi-1)\n', '    ans %= 1000000007\n', 'print(ans)\n']",0
"['def main():\n', '    from sys import setrecursionlimit, stdin, stderr\n', '    from os import environ\n', '    from collections import defaultdict, deque, Counter\n', '    from math import ceil, floor\n', '    from itertools import accumulate, combinations, combinations_with_replacement\n', '    setrecursionlimit(10**6)\n', '    dbg = (lambda *something: stderr.write(""\\033[92m{}\\033[0m"".format(str(something)+\'\\n\'))) if \'TERM_PROGRAM\' in environ else lambda *x: 0\n', '    input = lambda: stdin.readline().rstrip()\n', '    LMIIS = lambda: list(map(int,input().split()))\n', '    II = lambda: int(input())\n', '    P = 10**9+7\n', '    INF = 10**18+10\n', '    K = II()\n', '    S = input()\n', '    N = len(S)\n', '    def gencmb(n,k):\n', '        # N-1+K C K  ... N-1 C 0\n', '        ans = [1]*(k+1)\n', '        for i in range(1,k+1):\n', '            ans[-i-1] = ans[-i] * (N+i-1) * pow(i,P-2,P) % P\n', '        return ans\n', '    ans = 0\n', '    pow26 = [0] * (K+1)\n', '    pow26[0] = 1\n', '    for i in range(1,K+1):\n', '        pow26[i] = pow26[i-1] * 26 % P\n', '    pow25 = [0] * (K+1)\n', '    pow25[0] = 1\n', '    for i in range(1,K+1):\n', '        pow25[i] = pow25[i-1] * 25 % P\n', '    cmb = gencmb(N,K)\n', '    for t in range(K+1):\n', '        ans += pow26[t]*pow25[K-t]*cmb[t]%P\n', '        ans %= P\n', '    print(ans)\n', '\n', '    \n', 'main()']","[""(w, h, x, y, r) = input().rstrip().split(' ')\n"", 'w = int(w)\n', 'h = int(h)\n', 'x = int(x)\n', 'y = int(y)\n', 'r = int(r)\n', '\n', 'if 0 + r <= x <= w - r and 0 + r <= y <= h - r:\n', ""    print('Yes')\n"", 'else:\n', ""    print('No')""]",0
"['n = int(input())\n', 'l = list(map(int,input().split()))\n', '\n', 'h = 0\n', 'sum = 0\n', 'for i in range(n):\n', '    if l[i] <= h:\n', '        sum += h - l[i]\n', '    else:\n', '        h = l[i]\n', '\n', 'print(sum)\n']","['n = int(input())\n', 'lim_min, lim_max = map(int, input().split())\n', '\n', 'if lim_min % n == 0 :\n', ""  print('OK')\n"", 'elif lim_min + n - (lim_min % n) <= lim_max:\n', ""  print('OK')\n"", 'else:\n', ""  print('NG')\n""]",0
"['N = int(input())\n', 'A = list(map(int, input().split()))\n', '\n', 'kane=1000\n', 'kabu=0\n', 'for i in range(N-1):\n', '    #print(kane,kabu)\n', '    \n', '    if A[i]<A[i+1]:\n', '        kane=kabu*A[i]+kane\n', '        kabu=kane//A[i]\n', '        kane=kane-kabu*A[i]\n', '    else:\n', '        kane=kabu*A[i]+kane\n', '        kabu=0\n', '        \n', 'print(kane+kabu*A[N-1])']","['ele_and_tar = []\n', 'rs = []\n', 'flag1 = 1\n', 'flag2 = 0\n', 'while flag1:\n', '    data = [int(x) for x in input().split()]\n', '    if data == [0,0]:\n', '        flag1 = 0\n', '    else:\n', '        ele_and_tar.append(data)\n', '        \n', 'for i in range(len(ele_and_tar)):\n', '    rs.append(0)\n', 'for math in ele_and_tar:\n', '    for i in range(1,math[0]+1):\n', '        for j in range(i+1,math[0]+1):\n', '            for k in range(j+1,math[0]+1):\n', '                if (i + j + k) == math[1]:\n', '                    rs[flag2] = rs[flag2] + 1\n', '    flag2 = flag2 + 1\n', '    \n', 'for out in rs:\n', '    print(out)\n', '\n']",0
"['ini = lambda : int(input())\n', 'inm = lambda : map(int,input().split())\n', 'inl = lambda : list(map(int,input().split()))\n', 'gcd = lambda x,y : gcd(y,x%y) if x%y else y\n', 'def factorization(n):\n', '    arr = []\n', '    temp = n\n', '    for i in range(2, int(-(-n**0.5//1))+1):\n', '        if temp%i==0:\n', '            cnt=0\n', '            while temp%i==0:\n', '                cnt+=1\n', '                temp //= i\n', '            arr.append([i, cnt])\n', '    if temp!=1:\n', '        arr.append([temp, 1])\n', '    if arr==[]:\n', '        arr.append([n, 1])\n', '    return arr\n', 'def make_divisors(n):\n', '    divisors = []\n', '    for i in range(1, int(n**0.5)+1):\n', '        if n % i == 0:\n', '            divisors.append(i)\n', '            if i != n // i:\n', '                divisors.append(n//i)\n', '    divisors.sort()\n', '    return divisors\n', '\n', '#maincode-------------------------------------------------\n', 'n = ini()\n', 's = input()\n', ""r = s.count('R')\n"", ""g = s.count('G')\n"", ""b = s.count('B')\n"", 'ans = r*g*b\n', '\n', 'for j in range(n):\n', '    for i in range(j):\n', '        k = 2*j-i\n', '        if k < n:\n', '            if (s[i] == s[j]):\n', '                continue\n', '            if (s[i] == s[k]):\n', '                continue\n', '            if (s[j] == s[k]):\n', '                continue\n', '            ans -= 1\n', 'print(ans)']","['n = int(input())\n', 'ans = [0 for x in range(10001)]\n', '\n', 'for i in range(1, 100):\n', '    for j in range(1, 100):\n', '        for k in range(1, 100):\n', '            v = i*i + j*j + k*k + i*j + i*k + j*k\n', '            if v < 10001:\n', '                ans[v] += 1\n', 'for i in range(n):\n', '    print(ans[i+1])']",0
"['N = int(input())\n', 'A = [0]*N\n', 'A = list(map(int, input().split()))\n', ' \n', 'sum_step = 0\n', ' \n', 'for n in range(1,N):\n', '  if A[n] < A[n-1]:\n', '    sum_step += A[n-1] - A[n]\n', '    A[n] = A[n-1]\n', '\n', 'print(sum_step)']","['from sys import stdin\n', 'import numpy as np\n', 'def main():\n', '    #入力\n', '    readline=stdin.readline\n', '    n,k=map(int,readline().split())\n', '    A=np.array(list(map(int,readline().split())),dtype=np.int64)\n', '    A=np.sort(A)[::-1]\n', '    F=np.array(list(map(int,readline().split())),dtype=np.int64)\n', '    F=np.sort(F)\n', '\n', '    l=-1\n', '    r=10**12\n', '    while l<r-1:\n', '        x=(l+r)//2\n', '        A_after=np.minimum(x//F,A)\n', '        cnt=(A-A_after).sum()\n', '        if cnt<=k: r=x\n', '        else: l=x\n', '\n', '    print(r)\n', '\n', 'if __name__==""__main__"":\n', '    main()']",0
"['text = input()\n', '\n', ""result = ''\n"", 'for i in range(len(text)):\n', '    code = ord(text[i])\n', ""    if ord('A') <= code <= ord('Z'):\n"", '        result += chr(code + 32)\n', ""    elif ord('a') <= code <= ord('z'):\n"", '        result += chr(code - 32)\n', '    else:\n', '        result += chr(code)\n', '\n', 'print(result)']","['#!/usr/bin/env python3\n', 'import sys\n', 'input = sys.stdin.readline\n', 'import bisect\n', '\n', 'n, m = map(int, input().split())\n', 'a = [int(item) for item in input().split()]\n', 'a.sort()\n', 'a_rev = sorted(a, reverse=True)\n', '\n', 'cumsum = [0]\n', 'for item in a:\n', '    cumsum.append(cumsum[-1] + item)\n', '\n', '# Use pair which sum goes over mid\n', 'l = 0; r = 10**10\n', 'while r - l > 1:\n', '    mid = (l + r) // 2\n', '    to_use = 0\n', '    for i, item in enumerate(a_rev):\n', '        useless = bisect.bisect_left(a, mid - item)\n', '        to_use += n - useless\n', '    if to_use >= m:\n', '        l = mid\n', '    else:\n', '        r = mid\n', 'ans = 0\n', 'total_use = 0\n', 'for i, item in enumerate(a_rev):\n', '    useless = bisect.bisect_left(a, l - item)\n', '    to_use = n - useless\n', '    total_use += to_use\n', '    ans += item * to_use + cumsum[n] - cumsum[n - to_use]\n', 'print(ans - l * (total_use - m))']",0
"['n = int(input())\n', '\n', 'a = list(map(int,input().split()))\n', 'a = sorted(a)\n', '\n', 'aMax = a[-1]\n', 'l = len(a)\n', 'count = 0\n', 'k = 0\n', 'kSet = set()\n', '\n', 'for i in range(n):\n', '    value = a[i]\n', '    if not(value in kSet):\n', '        if i != 0 and a[i-1] == value:\n', '            count -= 1\n', '            kSet.add(value)\n', '            continue\n', '        count += 1\n', '        j = 2\n', '        k = 0\n', '        while k < aMax:\n', '            k = a[i] * j\n', '            kSet.add(k)\n', '            j += 1\n', '\n', 'print(count)']","['n,k=map(int,input().split())\n', 'd=0\n', 'for i in range(k,n+2):\n', '    b=i*(i-1)/2\n', '    c=i*(2*n-i+1)/2\n', '    d+=(c-b+1)\n', 'print(int(d)%(10**9+7))']",0
"['\n', ""if __name__ == '__main__':\n"", '\ts = input().split()\n', '\tif s[0] < s[1]:\n', '\t\ttmp = s[0]\n', '\t\ts[0] = s[1]\n', '\t\ts[1] = tmp\n', '\twhile True:\n', '\t\tx = int(s[0]) % int(s[1])\n', '\t\tif x==0:\n', '\t\t\tbreak\n', '\t\ts[0] = s[1]\n', '\t\ts[1] = x\n', '\n', '\tprint (s[1])\n', '\n', '\n']","['N,M=map(int,input().split())\n', 'par=[i for i in range(N+1)]\n', 'size=[1 for i in range(N+1)]\n', 'def find(x):\n', '    if x!=par[x]:\n', '        par[x]=find(par[x])\n', '    return par[x]\n', 'def union(x,y):\n', '    if find(x)!=find(y):\n', '        x, y = par[x], par[y]\n', '        par[y] = par[x]\n', '        size[x] += size[y]\n', 'res=N\n', 'for i in range(M):\n', '    s,e=map(int,input().split())\n', '    union(s,e)\n', 'print(max(size))']",0
"['def main():\n', '    H,W,M = map(int,input().split())\n', '    s = []\n', '    h_cnt = [0 for i in range(H)]\n', '    w_cnt = [0 for i in range(W)]\n', '    for i in range(M):\n', '        h,w = map(int,input().split())\n', '        s.append([h-1,w-1])\n', '        h_cnt[h-1] += 1\n', '        w_cnt[w-1] += 1\n', '    h_m,w_m = max(h_cnt), max(w_cnt)\n', '    h_mp,w_mp = [],[]\n', '    for i in range(H):\n', '        if h_cnt[i] == h_m:\n', '            h_mp.append(i)\n', '    for i in range(W):\n', '        if w_cnt[i] == w_m:\n', '            w_mp.append(i)\n', '    f = 0\n', '    for i in range(M):\n', '        if h_cnt[s[i][0]] == h_m and w_cnt[s[i][1]] == w_m:\n', '            f += 1\n', '    if len(w_mp)*len(h_mp)-f<1:\n', '        print(h_m+w_m-1)\n', '    else:\n', '        print(h_m+w_m)\n', '\n', 'if __name__ == ""__main__"":\n', '    main()\n']","['import sys\n', 'from collections import defaultdict, deque, Counter\n', 'import math\n', '\n', '# import copy\n', 'from bisect import bisect_left, bisect_right\n', 'import heapq\n', '\n', '# sys.setrecursionlimit(1000000)\n', '\n', '# input aliases\n', 'input = sys.stdin.readline\n', '\n', 'getS = lambda: input().strip()\n', 'getN = lambda: int(input())\n', 'getList = lambda: list(map(int, input().split()))\n', 'getZList = lambda: [int(x) - 1 for x in input().split()]\n', '\n', 'INF = 10 ** 20\n', 'MOD = 10**9 + 7\n', 'divide = lambda x: pow(x, MOD-2, MOD)\n', '\n', '\n', 'def nck(n, k, kaijyo):\n', '    return (npk(n, k, kaijyo) * divide(kaijyo[k])) % MOD\n', '\n', '\n', 'def npk(n, k, kaijyo):\n', '    if k == 0 or k == n:\n', '        return n % MOD\n', '    return (kaijyo[n] * divide(kaijyo[n-k])) % MOD\n', '\n', '\n', 'def kaijyo(n):\n', '    ret = [1]\n', '    for i in range(1, n + 1):\n', '        ret.append((ret[-1] * i)% MOD)\n', '    return ret\n', '\n', '\n', 'def cut(pt, grid, k, h, w):\n', '    pat = []\n', '    for i in range(h-1):\n', '        if pt % 2 == 1:\n', '            pat.append(""1"")\n', '        else:\n', '            pat.append(""0"")\n', '        pt //= 2\n', '\n', '    # print(""pat"", pat)\n', '    slice = Counter(pat)[""1""]\n', '    pat = pat + [""0""]\n', '    white = [0] * (slice + 1)\n', '    ret = 0\n', '    for i in range(w):\n', '        tw = [0] * (slice + 1)\n', '        dan = 0\n', '        for j in range(h):\n', '            if grid[j][i] == ""1"":\n', '                tw[dan] += 1\n', '            if pat[j] == ""1"":\n', '                dan += 1\n', '\n', '        if max(tw) > k:\n', '            return INF\n', '        reset = False\n', '        for w1, w2 in zip(white, tw):\n', '            if w1 + w2 > k:\n', '                ret += 1\n', '                reset = True\n', '                break\n', '        if reset:\n', '            white = tw\n', '        else:\n', '            for up in range(slice + 1):\n', '                white[up] += tw[up]\n', '\n', '    return ret + slice\n', '\n', 'def solve():\n', '    h, w, k = getList()\n', '    grid = []\n', '    for i in range(h):\n', '        grid.append(getS())\n', '\n', '    ans = INF\n', '    for i in range(2 ** (h-1)):\n', '        tmp = cut(i, grid, k, h, w)\n', '        # print(tmp)\n', '        ans = min(ans, tmp)\n', '    print(ans)\n', '\n', '\n', 'def main():\n', '    n = getN()\n', '    for _ in range(n):\n', '        solve()\n', '\n', '\n', 'if __name__ == ""__main__"":\n', '    # main()\n', '    solve()']",0
"['import itertools\n', '\n', 'n, m, q = map(int, input().split())\n', 'lst = []\n', 'for _ in range(q):\n', '  l = [int(i) for i in input().split()]\n', '  lst.append(l)\n', '\n', 'lists = list(itertools.combinations_with_replacement(range(1, m+1), n))\n', '#print(lists)\n', 'max_point = 0\n', 'for each in lists:\n', '  point = 0\n', '  for i in range(q):\n', '    l = lst[i]\n', '    a = l[0] - 1\n', '    b = l[1] - 1\n', '    c = l[2]\n', '    if each[b] - each[a] == c:\n', '      point += l[3]\n', '  if point > max_point:\n', '    max_point = point\n', 'print(max_point)']","['n,p = map(int,input().split())\n', 's = input()\n', 'ans = 0\n', 'if p == 2 or p == 5:\n', '    for i,c in enumerate(s,1):\n', '        if int(c)%p == 0: ans += i\n', 'else:\n', '    cnt = [0]*p\n', '    cnt[0] = 1\n', '    x = 0\n', '    d = 1\n', '    for c in s[::-1]:\n', '        x += d*int(c)\n', '        x %= p\n', '        cnt[x%p] += 1\n', '        d *= 10\n', '        d %= p\n', '    # print(cnt)\n', '    for v in cnt: ans += v*(v-1)//2\n', 'print(ans)']",0
"[""n = '1, 1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 5, 1, 2, 1, 14, 1, 5, 1, 5, 2, 2, 1, 15, 2, 2, 5, 4, 1, 4, 1, 51'\n"", ""nn = n.split(', ')\n"", 'nn = list(map(int, nn))\n', '\n', 'K = int(input())\n', '\n', 'print(nn[K-1])']","['\n', 'def merge(a, left, mid, right):\n', '    x = 0\n', '    l = a[left:mid] + [float(""inf"")]\n', '    r = a[mid:right] + [float(""inf"")]\n', '    i = 0\n', '    j = 0\n', '    for k in range(left,right):\n', '        if l[i] <= r[j]:\n', '            a[k] = l[i]\n', '            i += 1\n', '        else :\n', '            a[k] = r[j]\n', '            j += 1\n', '        x += 1\n', '    return x\n', '\n', 'def mergeSort(a, left, right,x):\n', '    if left+1 < right:\n', '        mid = int((left + right)/2)\n', '        mergeSort(a, left, mid,x)\n', '        mergeSort(a, mid, right,x)\n', '        x[0] += merge(a, left, mid, right)\n', '\n', 'n = int(input())\n', 's = list(map(int,input().split()))\n', 'x = [0]\n', 'mergeSort(s,0,n,x)\n', 'print(*s)\n', 'print(x[0])\n', '\n', '\n']",0
"['a,b,c=map(int,input().split())\n', 'if a==b==c or (a!=b!=c and a!=c!=b):\n', '    print(""No"")\n', 'else:\n', '    print(""Yes"")\n']","['N = int(input())\n', '\n', 'jage = ""No""\n', 'for l in range(1, 10):\n', '    for r in range(1,10):\n', '        if N == r * l:\n', '            jage = ""Yes""\n', 'print(jage)']",0
"['import numpy as np\n', 'n,m,x = map(int,input().split())\n', 'value = []\n', 'books = []\n', 'for i in range(n):\n', '    a = list(map(int,input().split()))\n', '    value.append(a[0])\n', '    books.append(np.array(a[1:]))\n', 'if min(sum(books))<x:\n', '    print(-1)\n', 'else:\n', '    ans = 10**8\n', '    for i in range(2**n):\n', '        M = np.array([0]*m)\n', '        v = 0\n', '        for j in range(n):\n', '            if i >> j & 1:\n', '                M += books[j]\n', '                v += value[j]\n', '        if min(M)>= x:\n', '            ans = min(ans,v)\n', '    print(ans)']","['N = int(input())\n', 'S = input()\n', '\n', ""print('Yes' if S[:len(S)//2] == S[len(S)//2:] else 'No')""]",0
"['while True:\n', '    h, w=map(int, input().split())\n', '    if h == 0 and w==0: break\n', '    print(""#""*w)\n', '    for i in range(h-2):\n', '        print(""#""+"".""*(w-2)+""#"")\n', '    print(""#""*w)\n', '    print()\n']","['class Element:\n', '    def __init__(self, x):\n', '        self.x = x\n', '        self.lh = None\n', '        self.rh = None\n', '\n', 'class MyDeque:\n', '    def __init__(self):\n', '        self.top = self.tail = None\n', '    \n', '    def insert(self, x):\n', '        elm = Element(x)\n', '        if self.top is None:\n', '            self.top = self.tail = elm\n', '        else:\n', '            elm.rh = self.top\n', '            self.top.lh = self.top = elm\n', '        \n', '    def delete(self, x):\n', '        elm = self.top\n', '        while elm is not None:\n', '            if elm.x == x:\n', '                if elm.lh is None and elm.rh is None:\n', '                    self.top = self.tail = None\n', '                else:    \n', '                    if elm.lh is None:\n', '                        self.top = elm.rh\n', '                    else:\n', '                        elm.lh.rh = elm.rh\n', '                        \n', '                    if elm.rh is None:\n', '                        self.tail = elm.lh\n', '                    else:\n', '                        elm.rh.lh = elm.lh\n', '                break\n', '            \n', '            elm = elm.rh\n', '            \n', '    def delete_first(self):\n', '        if self.top is self.tail:\n', '            self.top = self.tail = None\n', '        else:\n', '            self.top = self.top.rh\n', '            self.top.lh = None\n', '                \n', '    def delete_last(self):\n', '        if self.top is self.tail:\n', '            self.top = self.tail = None\n', '        else:\n', '            self.tail = self.tail.lh\n', '            self.tail.rh = None\n', '                \n', '    \n', '    def print_que(self):\n', '        elm = self.top\n', '        q=[]\n', '        while elm is not None:\n', '            q.append(elm.x)\n', '            elm = elm.rh\n', '        print(*q)\n', '\n', 'from sys import stdin\n', '\n', 'que = MyDeque()\n', 'N = int(input())\n', 'for _ in range(N):\n', '    cmd = stdin.readline().strip().split()\n', ""    if cmd[0] == 'insert':\n"", '        que.insert(cmd[1])\n', '        #que.print_que()        \n', '        \n', ""    elif cmd[0] == 'delete':\n"", '        que.delete(cmd[1])\n', '        #que.print_que()\n', '        \n', ""    elif cmd[0] == 'deleteFirst':\n"", '        que.delete_first()\n', '        #que.print_que()\n', '        \n', ""    elif cmd[0] == 'deleteLast':\n"", '        que.delete_last()\n', '        #que.print_que()\n', '    \n', 'que.print_que()\n']",0
"['S = list(""abcdefghijklmnopqrstuvwxyz"")\n', '\n', 'N = int(input())\n', '\n', 'P = 0\n', '\n', 'for i in range(1,15):\n', '    if P+26**i >= N:\n', '        n = i\n', '        break\n', '    else:\n', '        P += 26**i\n', '        \n', 'X = [0]*n\n', '\n', 'NN = N - P - 1###0-indexedの26進法なので\n', 'for i in range(n):\n', '    X[n-i-1] = S[NN % 26]\n', '    NN //= 26\n', '\n', 'print("""".join(X))\n', '\n']","['from collections import defaultdict\n', 'INF = -1000000000000001\n', '\n', 'n = int(input())\n', 'l = list(map(int, input().split()))\n', '\n', 'a = int(n/2)\n', '\n', 'dpa = defaultdict(lambda: -INF)\n', '#dpa = [[0 for j in range(a+1)] for i in range(n+1)]\n', '\n', 'dpa[(0,0)] = 0\n', 'dpa[(1,0)] = 0\n', 'dpa[(1,1)] = l[0]\n', 'j = 1\n', 'for i in range(2,n+1):\n', '\tif i == j*2:\n', '\t\tdpa[(i,j)] = max(dpa[(i-2,j-1)]+l[i-1],dpa[(i-1,j)])\n', '#\t\tprint(i,j,dpa[(i,j)])\n', '\telse:\n', '\t\tdpa[(i,j)] = max(dpa[(i-2,j-1)]+l[i-1],dpa[(i-1,j)])\n', '#\t\tprint(i,j,dpa[(i,j)])\n', '\t\tif (i != n):\n', '\t\t\tj += 1\n', '#\t\t\tprint(i,j,dpa[(i,j)])\n', '#\t\t\tprint(""   "",i-2,j-1,dpa[(i-2,j-1)],"""")\n', '\t\t\tdpa[(i,j)] = dpa[(i-2,j-1)]+l[i-1]\n', '\n', '#print(dpa)\n', 'print(dpa[n,a])']",0
"['r, c = map(int, input().split())\n', '\n', 'rows = []\n', 'for i in range(r):\n', '    row = list(map(int, input().split()))\n', '    row.append(sum(row))\n', '    rows.append(row)\n', '\n', 'erow = [0 for i in range(c + 1)]\n', 'for row1 in rows:\n', '    print("" "".join(str(s) for s in row1))\n', '    for i in range(c + 1):\n', '        erow[i] += row1[i]\n', '\n', 'print("" "".join(str(s) for s in erow))']","['s=int(input())\n', 't=1 if s>=3 else 0\n', 'M=10**9+7\n', 'S=[1]+[0]*2000\n', '\n', 'def cmb(n,r):\n', '  c,m=1,1\n', '  for i in range(1,r+1):\n', '    c=c*(n-i+1)%M\n', '    m=m*i%M\n', '  return c*pow(m,M-2,M)%M\n', '\n', 'for i in range(2,s//3+1):\n', '  t=(t+cmb(s-2*i-1,i-1))%M\n', '\n', 'print(t)\n']",0
"['#!/usr/bin/env python\n', '# coding: utf-8\n', '\n', '# In[1]:\n', '\n', '\n', 'N = int(input())\n', '\n', '\n', '# In[15]:\n', '\n', '\n', 'def func(i,j,N):\n', '    ans = []\n', '    for x in range(1,N+1):\n', '        x_ = str(x)\n', '        if x_[0] == str(i) and x_[-1] == str(j):\n', '            ans += [x]\n', '    return ans\n', '\n', '\n', '# In[23]:\n', '\n', '\n', 'ans = 0\n', 'for i in range(10):\n', '    for j in range(10):\n', '        ans += len(func(i,j,N))*len(func(j,i,N))\n', 'print(ans)\n', '\n', '\n', '# In[ ]:\n', '\n', '\n', '\n', '\n']","['count = 1\n', 'while True:\n', '    x = int(input())\n', '    if x is not 0:\n', '        print(""Case {c}: {x}"".format(c=count, x=x))\n', '    else:\n', '        break\n', '    count += 1\n', '\n']",0
"['n = int(input())\n', 'x = list(map(int,input().split()))\n', 'a = min(x)\n', 'b = max(x) + 1\n', 'ans = 10 ** 8\n', 'for p in range(a,b):\n', '    m = 0\n', '    for i in range(n):\n', '        m += (x[i] - p) ** 2\n', '    ans = min(ans,m)\n', 'print(ans)']","['k = int(input())\n', 'a,b = map(int, input().split())\n', '\n', 'def judge(a,b):\n', '    for i in range(a,b+1):\n', ""        if i%k == 0: return 'OK'\n"", ""    return 'NG'\n"", '\n', 'print(judge(a,b))']",0
"['r = input()\n', 'suq = int(r) * int(r)\n', 'print(suq)']","['h,a = [int(i) for i in input().split()]\n', '\n', 'cont=0\n', '\n', 'while h > 0:\n', '    h-=a\n', '    cont+=1\n', 'print(cont)\n']",0
"['# coding: utf-8\n', '\n', 'def bubble_sort(A, N):\n', '    C = list(A)\n', '    for i in xrange(N):\n', '        for j in reversed(xrange(i+1, N)):\n', '            if C[j][1] < C[j-1][1]:\n', '                C[j], C[j-1] = C[j-1], C[j]\n', '    return C\n', '\n', 'def selection_sort(A, N):\n', '    C = list(A)\n', '    for i in xrange(N):\n', '        minj = i\n', '        for j in xrange(i, N):\n', '            if C[j][1] < C[minj][1]:\n', '                minj = j\n', '        C[i], C[minj] = C[minj], C[i]\n', '    return C\n', '\n', 'def is_stable(a, c, n):\n', '    for i in xrange(n-1):\n', '        if c[i][1] == c[i+1][1]:\n', '            if a.index(c[i]) > a.index(c[i+1]):\n', '                print ""Not stable""\n', '                return False\n', '    print ""Stable""\n', '    return True\n', '\n', 'def print_c(c):\n', '    print "" "".join(map(lambda c:c[0] + str(c[1]), c))\n', '\n', 'def main():\n', '    n = input()\n', '    c = map(lambda c:(c[0], int(c[1:])), raw_input().split())\n', '    bubble = bubble_sort(c, n)\n', '    selection = selection_sort(c, n)\n', '    print_c(bubble)\n', '    is_stable(c, bubble, n)\n', '    print_c(selection)\n', '    is_stable(c, selection, n)\n', '\n', 'main()']","['N = int(input())\n', 'Alst = list(map(int, input().split()))\n', 'Blst = [0]*(N+1)\n', 'num = 0\n', 'for i in Alst:\n', '    num = num + Blst[i]\n', '    Blst[i] += 1\n', '\n', 'for i in Alst:\n', '    k = Blst[i] -1\n', '    print(num - k)']",0
"['def main():\n', '    s = input()\n', '    ok = False\n', '    hi = """"\n', '    for _ in range(5):\n', '        hi += ""hi""\n', '        if s == hi:\n', '            ok = True\n', '    if ok:\n', '        print(""Yes"")\n', '    else:\n', '        print(""No"")\n', '\n', '\n', 'if __name__ == ""__main__"":\n', '    main()']","['s=input()\n', 't=input()\n', 'count=0\n', 'for i in range(0,len(s)):\n', '    if(s[i]==t[i]):\n', '        continue\n', '    else:\n', '        count+=1\n', 'print(count)']",0
"['def e_bomber():\n', '    import sys\n', '    input = sys.stdin.readline\n', '\n', '    H, W, M = [int(i) for i in input().split()]\n', '\n', '    bomb_row = [0] * H\n', '    bomb_col = [0] * W\n', '    bomb_pos = set()\n', '    for _ in range(M):\n', '        r, c = [int(i) - 1 for i in input().split()]\n', '        bomb_row[r] += 1\n', '        bomb_col[c] += 1\n', '        bomb_pos.add((r, c))\n', '\n', '    bomb_row_max = max(bomb_row)\n', '    bomb_col_max = max(bomb_col)\n', '    row_index_list = [r for r, v in enumerate(bomb_row) if v == bomb_row_max]\n', '    col_index_list = [c for c, v in enumerate(bomb_col) if v == bomb_col_max]\n', '\n', '    # 破壊できる数が最大になるような行と列の組を全探索する。\n', '    # (行, 列) が破壊対象の上になってしまわないような組があれば、そこに置けばいい。\n', '    # そのような組がまったくなければ、破壊対象の上に置かざるを得ない (-1 される)。\n', '    for row in row_index_list:\n', '        for col in col_index_list:\n', '            if (row, col) not in bomb_pos:\n', '                return bomb_row_max + bomb_col_max\n', '    return bomb_row_max + bomb_col_max - 1\n', '\n', 'print(e_bomber())']","['n=int(input())\n', 'for i in range(9):\n', '    for u in range(9):\n', '        if n==(i+1)*(u+1):\n', ""            print('Yes')\n"", '            exit()\n', ""print('No')""]",0
"['import numpy as np\n', 'import sys\n', 'read = sys.stdin.read\n', 'readline = sys.stdin.readline\n', 'readlines = sys.stdin.readlines\n', 'from collections import defaultdict\n', '\n', 'N, *A = map(int, read().split())\n', '\n', 'INF = 10**18\n', 'dp_not = defaultdict(lambda : -INF)\n', 'dp_take = defaultdict(lambda: -INF)\n', 'dp_not[(0,0)] = 0\n', '\n', 'for i,x in enumerate(A,1):\n', '\tj = (i-1)//2\n', '\tfor n in (j,j+1):\n', '\t\tdp_not[(i,n)] = max(dp_not[(i-1,n)], dp_take[(i-1,n)])\n', '\t\tdp_take[(i,n)] = dp_not[(i-1,n-1)] + x\n', '\n', 'print(max(dp_not[(N, N//2)], dp_take[(N, N//2)]))']","['X, Y, A, B, C = map(int, input().split())\n', 'Ap = list(map(int, input().split()))\n', 'Bq = list(map(int, input().split()))\n', 'Cr = list(map(int, input().split()))\n', '\n', 'Ap.sort(reverse = True)\n', 'Bq.sort(reverse = True)\n', '\n', 'L = sorted(Ap[:X] + Bq[:Y] + Cr, reverse = True)\n', '\n', 'print(sum(L[:X+Y]))']",0
"['\n', 'N = int(input())\n', 'S = str(input())\n', 'i = 0\n', 'ans = len(S)\n', 'for i in range(len(S)-1):\n', '  if S[i] == S[i+1]:\n', '    ans -= 1\n', 'print(ans)']","['n1 = int(input())\n', '\n', 'r1 = n1 * n1\n', '\n', 'print(r1)\n']",0
"['import math\n', '\n', 'def main():\n', '\tN = int(input())\n', '\tc = [[0] * 10 for i in range(10)]\n', '\tfor i in range(1, N + 1):\n', '\t\tdigit = int(math.log10(i)) + 1\n', '\t\tc[i // (10 ** (digit - 1))][i % 10] += 1\n', '\n', '\tcnt = 0\n', '\tfor i in range(10):\n', '\t\tfor j in range(10):\n', '\t\t\tcnt += c[i][j] * c[j][i]\n', '\n', '\tprint(cnt)\n', '\n', '\n', '\n', 'main()']","['from collections import deque\n', '\n', 'D = set()\n', 'N = int(input())\n', '\n', 'for i in range(N):\n', '\tc, s = input().split()\n', '\tif c == ""insert"":\n', '\t\tD.add(s)\n', '\telif c == ""find"":\n', '\t\tif (s in D):\n', '\t\t\tprint(""yes"")\n', '\t\telse:\n', '\t\t\tprint(""no"")']",0
"['a = list(map(int, input().split()))\n', 'b = list(map(int, input().split()))\n', 'if a[0] - sum(b) >= 0:\n', '  print(a[0] - sum(b))\n', 'else:\n', '  print(-1)\n']","['from collections import defaultdict as dd\n', 'from collections import deque\n', 'import bisect\n', 'import heapq\n', '\n', 'def ri():\n', '    return int(input())\n', '\n', 'def rl():\n', '    return list(map(int, input().split()))\n', '\n', '\n', 'def solve():\n', '    s, w = rl()\n', '    if s > w:\n', '        print (""safe"")\n', '    else:\n', '        print (""unsafe"")\n', '\n', '\n', '\n', '\n', '\n', '\n', ""mode = 's'\n"", '\n', ""if mode == 'T':\n"", '    t = ri()\n', '    for i in range(t):\n', '        solve()\n', 'else:\n', '    solve()\n']",0
"['n, m, x = map(int,input().split())\n', 'lst = [[0 for i in range(m + 1)]]\n', 'for i in range(n):\n', '    tmp = list(map(int,input().split()))\n', '    for j in range(len(lst)):\n', '        tmp2 = []\n', '        for k in range(len(tmp)):\n', '            y = lst[j][k] + tmp[k]\n', '            tmp2.append(y)\n', '        lst.append(tmp2)\n', 'ans = -1\n', 'for i in range(len(lst)):\n', '    c = 0\n', '    for j in range(len(lst[i])):\n', '        if (j == 0):\n', '            pass\n', '        else:\n', '            if (lst[i][j] < x):\n', '                c = 1\n', '    if (c == 0):\n', '        if (ans == -1):\n', '            ans = lst[i][0]\n', '        else:\n', '            ans = min(ans, lst[i][0])\n', '\n', 'print(ans)\n']","['x,k,d = map(int,input().split())\n', '\n', 'if x < 0:\n', '    x *= -1\n', '    \n', 'm = x // d\n', '\n', 'if k <= m:\n', '    print(x - k*d)\n', '    \n', 'else:\n', '    x %= d\n', '    y = abs(x-d)\n', '    \n', '    print([x,y][(k-m)%2])']",0
"['n = int(input())\n', 'if n==2:print(1);exit()\n', 'a = [n]\n', 'for i in range(2,int(n**0.5+1)):\n', '    if n%i==0:\n', '        a.append(i)\n', '        if i!=n//i:\n', '            a.append(n//i)\n', 'cnt =0\n', 'for v in a:\n', '    s = n\n', '    while v<=s and s%v==0:\n', '        s = s//v\n', '    if s%v==1: cnt += 1\n', 'b = [n-1]\n', 'm = n-1\n', 'for i in range(2,int(m**0.5+1)):\n', '    if m%i==0:\n', '        b.append(i)\n', '        if i!=m//i:\n', '            b.append(m//i)\n', 'print(cnt + len(b))']","['d=int(input())\n', '\n', 'if d == 1:\n', '  print(0)\n', 'else:\n', '  print(1)']",0
"['def main():\n', '    s = int(input())\n', '    if s < 3:\n', '        print(0)\n', '    else:\n', '        total = [0]*(s+1)\n', '        total[3] = 1\n', '        mod = 10**9+7\n', '        for i in range(4, s+1):\n', '            total[i] = (total[i-3] + 1) + total[i-1]\n', '            total[i] %= mod\n', '        print((total[s-3]+1)%mod)\n', '\n', 'if __name__ == ""__main__"":\n', '    main()']","['from math import factorial\n', 'n,k=map(int,input().split())\n', 'a=list(map(int,input().split()))\n', 'mod=10**9+7\n', 'ans=0\n', 'a.sort()\n', 'x=(factorial(n-1)*pow(factorial(k-1),mod-2,mod)*pow(factorial(n-k),mod-2,mod))%mod\n', 'y=1\n', 'for i in range(n-k+1):\n', '  ans-=a[i]*x\n', '  ans%=mod\n', '  x=(x*(n-k-i)*pow(n-i-1,mod-2,mod))%mod\n', 'for i in range(k-1,n):\n', '  ans+=a[i]*y\n', '  ans%=mod\n', '  y=(y*(i+1)*pow(i-k+2,mod-2,mod))%mod\n', 'print(ans)']",0
"['nums = input().split()\n', '\n', 'area = int(nums[0]) * int(nums[1])\n', 'length_cirle = int(nums[0]) * 2 + int(nums[1]) * 2\n', 'print(str(area) + "" "" + str(length_cirle))\n']","['n = int(input())\n', 'MOD = 10**9+7\n', 'from math import gcd\n', 'zero = 0\n', 'cnt = {}\n', 'for i in range(n):\n', '    a,b = map(int,input().split())\n', '    if a ==0 and b==0:\n', '        zero += 1\n', '        continue\n', '    g = gcd(a,b)\n', '    a//=g\n', '    b//=g\n', '    if b<0:\n', '        a*=-1\n', '        b*=-1\n', '    if b==0 and a<0:\n', '        a *= -1\n', '    if a<=0:\n', '        a,b = b,-a\n', '        if (a,b) in cnt:\n', '            cnt[(a,b)][0] += 1\n', '        else:\n', '            cnt[(a,b)] = [1,0]\n', '    else:\n', '        if (a,b) in cnt:\n', '            cnt[(a,b)][1] += 1\n', '        else:\n', '            cnt[(a,b)] = [0,1]\n', 'ans = 1\n', 'for i,v in cnt.items():\n', '    ans *= 1 + pow(2,v[0],MOD)-1 + pow(2,v[1],MOD)-1\n', '    ans %= MOD\n', 'print((zero-1+ans)%MOD)']",0
"['# abc149_d.py\n', 'def janken(idx,mine):\n', '    if i >= K:\n', '        if flg[i-K] and T[i-K]==T[i]:\n', '            return 0\n', '    flg[i] = True\n', '    if mine==""r"":\n', '        return R\n', '    if mine==""p"":\n', '        return P\n', '    if mine==""s"":\n', '        return S\n', '\n', 'N, K = map(int,input().split())\n', 'R,S,P = map(int,input().split())\n', 'T = input()\n', 'flg = [False]*N\n', 'ans = 0\n', 'for i,v in enumerate(T):\n', '    if v==""s"":\n', '        ans += janken(i,""r"")\n', '    elif v==""r"":\n', '        ans += janken(i,""p"")\n', '    elif v==""p"":\n', '        ans += janken(i,""s"")\n', 'print(ans)']","['n,m = map(int,input().split())\n', 'c = list(map(int,input().split()))\n', '\n', 'c.sort(reverse = True)\n', '\n', ""dp = [[float('inf') for i in range(n+1)] for j in range(m+1)]\n"", '\n', 'for j in range(m+1):\n', '    dp[j][0] = 0\n', '\n', 'for j in range(1,m+1):\n', '    for i in range(c[j-1],n+1):\n', '        dp[j][i] = min(dp[j-1][i], dp[j][i-c[j-1]] + 1)\n', '\n', 'print(dp[m][n])']",0
"['h,a=map(int,input().split())\n', 'for i in range(1,10001):\n', '    if a*i >= h:\n', '        print(i)\n', '        break']","['h_1, m_1, h_2, m_2, k = map(int, input().split())\n', 'time_m = h_2*60 + m_2 - (h_1*60 + m_1) - k\n', 'print(time_m)']",0
"['import sys\n', 'from bisect import bisect_left, bisect_right, insort\n', '\n', 'sr = lambda: sys.stdin.readline().rstrip()\n', 'ir = lambda: int(sr())\n', 'lr = lambda: list(map(int, sr().split()))\n', '\n', 'N = ir()\n', ""S = list('-' + sr())\n"", 'd = [[] for _ in range(26)]\n', 'for i in range(1, N+1):\n', '    s = S[i]\n', ""    o = ord(s) - ord('a')\n"", '    d[o].append(i)\n', '\n', 'Q = ir()\n', 'for _ in range(Q):\n', '    q, a, b = sr().split()\n', ""    if q == '1':\n"", '        a = int(a)\n', '        if S[a] == b:\n', '            continue\n', ""        prev = ord(S[a]) - ord('a')\n"", '        d[prev].pop(bisect_left(d[prev], a))\n', ""        next = ord(b) - ord('a')\n"", '        insort(d[next], a)\n', '        S[a] = b\n', '    else:\n', '        left = int(a); right = int(b)\n', '        ans = 0\n', '        for alpha in range(26):\n', '            index = bisect_left(d[alpha], left)\n', '            if index < len(d[alpha]) and d[alpha][index] <= right:\n', '                ans += 1\n', '        print(ans)\n']","['while 1:\n', '    m,f,r=map(int, raw_input().split())\n', '    if m==f==r==-1: break\n', '    s=m+f\n', '    if m==-1 or f==-1 or s<30: R=""F""\n', '    elif s>=80: R=""A""\n', '    elif s>=65: R=""B""\n', '    elif s>=50: R=""C""\n', '    elif r>=50: R=""C""\n', '    else: R=""D""\n', '    print R']",0
"['N = int(input())\n', 'A = [int(a) for a in input().split()]\n', '\n', 'next_target = 1\n', '\n', 'idx = []\n', '\n', 'for i, a in enumerate(A):\n', '    if a == next_target:\n', '        idx.append(i)\n', '        next_target += 1\n', '\n', 'if not idx:\n', '    print(-1)\n', 'else:\n', '    prev = -1\n', '    sum_ = 0\n', '\n', '    if idx[-1] != N - 1:\n', '        sum_ += N - (idx[-1] + 1)\n', '\n', '    for x in idx:\n', '        sum_ += x - prev - 1\n', '        prev = x\n', '\n', '    print(sum_)\n']","['last=input()\n', 'if last==""ABC"":\n', '  print(""ARC"")\n', 'elif last==""ARC"":\n', '  print(""ABC"")']",0
"['import sys\n', 'from collections import deque\n', 'input_lines = sys.stdin.readlines()\n', '\n', 'doublyLinkedList = deque()\n', '\n', '\n', 'for x in input_lines[1:]:\n', '    oneLine = x.split()\n', ""    if 'insert' in oneLine[0]:\n"", '        doublyLinkedList.appendleft((int)(oneLine[1]))\n', ""    elif 'delete' == oneLine[0]:\n"", '        remove_value = (int)(oneLine[1])\n', '        if remove_value in doublyLinkedList:\n', '            doublyLinkedList.remove(remove_value)\n', ""    elif 'deleteFirst'in oneLine[0]:\n"", '        doublyLinkedList.popleft()\n', ""    elif 'deleteLast' in oneLine[0]:\n"", '        doublyLinkedList.pop()\n', '\n', 'print(*doublyLinkedList)']","['class BinaryIndexedTree():\n', '    def __init__(self, max_n):\n', '        self.size = max_n + 1\n', '        self.tree = [0] * self.size\n', '        self.depth = self.size.bit_length()\n', ' \n', '    def initialize(self, seq):\n', '        for i, x in enumerate(seq[1:], 1):\n', '            self.tree[i] += x\n', '            j = i + (i & (-i))\n', '            if j < self.size:\n', '                self.tree[j] += self.tree[i]\n', ' \n', '    def __repr__(self):\n', '        return self.tree.__repr__()\n', ' \n', '    def get_sum(self, i):\n', '        s = 0\n', '        while i:\n', '            s += self.tree[i]\n', '            i -= i & -i\n', '        return s\n', ' \n', '    def add(self, i, x):\n', '        while i < self.size:\n', '            self.tree[i] += x\n', '            i += i & -i\n', ' \n', '    def find_kth_element(self, k):\n', '        x, sx = 0, 0\n', '        dx = (1 << self.depth)\n', '        for i in range(self.depth - 1, -1, -1):\n', '            dx = (1 << i)\n', '            if x + dx >= self.size:\n', '                continue\n', '            y = x + dx\n', '            sy = sx + self.tree[y]\n', '            if sy < k:\n', '                x, sx = y, sy\n', '        return x + 1\n', '\n', '\n', '\n', 'n = int(input())\n', 's = [""!""]+list(input())\n', 'q = int(input())\n', 'bit = [BinaryIndexedTree(n+1) for i in range(26)]\n', '\n', 'for i in range(n):\n', '    ind = ord(s[i+1])-97\n', '    bit[ind].add(i+1,1)\n', '\n', 'for i in range(q):\n', '    a,b,c = input().split()\n', '    b = int(b)\n', '    if a == ""1"":\n', '        ind = ord(s[b])-97\n', '        bit[ind].add(b,-1)\n', '        ind = ord(c)-97\n', '        bit[ind].add(b,1)\n', '        s[b] = c\n', '    else:\n', '        ans = 0\n', '        c = int(c)\n', '        for i in range(26):\n', '            if bit[i].get_sum(c)-bit[i].get_sum(b-1):\n', '                ans += 1\n', '        print(ans)']",0
"['import bisect\n', 'import sys\n', 'sys.setrecursionlimit(10**9)\n', '\n', 'def mi(): return map(int,input().split())\n', 'def ii(): return int(input())\n', 'def isp(): return input().split()\n', 'def deb(text): print(""-------\\n{}\\n-------"".format(text))\n', '\n', 'INF=10**20\n', 'def main():\n', '    N=ii()\n', '    L=list(mi())\n', '\n', '    ans = 0\n', '    L.sort()\n', '    for ai in range(N):\n', '        for bi in range(ai+1,N):\n', '            a,b = L[ai],L[bi]\n', '\n', '            left = bisect.bisect_left(L,abs(a-b)+1)\n', '            right = bisect.bisect_right(L,a+b-1)\n', '\n', '            count = right - left\n', '\n', '            if left <= ai <= right:\n', '                count -= 1\n', '\n', '            if left <= bi <= right:\n', '                count -= 1\n', '            \n', '            ans += count\n', '            # if count > 0:\n', '            #     print(a,b,count) \n', '            \n', '\n', '    print(ans//3)\n', '\n', '\n', 'if __name__ == ""__main__"":\n', '    main()']","['a = [int(c) for c in input().split()]\n', 'r = a[0]*a[1]\n', 'if a[0] == 1 or a[1] == 1:\n', '    print(1)\n', 'elif r % 2 == 0:\n', '    print(int(r/2))\n', 'else:\n', '    print(int(r/2+1))\n']",0
"['print(""YES"") if int(input()) == len(list(set(input().split("" "")))) else print(""NO"")']","['a,b = input().split()\n', 'a = int(a)\n', 'b = int(b)\n', 'ret = a - (b * 2)\n', 'if ret < 0:\n', '    ret = 0\n', 'print(ret)\n']",0
"['import sys\n', '\n', 'read = sys.stdin.read\n', 'readline = sys.stdin.readline\n', 'readlines = sys.stdin.readlines\n', 'sys.setrecursionlimit(10 ** 9)\n', 'INF = 1 << 60\n', 'MOD = 1000000007\n', '\n', '\n', 'def main():\n', '    N, *A= map(int, read().split())\n', '    \n', '    if len(set(A)) == N:\n', ""        print('YES')\n"", '    else:\n', ""        print('NO')\n"", '    \n', '    return\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']","['N = int(input())\n', 'if N-(N//10*10)==3:\n', ""    print('bon')\n"", 'elif N-(N//10*10)==0 or N-(N//10*10)==1 or N-(N//10*10)==6 or N-(N//10*10)==8:\n', ""    print('pon')\n"", 'else:\n', ""    print('hon')""]",0
"['s = input()\n', 'n = len(s)\n', 'dp = [0 for _ in range(n)]\n', 'dp[-1] = int(s[-1])\n', 'cnt_dic = {}\n', 'tmp = 1\n', 'ans = 0\n', 'cnt_dic[0] = 1\n', 'cnt_dic[dp[-1]] = 1\n', 'for i in range(n-2, -1, -1):\n', '    dp[i] = (dp[i+1] + int(s[i]) * pow(10, n-i-1, 2019)) % 2019\n', '    if not dp[i] in cnt_dic:\n', '        cnt_dic[dp[i]] = 0\n', '    ans += cnt_dic[dp[i]]\n', '    cnt_dic[dp[i]] += 1\n', '\n', 'print(ans)']","['from sys import stdin\n', '\n', 'n = int(input())\n', '\n', 'xs = [int(input()) for _ in range(n)]\n', '\n', 'ans = 0\n', 'for x in xs:\n', '    flg = True\n', '    for y in range(2, int(x**0.5+1)):\n', '        if x % y == 0:\n', '            flg = False\n', '            break\n', '    if flg:\n', '        ans += 1\n', '\n', 'print(ans)']",0
"['s = list(input())\n', 'k = int(input())\n', ""s += '+'\n"", '\n', 'releki = []\n', 'cnt = 1\n', 'pre = s[0]\n', 'for i in range(1,len(s)):\n', '    if pre==s[i]:\n', '        cnt += 1\n', '    else:\n', '        releki.append([pre,cnt])\n', '        pre = s[i]\n', '        cnt = 1\n', '        \n', 'ans = 0\n', 'for i in range(len(releki)):\n', '    ans += releki[i][1]//2\n', 'if len(releki)==1:\n', '    print((len(s)-1)*k//2)\n', '    exit()\n', 'if s[0]!=s[-3]:\n', '    print(ans*k)\n', 'else:\n', '    a = releki[0][1]\n', '    b = releki[-1][1]\n', '    ans = ans*k - (k-1)*(a//2 +b//2 -(a+b)//2)\n', '    print(ans) \n', '\n']","['n=int(input())\n', 's=input()\n', '\n', 'if n%2!=0:\n', '    print(""No"")\n', 'elif s[0:int(n/2)]==s[int(n/2):n]:\n', '    print(""Yes"")\n', 'else:\n', '    print(""No"")\n']",0
"['n = int(input())\n', 'table = list(map(int,input().split()))\n', '\n', 'table.sort()\n', 'print(table[0],table[-1],sum(table))\n']","['A, B, H, M = map(int, input().split())\n', '\n', 'import math\n', '\n', 'theta = (30 * H) - (5.5 * M)\n', '\n', 'd2 = A * A + B * B - 2 * A * B * math.cos(math.radians(theta))\n', '\n', 'd = math.sqrt(d2)\n', '\n', 'print(d)\n']",0
"['from itertools import accumulate\n', 'h,w,k=map(int,input().split())\n', 's=[[0]*(w+1)]+[[0]+[int(i) for i in input()] for _ in range(h)]\n', 'for i in range(h+1):\n', '  s[i]=list(accumulate(s[i]))\n', 'for j in range(w+1):\n', '  for i in range(h):\n', '    s[i+1][j]+=s[i][j]\n', 'ans=10**18\n', 'for i in range(1<<h-1):\n', '  a=[]\n', '  for j in range(h-1):\n', '    if (i>>j)&1:a+=[j+1]\n', '  a+=[h]\n', '  cnt=len(a)-1\n', '  q=1\n', '  for j in range(1,w+1):\n', '    p=0\n', '    flag=0\n', '    for l in a:\n', '      if s[l][j]-s[l][j-1]-s[p][j]+s[p][j-1]>k:flag=1\n', '      elif s[l][j]-s[l][q-1]-s[p][j]+s[p][q-1]>k:\n', '        q=j\n', '        cnt+=1\n', '        break\n', '      else:p=l\n', '    if flag:break\n', '  else:\n', '    ans=min(cnt,ans)\n', 'print(ans)']","['N,M,X=map(int,input().split())\n', 'B=[list(map(int,input().split())) for _ in range(N)]\n', 'inf=(10**5)*12+1\n', 'ans=inf\n', 'for i in range(1,2**N):\n', '  tmp=[0]*M\n', '  c=0\n', '  for j in range(N):\n', '    if i>>j&1:\n', '      for k in range(M):\n', '        tmp[k]+=B[j][k+1]\n', '      c+=B[j][0]\n', '  if len([i for i in tmp if i>=X])==M:\n', '    ans=min(c,ans)\n', 'print(ans if ans<inf else -1)']",0
"['def main():\n', '    import sys\n', '    input = sys.stdin.readline\n', '\n', '    h,w,m = map(int, input().split())\n', '    h_count = [0 for _ in range(h)]\n', '    w_count = [0 for _ in range(w)]\n', '    pairs = set()\n', '\n', '    for i in range (m):\n', '        hi, wi = map(int, input().split())\n', '        hi -= 1\n', '        wi -= 1\n', '\n', '        h_count[hi] += 1\n', '        w_count[wi] += 1\n', '\n', '        pairs.add((hi,wi))\n', '\n', '    h_max = max(h_count)\n', '    w_max = max(w_count)\n', '    hk = list()\n', '    wk = list()\n', '\n', '    for index , hj in enumerate(h_count):\n', '        if hj == h_max:\n', '            hk.append(index)\n', '    \n', '    for index, wj in enumerate(w_count):\n', '        if wj == w_max:\n', '            wk.append(index)\n', '\n', '    ans = h_max + w_max\n', '\n', '    for _h in hk:\n', '        for _w in wk:\n', '            hw = (_h, _w)\n', '\n', '            if hw in pairs:\n', '                continue\n', '\n', '            print(ans)\n', '            exit()\n', '    print(ans -1)\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n', '\n']","['import sys\n', 'def input(): return sys.stdin.readline().strip()\n', 'def mapint(): return map(int, input().split())\n', 'sys.setrecursionlimit(10**9)\n', '\n', 'A, B = mapint()\n', 'from math import gcd\n', 'g = gcd(A, B)\n', '\n', 'def prime_factorize(n):\n', '    a = []\n', '    while n % 2 == 0:\n', '        a.append(2)\n', '        n //= 2\n', '    f = 3\n', '    while f * f <= n:\n', '        if n % f == 0:\n', '            a.append(f)\n', '            n //= f\n', '        else:\n', '            f += 2\n', '    if n != 1:\n', '        a.append(n)\n', '    return len(set(a))\n', '\n', 'print(prime_factorize(g)+1)\n', '\n']",0
"['count =[[[0]*10 for j in range(3)] for k in range(4)]\n', 'n = int(input())\n', 'for x in range(n):\n', '    b,f,r,v = map(int,input().split())\n', '    # 1 <= b <=4\n', '    # 1 <= f <= 3\n', '    # 1 <= r <= 10\n', '    # 1 <= v <= 9\n', '    count[b-1][f-1][r-1] += v\n', '    \n', 'for i in range(4):\n', '    if i != 0:\n', '        print(""#""*20)\n', '    for j in range(3):\n', '        for k in range(10):\n', '            print(f\' {count[i][j][k]}\',end="""")\n', '        print()\n']","['\n', 's = input()\n', 'n = int(input())\n', '\n', 'hanten=0\n', 's1=""""\n', 's2=""""\n', 'for i in range(n):\n', '    Q = input()\n', '    if int(Q[0])==1:\n', '        hanten+=1 \n', '    elif int(Q[0])==2 :\n', '        if hanten%2 == int(Q[2])-1 :\n', '            s1= s1+Q[4]\n', '        else:\n', '            s2= s2+Q[4]\n', '\n', 's1 = s1[::-1]\n', 's = s1+s+s2\n', '\n', 'if hanten%2 :\n', '    s = s[::-1]\n', 'print(s)        \n', '\n', '\n', '\n']",0
"['tmp = input().split("" "")\n', 'S = int(tmp[0])\n', 'W = int(tmp[1])\n', '\n', 'if S <= W:\n', '  print(""unsafe"")\n', 'else:\n', '  print(""safe"")']","['n = int(input())\n', 'x = input()\n', '\n', ""popcount = x.count('1')\n"", 'p = int(x, 2) % (popcount + 1)\n', 'q = int(x, 2) % (popcount - 1) if popcount != 1 else 0\n', 'for i in range(n):\n', ""    if x[i] == '0':\n"", '        y = (p + pow(2, n-i-1, popcount+1)) % (popcount + 1)\n', '    else:\n', '        if popcount != 1:\n', '            y = (q - pow(2, n-i-1, popcount-1)) % (popcount - 1)\n', '        else:\n', '            print(0)\n', '            continue\n', '    cnt = 1\n', '    while y != 0:\n', ""        y %= bin(y).count('1')\n"", '        cnt += 1\n', '    print(cnt)\n']",0
"['from sys import stdin\n', '\n', 'def getval():\n', '    n = int(input())\n', '    e = [[i] + list(map(int,stdin.readline().split())) for i in range(n-1)]\n', '    return n,e\n', '\n', 'def main(n,e):\n', '    tree = [[] for i in range(n)]\n', '    ans = [0 for i in range(n-1)]\n', '    for i in e:\n', '        tree[i[1]-1].append([i[2]-1,i[0]])\n', '    tree[0].append(0)\n', '    k = 1\n', '    q = [0]\n', '    while q:\n', '        n = 0\n', '        idx = q.pop(0)\n', '        for i in range(len(tree[idx])-1):\n', '            n += 1\n', '            if n==tree[idx][-1]:\n', '                n += 1\n', '            ans[tree[idx][i][-1]] = n\n', '            tree[tree[idx][i][0]].append(n)\n', '            q.append(tree[idx][i][0])\n', '        k = max(k,n)\n', '\n', '    print(k)\n', '    for i in ans:\n', '        print(i)\n', '            \n', '            \n', 'if __name__==""__main__"":\n', '    n,e = getval()\n', '    main(n,e)']","['import sys\n', '#input = sys.stdin.buffer.readline\n', '\n', 'def main():\n', '    S = input()\n', '    print(S[:3])\n', '\n', 'if __name__ == ""__main__"":\n', '    main()']",0
"['import sys,math,copy,queue,itertools,bisect\n', 'LI = lambda : [int(x) for x in sys.stdin.readline().split()]\n', 'NI = lambda : int(sys.stdin.readline())\n', '\n', 'N = NI()\n', 'data = [[a,i] for i,a in enumerate(LI())]\n', 'data.sort(reverse=True)\n', '\n', 'dp = [[0 for _ in range(N+1)] for _ in range(N+1)]\n', '\n', 'for i in range(N):\n', '    a, p = data[i]\n', '    for j in range(i+1):\n', '        dp[i+1][j+1] = max(dp[i+1][j+1],dp[i][j] + abs(N-1-j-p)*a)\n', '        dp[i+1][j] = max(dp[i+1][j], dp[i][j] + abs(i-j-p)*a)\n', 'print(max(dp[-1]))\n']","['def main():\n', '    _ = int(input())\n', '    A = [int(i) for i in input().split()]\n', '    ans = 1\n', '    if 0 in A:\n', '        ans = 0\n', '    else:\n', '        for a in A:\n', '            ans *= a\n', '            if (10**18 < ans):\n', '                ans = -1\n', '                break\n', '        if (10**18 < ans):\n', '            ans = -1\n', '\n', '    print(ans)\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']",0
"['# B - Homework\n', '\n', '# N M\n', 'N, M = map(int, input().split())\n', 'my_list = list(map(int, input().split(maxsplit=M)))\n', '\n', 'if N < sum(my_list):\n', '    answer = -1\n', 'else:\n', '    answer = N - sum(my_list)\n', '\n', 'print(answer)\n']","['N,D = map(int,input().split())\n', 'ans = 0\n', 'for i in range(N):\n', '    X1,Y1 = map(int,input().split())\n', '    if X1*X1+Y1*Y1 <= D*D:\n', '        ans += 1\n', 'print(ans)']",0
"['H,A = map(int,input().split())\n', 'ans = H // A\n', 'if H % A != 0: ans += 1\n', 'print(ans)']","['import sys\n', '## io ##\n', 'def IS(): return sys.stdin.readline().rstrip()\n', 'def II(): return int(IS())\n', 'def MII(): return list(map(int, IS().split()))\n', 'def MIIZ(): return list(map(lambda x: x-1, MII()))\n', 'import numpy as np\n', '#======================================================#\n', 'MOD=10**9+7\n', 'def main():\n', '    n = II()\n', ""    aa = np.array(MII(), dtype='uint64')\n"", '    ans = 0\n', '    for i in range(60):\n', '        cnt1 = (aa&1).sum()\n', '        ans += (cnt1*(n-cnt1))%MOD*(2**i)%MOD\n', '        aa >>= 1\n', '    print(int(ans%MOD))\n', '\n', ""if __name__ == '__main__':\n"", '    main()']",0
"['#http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=ALDS1_3_C&lang=jp\n', '#???????????£????????????\n', '\n', 'NEXT = 2\n', 'DATA = 1\n', 'PREV = 0\n', 'from collections import deque\n', 'def dll_processor(operations):\n', '    \n', '    front = None\n', '    end = None\n', '    dll = deque([])\n', '    for o in operations:\n', '        if o[0] == ""insert"":\n', '            dll.appendleft(o[1])\n', '            #front, end = insert(front, end, o[1])\n', '        elif o[0] == ""delete"":\n', '            if o[1] in dll:\n', '                dll.remove(o[1])\n', '            #front, end = delete(front, end, o[1])\n', '        elif o[0] == ""deleteFirst"":\n', '            dll.popleft()\n', '            #front, end = delete_first(front, end)\n', '        elif o[0] == ""deleteLast"":\n', '            dll.pop()\n', '            #front, end = delete_last(front, end)\n', '        #print(get_list(front))\n', '        \n', '    return dll\n', '\n', 'def get_list(front):\n', '    if not front:\n', '        return []\n', '    \n', '    l = []\n', '    target = front\n', '    while True:\n', '        l.append(target[DATA])\n', '        if not target[NEXT]:\n', '            break\n', '        target = target[NEXT]\n', '    return l\n', '\n', 'def insert(front, end, target):\n', '    node = [None, target, None]\n', '    if front:\n', '        front[PREV] = node\n', '        node[NEXT] = front\n', '        return node, end\n', '    else:\n', '        return node, node\n', '    \n', 'def delete(front, end,target):\n', '\n', '    delete_node = front\n', '    while not delete_node[DATA] == target:\n', '        delete_node = delete_node[NEXT]\n', '        if delete_node == None:\n', '            return front, end\n', '\n', '    if delete_node[PREV] == None:\n', '        delete_node[NEXT][PREV] = None\n', '        return delete_node[NEXT], end\n', '    elif delete_node[NEXT] == None:\n', '        delete_node[PREV][NEXT] = None\n', '        return front, delete_node[PREV]\n', '    else:\n', '        delete_node[NEXT][PREV] = delete_node[PREV]\n', '        delete_node[PREV][NEXT] = delete_node[NEXT]\n', '        return front, end\n', '    \n', 'def delete_last(front, end):\n', '    \n', '    if not end[PREV]:\n', '        return None, None\n', '    else:\n', '        end[PREV][NEXT] = None\n', '        return front, end[PREV]\n', '    \n', 'def delete_first(front, end):\n', '    \n', '    if not front[NEXT]:\n', '        return None, None\n', '    else:\n', '        front[NEXT][PREV] = None\n', '        return front[NEXT], end\n', '\n', 'def main():\n', '    n_list = int(input())\n', '    target_list = [input().split() for i in range(n_list)]\n', '    print(*dll_processor(target_list))\n', '    \n', 'if __name__ == ""__main__"":\n', '    main()']","['import sys\n', 'import math\n', 'from collections import defaultdict\n', '\n', 'sys.setrecursionlimit(10**7)\n', 'def input():\n', '    return sys.stdin.readline()[:-1]\n', '\n', 'mod = 10**9 + 7\n', '\n', 'def I(): return int(input())\n', 'def II(): return map(int, input().split())\n', 'def III(): return list(map(int, input().split()))\n', 'def Line(N,num):\n', '    if N<=0:\n', '        return [[] for _ in range(num)]\n', '    elif num==1:\n', '        return [I() for _ in range(N)]\n', '    else:\n', '        read_all = [tuple(II()) for _ in range(N)]\n', '        return map(list, zip(*read_all))\n', '\n', '#################\n', '\n', 'import cmath\n', 'pi = cmath.pi\n', 'exp = cmath.exp\n', '\n', 'def convolution(a,b):\n', '    \n', '    def fft(a,sz,inv=False):\n', '        tmp = [0]*sz\n', '        mask = sz-1\n', '        p = 0\n', '        i = sz>>1\n', '        sign = 1 if inv else -1\n', '\n', '        while i:\n', '            if p&1:\n', '                cur,nex = tmp,a\n', '            else:\n', '                cur,nex = a,tmp\n', '            ei = exp(2j*pi*i*sign/sz)\n', '            w = 1\n', '            for j in range(0,sz,i):\n', '                for k in range(i):\n', '                    nex[j+k] = cur[((j<<1)&mask)+k] + w*cur[(((j<<1)+i)&mask)+k]\n', '                w *= ei\n', '            p += 1\n', '            i >>= 1\n', '\n', '        if p&1:\n', '            a,tmp = tmp,a\n', '        if inv:\n', '            a = list(map(lambda x: x/sz, a))\n', '        return a\n', '    \n', '    sz = 1<<(len(a)+len(b)-2).bit_length()\n', '    a = a + [0]*(sz-len(a))\n', '    b = b + [0]*(sz-len(b))\n', '\n', '    fa = fft(a,sz)\n', '    fb = fft(b,sz)\n', '    fafb = [fai*fbi for fai,fbi in zip(fa,fb)]\n', '    ab = fft(fafb,sz,inv=True)\n', '    return [round(x.real) for x in ab[:len(a)+len(b)-1]]\n', '\n', 'N,M = II()\n', 'A = III()\n', '\n', 'h = [0]*(max(A))\n', 'for a in A:\n', '    h[a-1] += 1\n', '\n', 'conv = [0,0] + convolution(h,h)\n', '\n', 'ans = 0\n', 'for k in range(2,2*max(A)+1)[::-1]:\n', '    if conv[k]<M:\n', '        ans += k*conv[k]\n', '        M -= conv[k]\n', '    else:\n', '        ans += k*M\n', '        break\n', '        \n', 'print(ans)']",0
"['import math\n', 'import numpy as np\n', 'import sys\n', 'import os\n', 'from operator import mul\n', 'from operator import itemgetter\n', '\n', 'sys.setrecursionlimit(10**7)\n', '\n', 'def _S(): return sys.stdin.readline().rstrip()\n', 'def I(): return int(_S())\n', 'def LS(): return list(_S().split())\n', 'def LI(): return list(map(int,LS()))\n', '\n', 'if os.getenv(""LOCAL""):\n', ""    inputFile = basename_without_ext = os.path.splitext(os.path.basename(__file__))[0]+'.txt'\n"", '    sys.stdin = open(inputFile, ""r"")\n', 'INF = float(""inf"")\n', 'IINF = 10 ** 18\n', 'MOD = 10 ** 9 + 7\n', '# MOD = 998244353    \n', '\n', 'N,M = LI()\n', 'H = LI()\n', 'AB = [LI() for _ in range(M)]\n', '\n', 'p = []\n', 'd = {}\n', 'for i in range(N):\n', '    # p.append((i,H[i]))\n', '    d[i]=H[i]\n', '# p.sort(key=itemgetter(1),reverse=True)\n', '# print(p)\n', '# print(d)\n', '\n', ""# g = np.zeros(shape=(N,N),dtype='int')\n"", 'g = [set()] * N\n', 'a = [True] * N\n', '\n', 'for i in range(M):\n', '    f = AB[i][0]-1\n', '    t = AB[i][1]-1\n', '    if d[t]>d[f]:\n', '        a[f]=False\n', '    elif d[f]>d[t]:\n', '        a[t]=False\n', '    else:\n', '        a[f]=False\n', '        a[t]=False\n', '# print(a)\n', 'print(sum(a))  \n', '    # print(g[f])\n', '    # g[f] = np.append(g[f],t)\n', '    # g[t] = np.append(g[t],f)\n', '   \n', '    # g[f][t]=1\n', '    # g[t][f]=1\n', '\n', '# print(g)\n', '# list.sort(key=itemgetter(0))\n', '\n', '# for i in range(N):\n', '\n', '\n', '# a = np.where(g[0]==1)\n', '# print(a)']","['# import sys\n', '# sys.setrecursionlimit(10 ** 6)\n', '# import bisect\n', '# from collections import deque\n', '\n', 'def gcd(a, b):\n', '    """"""最大公約数""""""\n', '    a, b = (a, b) if a >= b else (b, a)\n', '    if b == 0:\n', '        return a\n', '    return gcd(b, a % b)\n', '\n', '\n', 'def prime_factorization(x):\n', '    """"""素因数分解""""""\n', '    import math\n', '    re = []\n', '    i = 2\n', '    while x != 1:\n', '        if x % i == 0:\n', '            re.append(i)\n', '            x //= i\n', '        else:\n', '            i += 1\n', '            if i > math.sqrt(x):\n', '                re.append(x)\n', '                break\n', '    return re\n', '\n', '\n', '# from decorator import stop_watch\n', '#\n', '#\n', '# @stop_watch\n', 'def solve(A, B):\n', '    div = gcd(A, B)\n', '    print(len(set(prime_factorization(div))) + 1)\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    # S = input()\n', '    # N = int(input())\n', '    A, B = map(int, input().split())\n', '    # As = [int(i) for i in input().split()]\n', '    # Bs = [int(i) for i in input().split()]\n', '    # print(prime_factorization(A))\n', '    # print(prime_factorization(B))\n', '    solve(A, B)\n']",0
"['import numpy as np\n', 'from numba import njit\n', '\n', '@njit\n', 'def solve(stdin):\n', '    n, k = stdin[:2]\n', '    A = stdin[2: 2 + n]\n', '    A = np.sort(A)[::-1]\n', '    F = np.sort(stdin[2 + n:])\n', '\n', '    def is_ok(x):\n', '        tmp = 0\n', '        for a, f in zip(A, F):\n', '            y = a * f\n', '            if y > x:\n', '                tmp += a - x // f\n', '        return tmp <= k\n', '\n', '    ok = 10 ** 16\n', '    ng = -1\n', '    while ok - ng > 1:\n', '        mid = (ok + ng) // 2\n', '        if is_ok(mid):\n', '            ok = mid\n', '        else:\n', '            ng = mid\n', '\n', '    return ok\n', '\n', ""print(solve(np.fromstring(open(0).read(), dtype=np.int64, sep=' ')))""]","['import sys\n', 'import itertools\n', '# import numpy as np\n', 'import time\n', 'import math\n', '\n', 'sys.setrecursionlimit(10 ** 7)\n', '\n', 'from collections import defaultdict\n', '\n', 'read = sys.stdin.buffer.read\n', 'readline = sys.stdin.buffer.readline\n', 'readlines = sys.stdin.buffer.readlines\n', '\n', 'n = int(input())\n', 'A = list(map(int, input().split()))\n', '\n', 'MOD = 10 ** 9 + 7\n', '\n', 'x = 1\n', 'ans = 0\n', 'for i in range(60):\n', '    ones = 0\n', '    zeros = 0\n', '    for a in A:\n', '        if a & (1 << i) > 0:\n', '            ones += 1\n', '        else:\n', '            zeros += 1\n', '    ans += (ones * zeros * x) % MOD\n', '    x *= 2\n', '\n', 'print(ans % MOD)\n', '\n']",0
"['n, k = map(int, input().split())\n', 'w = [int(input()) for _ in range(n)]\n', '\n', '# k台以内のトラックで運べる荷物の個数\n', '# P: ひとつのトラックに積載できる最大量\n', 'def check(P):\n', '\ti = 0\n', '\tfor j in range(k):\n', '\t\ts = 0\n', '\t\twhile s + w[i] <= P:\n', '\t\t\ts += w[i]\n', '\t\t\ti += 1\n', '\t\t\tif i == n:\n', '\t\t\t\treturn n\n', '\treturn i\n', '\n', '# 二部探索\n', 'left = 0\n', 'right = 100000 * 10000\n', 'while right - left > 1:\n', '\tmid = (left + right) // 2\n', '\tv = check(mid)\n', '\tif v >= n:\n', '\t\tright = mid\n', '\telse:\n', '\t\tleft = mid\n', '\n', 'print(right)\n']","['n, m, l = map(int, input().split())\n', 'a = [list(map(int, input().split())) for _ in range(n)]\n', 'b = [list(map(int, input().split())) for _ in range(m)]\n', 'for i in range(n):\n', '    answer = []\n', '    for j in range(l):\n', '        answer.append(sum([a[i][k]*b[k][j] for k in range(m)]))\n', '    print(*answer)\n', '        \n']",0
"['x = int(input())\n', '\n', 'for _ in range(x):\n', '\tprint(""ACL"", end="""")']","['import math\n', '\n', 'a = int(input())\n', 'print(a + a ** 2 + a ** 3)']",0
"['def main():\n', '    s = input()\n', '    n = len(s) + 1\n', '    ans = [-1] * (n)\n', '    def right(i, ans):\n', '        j = 1\n', '        while True:\n', '            ans[i + j] = max(ans[i + j], j)\n', '            if i + j == n - 1:\n', '                break\n', ""            if s[i + j] == '<':\n"", '                j += 1\n', '            else:\n', '                break\n', '        return ans\n', '    def left(i, ans):\n', '        j = 1\n', '        while True:\n', '            ans[i - j] = max(ans[i - j], j)\n', '            if i - j == 0:\n', '                break\n', ""            if s[i - j - 1] == '>':\n"", '                j += 1\n', '            else:\n', '                break\n', '        return ans\n', '    for i in range(n):\n', '        if i == 0:\n', ""            if s[i] == '<':\n"", '                ans[0] = 0\n', '                ans = right(i, ans)\n', '            else:\n', '                pass\n', '        elif i == n - 1:\n', ""            if s[i - 1] == '>':\n"", '                ans[n - 1] = 0\n', '                ans = left(i, ans)\n', '            else:\n', '                pass\n', '        else:\n', ""            if s[i] == '<' and s[i - 1] == '>':\n"", '                ans[i] = 0\n', '                ans = right(i, ans)\n', '                ans = left(i, ans)\n', '            else:\n', '                pass\n', '    print(sum(ans))\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']","['listA=[]\n', 'listOP=[]\n', 'listB=[]\n', 'count=0\n', 'while True:\n', '    a,op,b=input().split()\n', '    listA.append(int(a))\n', '    listOP.append(op)\n', '    listB.append(int(b))\n', '    if op==""?"":\n', '        del listA[len(listA)-1]\n', '        del listOP[len(listOP)-1]\n', '        del listB[len(listB)-1]\n', '        break\n', '#入力パートここまで。計算出力パートここから\n', 'while count<=len(listA)-1:\n', '    if listOP[count]==""+"":\n', '        print(listA[count]+listB[count])\n', '    elif listOP[count]==""-"":\n', '        print(listA[count]-listB[count])\n', '    elif listOP[count]==""*"":\n', '        print(listA[count]*listB[count])\n', '    elif listOP[count]==""/"":\n', '        print(listA[count]//listB[count])\n', '    else:\n', '        print(""ERROR"")\n', '    count+=1\n']",0
"['i = int(input()) \n', 'if i%2==0:\n', '    x=i/2-1\n', '    print(int(x))\n', 'else:\n', '    x=(i-1)/2\n', '    print(int(x))']","['import sys\n', 'import math\n', 'import itertools\n', 'import collections\n', '\n', 'sys.setrecursionlimit(1000000)\n', 'MOD = 10 ** 9 + 7\n', 'input = lambda: sys.stdin.readline().strip()\n', '\n', 'NI = lambda: int(input())\n', 'NMI = lambda: map(int, input().split())\n', 'NLI = lambda: list(NMI())\n', 'SI = lambda: input()\n', '\n', 'def main():\n', '    N = NI()\n', '    xy = [NLI() for _ in range(N)]\n', '    \n', '    ls = [p for p in range(N)]\n', '    p_list = list(itertools.permutations(ls))\n', '    \n', '    full_course = ["""" for _ in range(len(p_list))]\n', '    \n', '    for k in range(len(p_list)):\n', '        distance = 0\n', '        for l in range(N-1):\n', '            departure = p_list[k][l] \n', '            goal = p_list[k][l+1]\n', '            Xd = xy[departure][0]\n', '            Yd = xy[departure][1]\n', '            Xg = xy[goal][0]\n', '            Yg = xy[goal][1]\n', '            distance += ((Xd-Xg)**2 + (Yd-Yg)**2)**(1/2)\n', '        full_course[k] = distance\n', '\n', '    print(sum(full_course)/len(p_list))\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    main()']",0
"['from collections import defaultdict\n', '\n', 'def bfs(s):\n', '  q = [s]\n', '  while q != []:\n', '    p = q[0]\n', '    del q[0]\n', '    for node in adj[p]:\n', '      if not visited[node]:\n', '        visited[node] = True\n', '        q.append(node)\n', '\n', 'n,m = map(int,input().split())\n', 'adj = defaultdict(list)\n', 'visited = [False]*(n+1)\n', 'comp = 0\n', 'for _ in range(m):\n', '  a,b = map(int,input().split())\n', '  adj[a].append(b)\n', '  adj[b].append(a)\n', 'for i in range(1,n+1):\n', '  if not visited[i]:\n', '    comp+=1\n', '    bfs(i)\n', 'print(comp-1)']","['import math\n', '\n', 'a, b, x = map(int, input().split())\n', '\n', 'if x/a >= a*b/2:\n', '    ans = math.atan((b-x/a/a)*2/a)\n', 'else:\n', '    ans = math.atan(a*b*b/x/2)\n', 'print(math.degrees(ans))']",0
"['n = input()\n', '\n', 'l = list( map(int, input().split()))\n', '\n', 'odd = [ c for c in l if (c % 2 == 0 ) and (( c % 3 != 0) and ( c % 5 !=0 ))]\n', 'if len( odd ) == 0: \n', '  print( ""APPROVED"" )\n', 'else:\n', '  print( ""DENIED"" )']","['while True:\n', '    ins = input().split()\n', '    \n', '    a = int(ins[0])\n', '    b = int(ins[2])\n', '    op = ins[1]\n', '\n', '    if op == ""?"":\n', '        break\n', '    elif op == ""+"":\n', '        print(a+b)\n', '    elif op == ""-"":\n', '        print(a-b)\n', '    elif op == ""/"":\n', '        print(a//b)\n', '    else:\n', '        print(a*b)']",0
"['import math\n', 'N = int(input())\n', 'X = N/1.08 \n', 'Y = math.ceil(X)\n', 'Z = math.floor(Y*1.08)\n', 'if N == Z:\n', '  print(Y)\n', 'else:\n', ""  print(':(')""]","['n, a, b = map(int,input().split())\n', 'if a % 2 == b % 2:\n', '    print((b-a)//2)\n', 'else:\n', '    ans = min(n-b, a-1) + 1 + (b-a-1)//2\n', '    print(ans)']",0
"['a, b = map(int, input().split())\n', ""print('{} {} {:f}'.format(a//b, a%b, a/b))\n""]","['def abc154d_dice_in_line():\n', '    n, k = map(int, input().split())\n', '    p = list(map(lambda x: (int(x)+1)*(int(x)/2)/int(x), input().split()))\n', '    ans = sum(p[0:k])\n', '    val = ans\n', '    for i in range(k, len(p)):\n', '        val = val - p[i-k] + p[i]\n', '        ans = max(ans, val)\n', '    print(ans)\n', 'abc154d_dice_in_line()']",0
"['import numpy as np\n', '\n', 'a,b,h,m=[int(i) for i in input().split()]\n', '\n', 'def get_angle(h,m):\n', '    long_angle=2*np.pi*m/60\n', '    short_angle=2*np.pi*h/12+(2*np.pi/12)*m/60\n', '    big_angle=max(long_angle,short_angle)\n', '    small_angle = min(long_angle, short_angle)\n', '    angle=min(big_angle-small_angle,2*np.pi-big_angle+small_angle)\n', '    return angle\n', '\n', 'def yogen(a,b,theta):\n', '    ans=a**2+b**2-2*a*b*np.cos(theta)\n', '    return ans**0.5\n', '\n', 'print(yogen(a,b,get_angle(h,m)))']","['def step_sum(n):\n', '\n', '    return (n*(n+1))//2\n', '\n', 'n = int(input())\n', 'table = [0]*n\n', 'ans = 0\n', 'for i in range(1, n+1):\n', '    ans += i*step_sum(n//i)\n', 'print(ans)']",0
"['L,R,d=map(int,input().split())\n', '\n', 'R_=R//d\n', 'L_=(L-1)//d\n', '\n', 'print(R_-L_)']","['import math\n', 'gun_list = [1]\n', 'for i in range(11):\n', '    gun_list.append(gun_list[-1]+26**(i+1))\n', '#print(gun_list)\n', '#郡の始まりのnumをしまったリスト\n', 'a =int(input())\n', '#print()\n', 'gun_sum = 12\n', 'for i in range(13):\n', '    if gun_list[i] <= a and gun_list[i+1] > a:\n', '        gun_num = i\n', '        break\n', '#print(gun_num)\n', 'b = a-gun_list[gun_num]\n', '#print(b)\n', '\n', 'x_list = [26**i for i in range(gun_num+1)]\n', 'x_list = x_list[::-1]\n', '#print(x_list)\n', '\n', 'ans_list = []\n', 'for i in range(len(x_list)):\n', '    if i > 0:\n', '        b -= x_list[i-1]*ans_list[i-1]\n', '        \n', '        ans_list.append(math.floor(b/x_list[i]))\n', '    else:\n', '        ans_list.append(math.floor(b/x_list[0]))\n', '    \n', '\n', '#print(ans_list)\n', '\n', ""ans = ''\n"", 'for i in range(len(ans_list)):\n', '    ans += chr(97+ans_list[i])\n', '    #print(ans)\n', 'print(ans)']",0
"['x = int(input())\n', '\n', 'def check(input):\n', '    one = 1800\n', '    two = 1999\n', '    kyu = 1\n', '    while one >= 400:\n', '        if one <= input <= two:\n', '            return kyu\n', '        kyu += 1\n', '        one -= 200\n', '        two -= 200\n', '\n', 'print(check(x))\n']","['# -*- coding: utf-8 -*-\n', '\n', 'N,X,M=map(int,input().split())\n', '\n', 'A=[0]*(M+1)\n', 'A[0]=X\n', 'D=[0]*(M+1)\n', '\n', 's=N\n', 'for i in range(1,N):\n', '    a=A[i-1]**2%M\n', '    if D[a] == 1:\n', '        s=A.index(a)\n', '        break\n', '    else:\n', '        A[i]=a\n', '        D[a]=1\n', '\n', 'if s==N:\n', '    ans=sum(A)\n', 'else:\n', '    A=A[:i]\n', '    \n', '    ans=0\n', '    l=len(A)-s\n', '    ans+=sum(A[:s])\n', '    S=sum(A[s:])\n', '    T=(N-s)//l\n', '    ans+=T*S\n', '    K=N-s-l*T\n', '    ans+=sum(A[s:(s+K)])\n', '\n', '\n', 'print(ans)\n']",0
"['import sys\n', 'read = sys.stdin.buffer.read\n', 'readline = sys.stdin.buffer.readline\n', 'readlines = sys.stdin.buffer.readlines\n', 'sys.setrecursionlimit(10 ** 7)\n', '\n', 'n, m = map(int, readline().split())\n', 'if n == m:\n', ""    print('Yes')\n"", 'else:\n', ""    print('No')\n""]","['A, B, C, D = map(int, input().split())\n', 'ctr = 0\n', '\n', 'while True:\n', '    if C <= 0:\n', '        print(""Yes"")\n', '        break\n', '    if A <= 0:\n', '        print(""No"")\n', '        break\n', '    if ctr % 2 == 0:\n', '        C -= B\n', '    else:\n', '        A -= D\n', '    ctr += 1\n']",0
"['import sys,queue,math,copy,itertools,bisect,collections,heapq\n', '\n', 'def main():\n', '    sys.setrecursionlimit(10**7)\n', '    INF = 10**18\n', '    MOD = 10**9 + 7\n', '    LI = lambda : [int(x) for x in sys.stdin.readline().split()]\n', '    NI = lambda : int(sys.stdin.readline())\n', '    SI = lambda : sys.stdin.readline().rstrip()\n', '\n', '    N,D,A = LI()\n', '    X = []; XH = []\n', '    for _ in range(N):\n', '        x,h = LI()\n', '        X.append(x); XH.append((x,h))\n', '    XH.sort()\n', '    X.sort()\n', '    down = [0] * (N+1)\n', '\n', '\n', '    p = 0\n', '    ans = 0\n', '    for i in range(N):\n', '        if p < XH[i][1]:\n', '            b = -(-(XH[i][1]-p)//A)\n', '            ans += b\n', '            p += b * A\n', '            down[bisect.bisect(X,X[i]+2*D)-1] += b*A\n', '        p -= down[i]\n', '    print(ans)\n', '\n', ""if __name__ == '__main__':\n"", '    main()']","['a,b=input().split()\n', 'c=int(a);d=int(b)\n', '\n', 'if c>=-1000 and d<=1000:\n', '    if c>d:\n', '        print(""a > b"")\n', '\n', '    elif c<d:\n', '        print(""a < b"")\n', '\n', '    else:\n', '        print(""a == b"")']",0
"['a, b, c, k = map(int, input().split())\n', 'ans = 0\n', 'if a >= k:\n', '    ans = k * 1\n', 'else:\n', '    ans = a * 1 + max(0, (k - a)) * 0 + max(0, (k - a - b)) * (-1)\n', 'print(ans)\n']","['import sys\n', 'sys.setrecursionlimit(10000000)\n', 'MOD = 10 ** 9 + 7\n', 'INF = 10 ** 15\n', '\n', 'N = int(input())\n', 'ans = []\n', 'const = 2*3**0.5\n', 'def korch_curve(Lx,Ly,Rx,Ry,i):\n', '    if i == 0:\n', '        ans.append((Lx,Ly))\n', '        return \n', '    third_y = (Ly*2 + Ry)/3\n', '    third_x = (Lx*2 + Rx)/3\n', '    korch_curve(Lx,Ly,third_x,third_y,i - 1)\n', '    middle_x = (Lx + Rx)/2 - (Ry - Ly)/const\n', '    middle_y = (Ly + Ry)/2 + (Rx - Lx)/const\n', '    korch_curve(third_x,third_y,middle_x,middle_y,i - 1)\n', '    third_second_x = (Lx + Rx*2)/3\n', '    third_second_y = (Ly + Ry*2)/3\n', '    korch_curve(middle_x,middle_y,third_second_x,third_second_y,i - 1)\n', '    korch_curve(third_second_x,third_second_y,Rx,Ry,i - 1)\n', 'korch_curve(0,0,100,0,N)\n', 'ans.append((100,0))\n', 'for a in ans:\n', '    print(*a)\n']",0
"['n = int(input())\n', 'a = [int(s) for s in input().split()]\n', '\n', 't=a[0]\n', 'total=0\n', '\n', 'for i in range(n):\n', '  if t>a[i]:\n', '    total=total+t-a[i]\n', '  else:\n', '    t=a[i]\n', '    \n', 'print(total)']","['import sys\n', 'read = sys.stdin.read\n', 'readlines = sys.stdin.readlines\n', 'from itertools import combinations\n', 'def main():\n', '    n, *a = map(int, read().split())\n', '    coma = combinations(a, 3)\n', '    r = 0\n', '    for c in coma:\n', '        if sum(c) > max(c)*2:\n', '            if len(set(c)) > 2:\n', '                r += 1\n', '    print(r)\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']",0
"['input = raw_input()\n', '\n', 'for i in xrange(len(input)):\n', '  # print ""i = "" + str(i) + "", input[i] = "" + input[i]\n', '  if input[i].islower():\n', '    input = input[:i] + input[i].upper() + input[i + 1:]\n', '  elif input[i].isupper():\n', '    input = input[:i] + input[i].lower() + input[i + 1:]\n', '\n', 'print input']","['import sys\n', 'def main():\n', '\n', '    cnt = {}\n', '    for i in range(97,123):\n', '        cnt[chr(i)] = 0\n', '    # print(cnt)\n', '\n', '    for passages in sys.stdin:\n', '        for psg in passages:\n', '            psglower = psg.lower()\n', '            for s in psglower:\n', '                if s.isalpha():\n', '                    cnt[s] += 1\n', '\n', '    for i in range(97,123):\n', '        s = chr(i)\n', ""        print(s, ':', cnt[s])\n"", '\n', ""if __name__ == '__main__':\n"", '    main()\n']",0
"['n,x,m=map(int,input().split())\n', 'ans=x\n', 'count=1\n', 'table=[0]*m\n', 'table[x]=1\n', 'r=[0,x] #一般項\n', 'f=1\n', 'for i in range(n-1):\n', '    x=pow(x,2,m)\n', '    ans+=x\n', '    count+=1\n', '    if table[x]:\n', '        f=0\n', '        break\n', '    r.append(x)\n', '    table[x]=count\n', 'if f or table[0]:\n', '    print(ans)\n', '    exit()\n', 'ans=0\n', ""'''\n"", 'table[x]項目とcount項目が同じ\n', 'loop前の項+loopの項*loop数+足りない分\n', ""'''\n"", 'ans=sum(r[:table[x]])\n', 'loop=(n-table[x]+1)//(count-table[x])\n', 'ans+=sum(r[table[x]:])*loop\n', 'nokori=(n-table[x]+1)%(count-table[x])\n', 'for i in range(nokori):\n', '    ans+=r[table[x]+i]\n', 'print(ans)']","['k = int(input())\n', 'a, b = map(int, input().split())\n', '\n', 'f = False\n', 'for x in range(a, b+1):\n', '  if x % k == 0:\n', '    f = True\n', '    \n', ""print('OK' if f else 'NG')""]",0
"['import sys\n', 'INF = 1 << 60\n', 'MOD = 10**9 + 7 # 998244353\n', 'sys.setrecursionlimit(2147483647)\n', 'input = lambda:sys.stdin.readline().rstrip()\n', 'def resolve():\n', '    k = int(input())\n', '    queue = list(range(1, 10))\n', '    cnt = 0\n', '    for v in queue:\n', '        cnt += 1\n', '        if k == cnt:\n', '            print(v)\n', '            return\n', '        r = v % 10\n', '        for d in range(r - 1, r + 2):\n', '            if 0 <= d <= 9:\n', '                queue.append(v * 10 + d)\n', 'resolve()']","['import sys\n', 'import math\n', 'import copy\n', 'from typing import Tuple, List, Union\n', 'input = sys.stdin.readline\n', '\n', 'sin60 = math.sqrt(3) / 2\n', 'cos60 = 1/ 2\n', '\n', 'class Position:\n', '    def __init__(self, x, y):\n', '        self.x = x\n', '        self.y = y\n', '    def __repr__(self):\n', '        return ""{:.8f} {:.8f}"".format(self.x, self.y)\n', '\n', '\n', 'def koch(n: int, p1, p2):\n', '    if n == 0:\n', '        return\n', '    s = Position((2 * p1.x + p2.x) / 3, (2 * p1.y + p2.y) / 3)\n', '    t = Position((p1.x + 2 * p2.x) / 3, (p1.y +  2 * p2.y) / 3)\n', '    u = Position((t.x - s.x) * cos60 - (t.y - s.y) * sin60 + s.x,\n', '                 (t.x - s.x) * sin60 + (t.y - s.y) * cos60 + s.y)\n', '    koch(n - 1, p1, s)\n', '    print(s)\n', '    koch(n-1, s, u)\n', '    print(u)\n', '    koch(n-1, u, t)\n', '    print(t)\n', '    koch(n-1, t, p2)\n', '\n', '\n', '\n', 'def main():\n', '    n = int(input())\n', '    p1 = Position(0.0, 0.0)\n', '    p2 = Position(100.0, 0.0)\n', '    print(p1)\n', '    koch(n, p1, p2)\n', '    print(p2)\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n', '\n']",0
"['a = int(input())\n', 'b = int(input())\n', 'if (a == 1 and b == 2) or (a == 2 and b == 1):\n', '    print(3)\n', 'elif (a == 1 and b == 3) or (a == 3 and b == 1):\n', '    print(2)\n', 'else:\n', '    print(1)']","['n, k = map(int, input().split())\n', 'p = list(map(int, input().split()))\n', 'sortPrice = sorted(p)\n', '# print(sortPrice)\n', 'price = []\n', 'for i in range(0, k):\n', '    price.append(sortPrice[i])\n', 'print(sum(price))']",0
"['#!/usr/bin/env python3\n', '# Generated by https://github.com/kyuridenamida/atcoder-tools\n', 'from typing import *\n', 'import collections\n', 'import functools\n', 'import itertools\n', 'import math\n', 'import operator\n', 'import sys\n', '\n', ""INF = float('inf')\n"", '\n', '\n', 'def solve(N: int, P: ""List[int]"", Q: ""List[int]""):\n', '    return abs(operator.sub(*[list(itertools.permutations(range(1, N+1))).index(tuple(i)) for i in [P, Q]]))\n', '\n', '\n', 'def main():\n', '\n', '    sys.setrecursionlimit(10 ** 6)\n', '\n', '    def iterate_tokens():\n', '        for line in sys.stdin:\n', '            for word in line.split():\n', '                yield word\n', '    tokens = iterate_tokens()\n', '    N = int(next(tokens))  # type: int\n', '    P = [int(next(tokens)) for _ in range(N)]  # type: ""List[int]""\n', '    Q = [int(next(tokens)) for _ in range(N)]  # type: ""List[int]""\n', ""    print(f'{solve(N, P, Q)}')\n"", '\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']","['\n', 'class Card:\n', '    def __init__(self, data, i):\n', '        self.suit = data[0]\n', '        self.value = data[1]\n', '        self.initord = i\n', '\n', 'def BubbleSort(cards, N):\n', '    for i in range(N):\n', '        for j in range(N - 1, i, -1):\n', '            if cards[j].value < cards[j - 1].value:\n', '                cards[j], cards[j - 1] = cards[j - 1], cards[j]\n', '\n', 'def SelectionSort(cards, N):\n', '    for i in range(N):\n', '        min_j = i\n', '\n', '        for j in range(i + 1, N):\n', '            if cards[j].value < cards[min_j].value:\n', '                min_j = j\n', '\n', '        cards[i], cards[min_j] = cards[min_j], cards[i]\n', '\n', 'N = int(input())\n', 'cards = [Card(data, i) for i, data in enumerate(input().split())]\n', '\n', 'cards1 = cards.copy()\n', 'cards2 = cards.copy()\n', '\n', 'BubbleSort(cards1, N)\n', 'SelectionSort(cards2, N)\n', '\n', 'print(*[card.suit + card.value for card in cards1])\n', '\n', 'for i in range(N - 1):\n', '    if cards1[i].value == cards1[i + 1].value:\n', '        if cards1[i].initord > cards1[i + 1].initord:\n', '            print(""Not stable"")\n', '            break\n', 'else:\n', '    print(""Stable"")\n', '\n', 'print(*[card.suit + card.value for card in cards2])\n', '\n', 'for i in range(N - 1):\n', '    if cards2[i].value == cards2[i + 1].value:\n', '        if cards2[i].initord > cards2[i + 1].initord:\n', '            print(""Not stable"")\n', '            break\n', 'else:\n', '    print(""Stable"")']",0
"['d,t,s=map(int, input().split())\n', 'if d/s<=t:\n', '  print(""Yes"")\n', 'else:\n', '  print(""No"")']","['print(pow(int(input()), 2))\n']",0
"['t1,t2 = map(int,input().split())\n', 'c1,c2 = map(int,input().split())\n', 'd1,d2 = map(int,input().split())\n', 'hosei = 0\n', 'if t1*c1>t1*d1:\n', '    a1=c1\n', '    a2=c2\n', '    b1=d1\n', '    b2=d2\n', 'else:\n', '    a1,a2,b1,b2=d1,d2,c1,c2\n', 'if t1*a1+t2*a2 > t1*b1+t2*b2:\n', '    print(0)\n', '    exit()\n', 'elif t1*a1+t2*a2 == t1*b1+t2*b2:\n', '    print(""infinity"")\n', 'else:\n', '    # print((t1*(a1-b1))//(t2*(b2-a2)) + 1,t1*(a1-b1),t2*(b2-a2))\n', '    if t2*(b2-a2) % (t2*(b2-a2)-t1*(a1-b1)) == 0:\n', '        hosei = 1\n', '    print((t2*(b2-a2)) // (t2*(b2-a2)-t1*(a1-b1))*2-1-hosei)\n', '    # print((t2*(a2-b2)))']","['a = int(input())\n', '\n', 'print(""{}"".format(a+a**2+a**3))']",0
"['import sys\n', '\n', '\n', 'def resolve(in_):\n', '    N, M = map(int, next(in_).split())\n', '    PS = tuple(line.strip().split() for line in in_)\n', '    \n', '    ac = set()\n', '    wa = {}\n', '\n', '    for p, s in PS:\n', ""        if s == 'AC':\n"", '            ac.add(p)\n', ""        if s == 'WA' and p not in ac:\n"", '            wa[p] = wa.setdefault(p, 0) + 1\n', '\n', '    penalties = 0\n', '    for k, v in wa.items():\n', '        if k in ac:\n', '            penalties += v\n', '    \n', ""    return '{} {}'.format(len(ac), penalties)\n"", '\n', '\n', 'def main():\n', '    answer = resolve(sys.stdin)\n', '    print(answer)\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']","['number = [i for i in input().split()]\n', 'number.sort()\n', ""print(' '.join(number))\n"", '\n', '\n']",0
"['print((lambda a: len([i for i in range(a[0], a[1]+1) if a[2] % i == 0]))(list(map(int, input().split()))))']","['n,k=map(int,input().split())\n', 'def main(n,k):\n', '    if n//k:\n', '        return main(n//k,k)+str(n%k)\n', '    return str(n%k)\n', 'print(len(main(n,k)))']",0
"['while True:\n', '    \n', '    num = int(input())\n', '    \n', '    if num == 0:\n', '        break\n', '    box = []\n', '    while num != 0:\n', '        box.append(num%10)\n', '        num = num//10\n', '        \n', '    print(sum(box))\n']","['import fractions\n', 'mod=10**9+7\n', 'def lcm(m,n):return m//fractions.gcd(m,n)*n\n', 'n=int(input())\n', 'a=list(map(int,input().split()))\n', 'l=a[0]\n', 'ans=0\n', 'for i in a:l=lcm(i,l)\n', 'for i in a:ans+=l*pow(i,mod-2,mod)%mod\n', 'print(ans%mod)']",0
"['import sys\n', 'def input(): return sys.stdin.readline().strip()\n', 'def mapint(): return map(int, input().split())\n', 'sys.setrecursionlimit(10**9)\n', '\n', 'A, B = mapint()\n', 'from math import gcd\n', 'g = gcd(A, B)\n', '\n', 'def prime_factorize(n):\n', '    a = []\n', '    while n % 2 == 0:\n', '        a.append(2)\n', '        n //= 2\n', '    f = 3\n', '    while f * f <= n:\n', '        if n % f == 0:\n', '            a.append(f)\n', '            n //= f\n', '        else:\n', '            f += 2\n', '    if n != 1:\n', '        a.append(n)\n', '    return len(set(a))\n', '\n', 'print(prime_factorize(g)+1)\n', '\n']","['num = int(input())\n', '\n', 'print(""{0}"".format(num**3))\n']",0
"['def main():\n', '    A1, A2, A3 = map(int, input().split())\n', '\n', '    if A1 + A2 + A3 >= 22:\n', '        ans = ""bust""\n', '    else:\n', '        ans = ""win""\n', '\n', '    print(ans)\n', '\n', '\n', 'if __name__ == ""__main__"":\n', '    main()\n']","['u, s, e, w, n, d = input().split()\n', 'insts = input()\n', 'for inst in insts:\n', ""    if inst == 'N':\n"", '        u, s, n, d = s, d, u, n\n', ""    elif inst == 'E':\n"", '        u, e, w, d = w, u, d, e\n', ""    elif inst == 'S':\n"", '        u, s, n, d = n, u, d, s\n', ""    elif inst == 'W':\n"", '        u, e, w, d = e, d, u, w\n', 'print(u)']",0
"['#!usr/bin/env pypy3\n', 'from collections import defaultdict, deque\n', 'from heapq import heappush, heappop\n', 'from itertools import permutations, accumulate\n', 'import sys\n', 'import math\n', 'import bisect\n', 'def LI(): return [int(x) for x in sys.stdin.readline().split()]\n', 'def I(): return int(sys.stdin.readline())\n', 'def LS():return [list(x) for x in sys.stdin.readline().split()]\n', 'def S():\n', '    res = list(sys.stdin.readline())\n', '    if res[-1] == ""\\n"":\n', '        return res[:-1]\n', '    return res\n', 'def IR(n):\n', '    return [I() for i in range(n)]\n', 'def LIR(n):\n', '    return [LI() for i in range(n)]\n', 'def SR(n):\n', '    return [S() for i in range(n)]\n', 'def LSR(n):\n', '    return [LS() for i in range(n)]\n', '\n', 'sys.setrecursionlimit(1000000)\n', '\n', 'def main():\n', '    K = I()\n', '    ans = 0\n', '    for i in range(1, K+1):\n', '        for j in range(1, K+1):\n', '            for k in range(1, K+1):\n', '                ans += math.gcd(math.gcd(i, j), k)\n', '    print(ans)\n', '\n', '\n', 'main()\n']","['a, b = map(int, raw_input().split())\n', 'print(str(a*b) + "" "" + str(2*(a+b)))']",0
"['# coding: utf-8\n', '#Problem Name: Debt Hell\n', '#ID: tabris\n', '#Mail: t123037@kaiyodai.ac.jp\n', '\n', 'n = float(raw_input())\n', 'dept = 100000\n', 'for i in range(int(n)):\n', '    dept *= 1.05\n', '    if not (dept/1000).is_integer():\n', '        dept /= 1000\n', ""        dept = __import__('math',fromlist=['floor']).floor(dept)*1000+1000\n"", 'print int(dept)']","['while 1:\n', '    h, w = map(int, input().split())\n', '    if h == w == 0: break\n', '    \n', '    for y in range(h):\n', '        for x in range(w):\n', '            print(""#"", end="""")\n', '        print("""")\n', '\n', '    print("""")']",0
"['N=int(input())\n', 'S=[input()for _ in range(N)]\n', 'from collections import*\n', 'C=Counter(S)\n', ""print('AC','x',C['AC'])\n"", ""print('WA','x',C['WA'])\n"", ""print('TLE','x',C['TLE'])\n"", ""print('RE','x',C['RE'])""]","['coffee = input()\n', '\n', 'if coffee[2] == coffee[3] and coffee[4] == coffee[5]:\n', '    print(""Yes"")\n', 'else:\n', '    print(""No"")']",0
"['X, N = map(int,input().split())\n', 'p = list(map(int,input().split()))\n', 'i = 0\n', 'while True:\n', '  if not X - i in p:\n', '    print(X - i)\n', '    break\n', '  if not X + i in p:\n', '    print(X + i)\n', '    break\n', '  i += 1']","['A, B, C, D = map(int, input().split())\n', 'while True:\n', '  # 高橋\n', '  C -= B\n', '  if C <= 0:\n', ""    print('Yes')\n"", '    break\n', '  # 青木\n', '  A -= D\n', '  if A <= 0:\n', ""    print('No')\n"", '    break']",0
"['n=int(input())\n', 'a=list(map(int,input().split()))\n', 'tot=sum(a)\n', 'b=0\n', 'c=10**10\n', 'd=0\n', 'for i in range(n):\n', '  b+=a[i]\n', '  d=abs(tot/2 - b)\n', '  if d<c:\n', '    c=d\n', 'print(int(2*c))']","['a, b, c = map(int, input().split())\n', '\n', 'if a > b:\n', '    tmp = b\n', '    b = a\n', '    a = tmp\n', '\n', 'if b > c:\n', '    tmp = c\n', '    c = b\n', '    b = tmp\n', '\n', 'if a > b:\n', '    tmp = b\n', '    b = a\n', '    a = tmp\n', '\n', 'print(a,b,c)\n', '\n', '# sortを使って解く -> Presentation error となってしまう。。\n', '""""""\n', 'A = list(map(int, input().split()))\n', 'A.sort()\n', 'for a in A:\n', ""    print(a, end=' ')\n"", '""""""\n', '\n']",0
"['import sys\n', 'from collections import defaultdict\n', 'def input(): return sys.stdin.readline().strip()\n', 'from math import sqrt\n', '\n', '\n', 'def factor(n):\n', '    """"""\n', '    nの約数を個数と共にリストにして返す。\n', '    ただしあとの都合上１は除外する。\n', '    """"""\n', '\n', '    if n == 1:\n', '        return 0, []\n', '    if n == 2:\n', '        return 1, [2]\n', '    if n == 3:\n', '        return 1, [3]\n', '\n', '    d = int(sqrt(n))\n', '    num = 1\n', '    factor_pre = []\n', '    factor_post = [n]\n', '    for i in range(2, d):\n', '        if n % i == 0:\n', '            factor_pre.append(i)\n', '            factor_post.append(n // i)\n', '            num += 2\n', '    if d * d == n:\n', '        factor_pre.append(d)\n', '        num += 1\n', '    elif n % d == 0:\n', '        factor_pre.append(d)\n', '        factor_post.append(n // d)\n', '        num += 2\n', '    factor_post.reverse()\n', '    return num, factor_pre + factor_post\n', '\n', '\n', 'def main():\n', '    N = int(input())\n', '\n', '    """"""\n', '    題を満たすKは、\n', '        N = K^e * n、(n, K) = 1\n', '    として\n', '        n = K * m + 1 (m ¥in ¥mathbb{N})\n', '    とかければ良い。\n', '\n', '    ２つ目の式からnとKが互いに素なのは明らかなので、問題文は\n', '        N = K^e * (K * m + 1) (m ¥in ¥mathbb{N})\n', '    なるKを求めることに同値。\n', '\n', '    なのでまずはNの約数を全列挙して、あとはNをそれで割った商がKで割って1余るか確かめれば良い。\n', '    """"""\n', '\n', '    _, fact = factor(N)\n', '    ans, ans_list = factor(N - 1)\n', '    # print(ans_list)\n', '\n', '    # print(""Now we check the list {}"".format(fact))\n', '    for K in fact:\n', '        n = N\n', '        while n % K == 0:\n', '            n //= K\n', '        if n % K == 1:\n', '            ans += 1\n', '            ans_list.append(K)\n', '            # print(""{} added"".format(K))\n', '    # print(""ans={}: {}"".format(ans, ans_list))\n', '    print(ans)\n', '\n', '\n', '\n', 'if __name__ == ""__main__"":\n', '    main()\n']","['def get_char_value(char):\n', '    if char == ""C"":\n', '        return 1;\n', '    if char == ""A"":\n', '        return 2;\n', '    if char == ""G"":\n', '        return 3;\n', '    if char == ""T"":\n', '        return 4;\n', '\n', 'def get_string_value(string):\n', '    s = 0;\n', '    p = 1;\n', '    for char in string:\n', '        s += p * get_char_value(char);\n', '        p *= 5;\n', '    return s;\n', '\n', 'def h1(value, M):\n', '    return value % M;\n', '\n', 'def h2(value, M):\n', '    return 1 + value % (M - 1);\n', '\n', 'def insert(dic, M, string):\n', '    value = get_string_value(string);\n', '    h1_value = h1(value, M);\n', '    h2_value = h2(value, M);\n', '    i = 0;\n', '    while True:\n', '        index = (h1_value + i * h2_value) % M;\n', '        if dic[index] == string:\n', '            break;\n', '        elif dic[index] is None:\n', '            dic[index] = string;\n', '            break;\n', '        i += 1;\n', '\n', 'def find(dic, M, string):\n', '    value = get_string_value(string);\n', '    h1_value = h1(value, M);\n', '    h2_value = h2(value, M);\n', '    i = 0;\n', '    while True:\n', '        index = (h1_value + i * h2_value) % M;\n', '        if dic[index] == string:\n', '            return True;\n', '        elif dic[index] is None:\n', '            return False;\n', '        i += 1;\n', '\n', 'M = 1046527;\n', 'dic = [None for i in range(M)];\n', 'count = int(input());\n', 'for i in range(count):\n', '    command = input().split();\n', '    if command[0] == ""insert"":\n', '        insert(dic, M, command[1]);\n', '    elif command[0] == ""find"":\n', '        if find(dic, M, command[1]):\n', '            print(""yes"");\n', '        else:\n', '            print(""no"");\n', '\n', '\n']",0
"['import sys\n', 'input = sys.stdin.readline\n', '\n', '# from collections import deque\n', '\n', 'def linput(_t=int):\n', '    return list(map(_t, input().split()))\n', '\n', 'def gcd(n,m):\n', '    while m: n,m = m, n%m\n', '    return n\n', '\n', 'def lcm(n,m): return n*m//gcd(n,m)\n', '\n', 'def main():\n', '    # N = int(input())\n', '    # vA = [int(input()) for _ in [0,]*N]\n', '    h,m,H,M,K = linput()\n', '\n', '    res = 60*H + M - 60*h - m - K\n', '\n', '    print(res)\n', '    # print((""No"",""Yes"")[res%2])\n', '    # print(*vR, sep=""\\n"")\n', '\n', 'main()\n']","['n = int(input())\n', 'a = list(map(int, input().split()))\n', 'ans = 0\n', 'cnt = 0\n', 'for i in range(n) :\n', '    if a[i] == cnt + 1 :\n', '        cnt += 1\n', 'if cnt > 0 :\n', '    print(n-cnt)\n', 'else :\n', '    print(""-1"")\n']",0
"['#1st line\n', 'input_str = input().strip()\n', '\n', '#2nd line\n', 'command_max_times = int(input().strip())\n', 'command_cnt = 0\n', '\n', 'while command_cnt < command_max_times:\n', '    command_cnt = command_cnt + 1\n', '    input_line = input().strip().split("" "")\n', '    \n', '    input_command = input_line[0]\n', '    input_sta = int(input_line[1])\n', '    input_end = int(input_line[2])\n', '    \n', '    if input_command == ""print"":\n', '        print(input_str[input_sta:input_end+1])\n', '    elif input_command == ""replace"":\n', '        str_replace = input_line[3]\n', '        input_str = input_str[:input_sta] + str_replace + input_str[input_end+1:]\n', '    elif input_command == ""reverse"":\n', '        str_temp = input_str[input_sta:input_end+1]\n', '        input_str = input_str[:input_sta] + str_temp[::-1] + input_str[input_end+1:]']","['n=int(input())\n', 'l=sorted(list(map(int,input().split())))\n', 'for i,x in enumerate(l):\n', ""  l[i]=format(x,'63b')\n"", 'memo=[0]*63\n', 'for i in range(63):\n', '  for j in range(n):\n', ""    if l[j][i]=='1':\n"", '      memo[-i-1]+=1\n', 'now=1\n', 'ans=0\n', 'mod=10**9+7\n', 'for x in memo:\n', '  ans+=(now*x*(n-x))%mod\n', '  now*=2\n', 'print(ans%mod)\n']",0
"['X=int(input())\n', 'flagp=False\n', 'flagm=False\n', 'flage=True\n', 'for A in range(-10**3,10**3):\n', '    B5=A**5-X\n', '    for B in range(10**3):\n', '        if B5==B**5:\n', '            flagp=True\n', '            flage=False\n', '            break\n', '        elif B5==-B**5:\n', '            flagm=True\n', '            flage=False\n', '            break\n', '    else:\n', '        continue\n', '    break\n', 'if flagp:\n', '    print(A,B)\n', 'elif flage:\n', '    raise Exception\n', 'else:\n', '    print(A,-B)']","['h, n = map(int, input().split())\n', 'a = list(map(int, input().split()))\n', '\n', 'x = sum(a)\n', '\n', 'if (h - x) <= 0:\n', ""    print('Yes')\n"", 'else:\n', ""    print('No')""]",0
"['s = input()\n', 'k = int(input())\n', 'l=len(s)\n', ""s+='?'\n"", 'ch = 1\n', 'ans=0\n', 'j=0\n', '\n', 'for i in range(l):\n', '    if s[i]==s[i+1]:\n', '        ch+=1\n', '    else:\n', '        ans+=ch//2\n', '        if j==0:\n', '            st=ch\n', ""        if s[i+1]=='?':\n"", '            gl=ch\n', '        ch=1\n', '        j=1\n', 'ans*=k\n', 'if st%2==1 and gl%2==1 and s[0]==s[l-1]:\n', '    ans+=k-1\n', '\n', 'if st==l:\n', '    ans=l*k//2\n', '\n', 'print(ans)\n']","['s = input()\n', 'lc = s.lower()\n', 'uc = s.upper()\n', '\n', 'ans = """"\n', 'for i in range(len(s)):\n', '    if s[i] == lc[i]:\n', '        ans += uc[i]\n', '    else:\n', '        ans += lc[i]\n', 'print(ans)\n']",0
"['N, M = map(int, input().split())\n', 'A = list(map(int, input().split()))\n', 'def answer(N: int, M: int, A: list) -> int:\n', '    homework_days = 0\n', '    for i in range(0, M):\n', '        homework_days += int(A[i])\n', '        i += 1\n', '    if homework_days <= N:\n', '        return N - homework_days\n', '    else:\n', '        return -1\n', '\n', 'print(answer(N, M, A))']","['t1,t2 = map(int,input().split())\n', 'a1,a2 = map(int,input().split())\n', 'b1,b2 = map(int,input().split())\n', 'if a1*t1 + a2*t2 == b1*t1 + b2*t2:\n', '    print(""infinity"")\n', 'else:\n', '    A = a1*t1 + a2*t2\n', '    B = b1*t1 + b2*t2\n', '    M1,m1 = max(a1*t1,b1*t1),min(a1*t1,b1*t1)\n', '    M2,m2 = max(A,B),min(A,B)\n', '    gap1,gap2 = M1-m1,M2-m2\n', '    Mv,mv = max(a1,b1),min(a1,b1)\n', '    vgap = Mv-mv\n', '    possible = vgap*t1\n', '    count = possible//gap2\n', '    if possible%gap2 == 0:\n', '        pitta = 1\n', '    else:\n', '        pitta = 0\n', '    if (a1*t1 > b1*t1 and A > B) or (a1*t1 < b1*t1 and A < B):\n', '        print(0)\n', '    elif (a1*t1 > b1*t1 and A < B) or (a1*t1 < b1*t1 and A > B):\n', '        if pitta == 1:\n', '            print(1+count*2-1)\n', '        else:\n', '            print(1+count*2)']",0
"['N = int(input())\n', 'A = [int(a) for a in input().split()]\n', 'if N % 2 == 0:\n', '    x, y, px, py = 0, 0, 0, -1<<100\n', '    for a in A:\n', '        x, y, px, py = px+a, max(x, py+a), x, y\n', '    print(max(x, y))\n', 'else:\n', '    x, y, z, px, py, pz = 0, 0, 0, 0, -1<<100, -1<<100\n', '    for a in A:\n', '        x, y, z, px, py, pz = px+a, max(x, py+a), max(y, pz+a), x, y, z\n', '    print(max(y, z))']","['import sys\n', 'readline = sys.stdin.buffer.readline\n', 's =readline().rstrip().decode()\n', 't =readline().rstrip().decode()\n', '\n', 'if t[:-1] == s:\n', ""  print('Yes')\n"", 'else:\n', ""  print('No')\n""]",0
"['alpha = input()\n', 'print(""a"" if alpha.islower() else ""A"")']","['N = int(input())\n', 'S,T=input().split()\n', 'ST = """".join([S[i]+T[i] for i in range(N)])\n', 'print(ST)']",0
"['#!/usr/bin/env python3\n', '# Generated by https://github.com/kyuridenamida/atcoder-tools\n', 'from typing import *\n', 'import collections\n', 'import functools\n', 'import itertools\n', 'import math\n', 'import sys\n', '\n', ""INF = float('inf')\n"", '\n', '\n', 'def solve(H: int, A: int):\n', '    return H//A+(H % A > 0)\n', '\n', '\n', 'def main():\n', '\n', '    sys.setrecursionlimit(10 ** 6)\n', '\n', '    def iterate_tokens():\n', '        for line in sys.stdin:\n', '            for word in line.split():\n', '                yield word\n', '    tokens = iterate_tokens()\n', '    H = int(next(tokens))  # type: int\n', '    A = int(next(tokens))  # type: int\n', ""    print(f'{solve(H, A)}')\n"", '\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']","['def resolve():\n', '    n=int(input())\n', '    ans=0\n', '    for i in range(1,n):\n', '        ans+=(n-1)//i\n', '    print(ans)\n', 'resolve()']",0
"['A,B,C,K=map(int, input().split())\n', 'if A >= K:\n', '  ans = K\n', 'elif A+B >= K:\n', '  ans = A\n', 'else:\n', '  ans = A - (K-A-B)\n', 'print(ans)\n']","['# A - A?C\n', '# https://atcoder.jp/contests/abc166/tasks/abc166_a\n', '\n', 'S = input()\n', '\n', ""result = 'ABC'\n"", '\n', 'if S == result:\n', ""    result = 'ARC'\n"", '\n', 'print(result)\n']",0
"['import math\n', 's=input()\n', ""if(s[len(s)-1]=='s'):\n"", ""    print(s+'es')\n"", 'else:\n', ""    print(s+'s')""]","['from collections import deque\n', 'import sys\n', '\n', 'input()\n', 'lst = deque()\n', '\n', 'for s in sys.stdin:\n', ""    if s[0] == 'i':\n"", '        lst.appendleft(s[7:-1])\n', '\n', '    else:\n', '        a = s[6]\n', ""        if a == ' ':\n"", '            try:\n', '                lst.remove(s[7:-1])\n', '            except:\n', '                pass\n', '\n', ""        elif a == 'F':\n"", '                lst.popleft()\n', '\n', '        else:\n', '            lst.pop()\n', '\n', 'print(*lst)\n']",0
"['a,b=[],[]\n', 'for _ in range(int(input())):\n', '    x,y=map(int,input().split())\n', '    a+=[x-y]\n', '    b+=[x+y]\n', 'print(max(max(a)-min(a),max(b)-min(b)))']","[""write = open(1, 'w').write\n"", 'for i in range(1, int(open(0).read())+1):\n', '    if i % 3:\n', '        if ""3"" in str(i):\n', '            write("" %d"" % i)\n', '    else:\n', '        write("" %d"" % i)\n', 'write(""\\n"")\n']",0
"['import math\n', '\n', 'N = int(input())\n', '\n', 'min_move_count = float(""inf"")\n', 'for i in range(1, int(math.sqrt(N)) + 1):\n', '    if (N / i).is_integer():\n', '        move_count = i + (N // i) - 2\n', '        if move_count < min_move_count:\n', '            min_move_count = move_count\n', '\n', 'print(min_move_count)']","['import sys\n', 'input = sys.stdin.readline\n', 'from collections import *\n', '\n', 'X = int(input())\n', 'dp = [False]*(X+1)\n', 'dp[0] = True\n', '\n', 'for i in range(X+1):\n', '    for j in range(100, 106):\n', '        if i-j>=0:\n', '            dp[i] |= dp[i-j]\n', '\n', 'if dp[X]:\n', '    print(1)\n', 'else:\n', '    print(0)']",0
"['n = int(input())\n', 'x = [0]*n\n', 'for i in range(n):\n', '    x[i] = list(map(int,input().split()))\n', 'x.sort(key= lambda val : val[0])\n', 'i = 0\n', 'while 1:\n', '    if i >= n - 1:\n', '        break\n', '    \n', '    if x[i][0] + x[i][1] > x[i+1][0] - x[i+1][1]:\n', '        if x[i][0] + x[i][1] > x[i+1][0] + x[i+1][1]:\n', '            del x[i]\n', '            n -= 1\n', '        else:\n', '            del x[i+1]\n', '            n -= 1\n', '    else:\n', '        i += 1\n', 'print(len(x))\n']","['n = str(input())\n', 'ns = n.swapcase()\n', 'print(ns)\n']",0
"['N = int(input())\n', '\n', 'import sys\n', 'if N & 1:\n', '    print(0)\n', '    sys.exit()\n', '\n', 'ans = 0\n', 'N //= 2\n', 'while N != 0:\n', '    ans += N // 5\n', '    N //= 5\n', '\n', 'print(ans)']","['n,m,l = map(int,input().split())\n', 'a = [list(map(int,input().split())) for _ in range(n)]\n', 'b = [list(map(int,input().split())) for _ in range(m)]\n', 'c = [[0 for _ in range(l)] for __ in range(n)]\n', 'for i in range(n):\n', '  for j in range(l):\n', '    c[i][j] = sum([a[i][k]*b[k][j] for k in range(m)])\n', 'for ci in c:\n', '  print(*ci)\n']",0
"['container = [1, 1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 5, 1, 2, 1, 14, 1, 5, 1, 5, 2, 2, 1, 15, 2, 2, 5, 4, 1, 4, 1, 51]\n', 'unser = int(input())\n', 'print(container[unser - 1])']","['import sys\n', '\n', 'read = sys.stdin.read\n', 'readline = sys.stdin.readline\n', 'readlines = sys.stdin.readlines\n', 'sys.setrecursionlimit(10 ** 9)\n', 'INF = 1 << 60\n', 'MOD = 1000000007\n', '\n', '\n', 'def main():\n', '    N = int(readline())\n', '    S = readline().strip()\n', '    if N % 2 == 0 and S == S[: N // 2] * 2:\n', ""        print('Yes')\n"", '    else:\n', ""        print('No')\n"", '\n', '    return\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']",0
"['n = int(input())\n', 'a = list(map(int,input().split()))\n', 'q = int(input())\n', 'm = list(map(int,input().split()))\n', '\n', 'cnt = [0] * (2000 * 20)\n', '\n', 'for i in range(1, 2**n + 1):\n', '    SUM = 0\n', '    for j in range(n):\n', '        if i>>j & 1:\n', '            SUM += a[j]\n', '    cnt[SUM] = 1\n', '\n', 'for _m in m:\n', '    if cnt[_m] == 1:\n', '        print(""yes"")\n', '    else:\n', '        print(""no"")\n']","['import random\n', '\n', '\n', 'class Dice(object):\n', '\n', '    def __init__(self, *args):\n', '        self.faces = [None]\n', '        self.faces.extend(args)\n', '        self.top = self.faces[1]\n', '        self.up = self.faces[5]\n', '        self.down = self.faces[2]\n', '        self.left = self.faces[4]\n', '        self.right = self.faces[3]\n', '\n', '    def roll(self, direction):\n', '        if direction == ""N"":\n', '            self.top, self.up, self.down = self.down, self.top, self.faces[7 - self.faces.index(self.top)]\n', '        elif direction == ""S"":\n', '            self.top, self.up, self.down = self.up, self.faces[7 - self.faces.index(self.top)], self.top\n', '        elif direction == ""W"":\n', '            self.top, self.left, self.right = self.right, self.top, self.faces[7 - self.faces.index(self.top)]\n', '        elif direction == ""E"":\n', '            self.top, self.left, self.right = self.left, self.faces[7 - self.faces.index(self.top)], self.top\n', '        else:\n', '            raise ValueError(""{} is not valid direction."".format(direction))\n', '\n', '\n', 'f = [int(i) for i in input().split()]\n', 'dice = Dice(*f)\n', '\n', 'n = int(input())\n', 'for i in range(n):\n', '    top, down = [int(i) for i in input().split()]\n', '    while dice.top != top:\n', '        dice.roll(random.choice(""NSWE""))\n', '    if dice.down == down:\n', '        print(dice.right)\n', '    elif dice.right == down:\n', '        print(dice.up)\n', '    elif dice.up == down:\n', '        print(dice.left)\n', '    elif dice.left == down:\n', '        print(dice.down)\n', '    else:\n', '        raise ValueError()\n', '\n']",0
"['N = int(input())\n', '\n', 'M = 0\n', ""ans = 'No'\n"", '\n', 'for _ in range(N):\n', '    d1, d2 = map(int, input().split())\n', '    if d1 == d2:\n', '        M += 1\n', '        if M >= 3:\n', ""            ans = 'Yes'\n"", '    else:\n', '        M = 0\n', '\n', 'print(ans)\n']","['import math\n', 'N = int(input())\n', 'total = N/2*(N+1)\n', '\n', 'f = math.floor(N/3)\n', 'f = (3*f+3)*f/2\n', 'b = math.floor(N/5)\n', 'b = (5*b+5)*b/2\n', 'fb = math.floor(N/15)\n', 'fb = (15*fb+15)*fb/2\n', '\n', 'print(int(total-f-b+fb))\n']",0
"['N,K = map(int,input().split())\n', 'mod = 10**9+7\n', 'ans = [0]*(K+1)\n', 'result = 0\n', '\n', 'for i in range(K,0,-1):\n', '    c = K//i\n', '    ans[i] += pow(c,N,mod)\n', '    for j in range(i,K+1,i):\n', '        if i != j:\n', '            ans[i] -= ans[j]\n', '    result += i*ans[i] % mod\n', '\n', 'print(result%mod)']","['from sys import stdin\n', '\n', 'n = int(stdin.readline().rstrip())\n', 'A = [int(x) for x in stdin.readline().rstrip().split()]\n', '\n', 'ans = [0] * n\n', '\n', 'for i, a in enumerate(A):\n', '    ans[a-1] = i+1\n', '\n', ""print(' '.join(map(str, ans)))""]",0
"['# -*- coding: utf-8 -*-\n', '\n', '#############\n', '# Libraries #\n', '#############\n', '\n', 'import sys\n', 'input = sys.stdin.readline\n', '\n', 'import math\n', '#from math import gcd\n', 'import bisect\n', 'import heapq\n', 'from collections import defaultdict\n', 'from collections import deque\n', 'from collections import Counter\n', 'from functools import lru_cache\n', '\n', '#############\n', '# Constants #\n', '#############\n', '\n', 'MOD = 10**9+7\n', ""INF = float('inf')\n"", 'AZ = ""abcdefghijklmnopqrstuvwxyz""\n', '\n', '#############\n', '# Functions #\n', '#############\n', '\n', '######INPUT######\n', 'def I(): return int(input().strip())\n', 'def S(): return input().strip()\n', 'def IL(): return list(map(int,input().split()))\n', 'def SL(): return list(map(str,input().split()))\n', 'def ILs(n): return list(int(input()) for _ in range(n))\n', 'def SLs(n): return list(input().strip() for _ in range(n))\n', 'def ILL(n): return [list(map(int, input().split())) for _ in range(n)]\n', 'def SLL(n): return [list(map(str, input().split())) for _ in range(n)]\n', '\n', '######OUTPUT######\n', 'def P(arg): print(arg); return\n', 'def Y(): print(""Yes""); return\n', 'def N(): print(""No""); return\n', 'def E(): exit()\n', 'def PE(arg): print(arg); exit()\n', 'def YE(): print(""Yes""); exit()\n', 'def NE(): print(""No""); exit()\n', '\n', '#####Shorten#####\n', 'def DD(arg): return defaultdict(arg)\n', '\n', '#####Inverse#####\n', 'def inv(n): return pow(n, MOD-2, MOD)\n', '\n', '######Combination######\n', 'kaijo_memo = []\n', 'def kaijo(n):\n', '  if(len(kaijo_memo) > n): return kaijo_memo[n]\n', '  if(len(kaijo_memo) == 0): kaijo_memo.append(1)\n', '  while(len(kaijo_memo) <= n): kaijo_memo.append(kaijo_memo[-1] * len(kaijo_memo) % MOD)\n', '  return kaijo_memo[n]\n', '\n', 'gyaku_kaijo_memo = []\n', 'def gyaku_kaijo(n):\n', '  if(len(gyaku_kaijo_memo) > n): return gyaku_kaijo_memo[n]\n', '  if(len(gyaku_kaijo_memo) == 0): gyaku_kaijo_memo.append(1)\n', '  while(len(gyaku_kaijo_memo) <= n): gyaku_kaijo_memo.append(gyaku_kaijo_memo[-1] * pow(len(gyaku_kaijo_memo),MOD-2,MOD) % MOD)\n', '  return gyaku_kaijo_memo[n]\n', '\n', 'def nCr(n,r):\n', '  if n == r: return 1\n', '  if n < r or r < 0: return 0\n', '  ret = 1\n', '  ret = ret * kaijo(n) % MOD\n', '  ret = ret * gyaku_kaijo(r) % MOD\n', '  ret = ret * gyaku_kaijo(n-r) % MOD\n', '  return ret\n', '\n', '######Factorization######\n', 'def factorization(n):\n', '  arr = []\n', '  temp = n\n', '  for i in range(2, int(-(-n**0.5//1))+1):\n', '    if temp%i==0:\n', '      cnt=0\n', '      while temp%i==0: \n', '        cnt+=1 \n', '        temp //= i\n', '      arr.append([i, cnt])\n', '  if temp!=1: arr.append([temp, 1])\n', '  if arr==[]: arr.append([n, 1])\n', '  return arr\n', '\n', '#####MakeDivisors######\n', 'def make_divisors(n):\n', '  divisors = []\n', '  for i in range(1, int(n**0.5)+1):\n', '    if n % i == 0:\n', '      divisors.append(i)\n', '      if i != n // i: \n', '        divisors.append(n//i)\n', '  return divisors\n', '\n', '#####MakePrimes######\n', 'def make_primes(N):\n', '  max = int(math.sqrt(N))\n', '  seachList = [i for i in range(2,N+1)]\n', '  primeNum = []\n', '  while seachList[0] <= max:\n', '    primeNum.append(seachList[0])\n', '    tmp = seachList[0]\n', '    seachList = [i for i in seachList if i % tmp != 0]\n', '  primeNum.extend(seachList)\n', '  return primeNum\n', '\n', '#####GCD#####\n', 'def gcd(a, b):\n', '    while b: a, b = b, a % b\n', '    return a\n', '\n', '#####LCM#####\n', 'def lcm(a, b):\n', '    return a * b // gcd (a, b)\n', '\n', '#####BitCount#####\n', 'def count_bit(n):\n', '  count = 0\n', '  while n:\n', '    n &= n-1\n', '    count += 1\n', '  return count\n', '\n', '#####ChangeBase#####\n', 'def base_10_to_n(X, n):\n', '  if X//n: return base_10_to_n(X//n, n)+[X%n]\n', '  return [X%n]\n', '\n', 'def base_n_to_10(X, n):\n', '  return sum(int(str(X)[-i-1])*n**i for i in range(len(str(X))))\n', '\n', 'def base_10_to_n_without_0(X, n):\n', '  X -= 1\n', '  if X//n: return base_10_to_n_without_0(X//n, n)+[X%n]\n', '  return [X%n]\n', '\n', '#####IntLog#####\n', 'def int_log(n, a):\n', '  count = 0\n', '  while n>=a:\n', '    n //= a\n', '    count += 1\n', '  return count\n', '\n', '#############\n', '# Main Code #\n', '#############\n', 'class BIT:\n', '  def __init__(self, logn):\n', '    self.n = 1<<logn\n', '    self.data = [0]*(self.n+1)\n', '    self.el = [0]*(self.n+1)\n', '  def sum(self, i):\n', '    s = 0\n', '    while i > 0:\n', '      s += self.data[i]\n', '      i -= i & -i\n', '    return s\n', '  def add(self, i, x):\n', '    # assert i > 0\n', '    self.el[i] += x\n', '    while i <= self.n:\n', '      self.data[i] += x\n', '      i += i & -i\n', '  def get(self, i, j=None):\n', '    if j is None:\n', '      return self.el[i]\n', '    return self.sum(j) - self.sum(i)\n', '  def bisect(self, x):\n', '    w = i = 0\n', '    k = self.n\n', '    while k:\n', '      if i+k <= self.n and w + self.data[i+k] <= x:\n', '        w += self.data[i+k]\n', '        i += k\n', '      k >>= 1\n', '    return i+1\n', '\n', 'N = I()\n', 'A = list(S())\n', 'Q = I()\n', '\n', 'dic = {l:BIT(int_log(N,2)+1) for l in AZ}\n', '\n', 'for i in range(N):\n', '  s = A[i]\n', '  dic[s].add(i+1,1)\n', '\n', 'def change(i,y):\n', '  prev = A[i-1]\n', '  if prev == y:\n', '    pass\n', '  else:\n', '    A[i-1] = y\n', '    dic[prev].add(i,-1)\n', '    dic[y].add(i,1)\n', '  \n', 'def count(x,y):\n', '  ret = 0\n', '  for l in AZ:\n', '    if dic[l].sum(x-1) != dic[l].sum(y):\n', '      ret += 1\n', '  print(ret)\n', '\n', 'for _ in range(Q):\n', '  t,x,y = SL()\n', '  if t == ""1"":\n', '    change(int(x),y)\n', '  else:\n', '    count(int(x),int(y))\n']","['n = int(input())\n', 'answer = 0\n', 'for i in range(1, n + 1):\n', '    if i % 3 == 0 or i % 5 == 0:\n', '        i = 0\n', '    else:\n', '        answer = answer + i\n', '\n', 'print(answer)\n', '\n']",0
"['import math\n', 'a,b, A = map(float, input().split())\n', '\n', 'h = b*math.sin(math.radians(A))\n', 'S = a*h*0.5\n', 'L = a + b + math.sqrt(pow(a, 2) + pow(b, 2) - 2*a*b*math.cos(math.radians(A)))\n', '\n', 'print(S)\n', 'print(L)\n', 'print(h)\n', '\n']","['import itertools\n', 'n=int(input())\n', 'l=list(map(int,input().split()))\n', 'c=itertools.combinations(l,2)\n', 'ans=sum(x*y for x,y in c)\n', 'print(ans)']",0
"['arr = ""1, 1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 5, 1, 2, 1, 14, 1, 5, 1, 5, 2, 2, 1, 15, 2, 2, 5, 4, 1, 4, 1, 51""\n', 'arr1 = list(map(int,arr.split("", "") ))\n', '\n', 'k = int(input())\n', '\n', 'print(arr1[k-1])']","['import sys\n', 'input = sys.stdin.readline\n', 'import math\n', ' \n', 'def INT(): return int(input())\n', 'def MAPINT(): return map(int, input().split())\n', 'def LMAPINT(): return list(map(int, input().split()))\n', 'def STR(): return input()\n', 'def MAPSTR(): return map(str, input().split())\n', 'def LMAPSTR(): return list(map(str, input().split()))\n', ' \n', ""f_inf = float('inf')\n"", ' \n', 'n = INT()\n', 'a = sorted(LMAPINT())\n', '\n', 'length = (max(a) + 1)\n', '\n', 'ans = [0] * length\n', 'for x in a:\n', '  # 重複\n', '  if ans[x] != 0:\n', '    ans[x] = 2\n', '    continue\n', '  for j in range(x, length, x):\n', '    ans[j] += 1\n', ' \n', 'count = 0\n', 'for x in a:\n', '  if ans[x] == 1:\n', '    count += 1\n', 'print(count)']",0
"['import sys\n', 'from itertools import accumulate\n', '\n', 'rm = lambda: map(int, sys.stdin.readline().split())\n', 'rl = lambda: list(map(int, sys.stdin.readline().split()))\n', '\n', 'n, k = rm()\n', 'a = [(i+1)/2 for i in rl()]\n', 'a = [0] + list(accumulate(a))\n', 'ans = 0\n', 'for i in range(n-k+1):\n', '    ans = max(ans, a[i+k] - a[i])\n', 'print(ans)']","['t = input()\n', 's = [i for i in t]\n', 'if s[0] == ""?"":\n', '    s[0] = ""D""\n', 'for i in range(1, len(t) - 1):\n', '    if s[i] == ""?"":\n', '        if s[i-1] == ""D"" and s[i+1] == ""D"":\n', '            s[i] = ""P""\n', '        elif s[i-1] == ""p"" and s[i+1] == ""P"":\n', '            s[i] = ""D""\n', '        elif s[i-1] == ""D"" and s[i+1] == ""?"":\n', '            s[i] = ""P""\n', '        elif s[i-1] == ""P"" and s[i+1] == ""?"":\n', '            s[i] = ""D""\n', '        else:\n', '            s[i] = ""D""\n', 'if s[-1] == ""?"":\n', '    s[-1] = ""D""\n', 'print("""".join(s))']",0
"['# -*- coding: utf-8 -*-\n', ""'''\n"", '所要時間は、分位であった。\n', ""'''\n"", '\n', '\n', '# ライブラリのインポート\n', '#import re\n', 'import sys\n', 'input = sys.stdin.readline\n', '#import heapq\n', '#import bisect\n', 'import collections\n', '#import math\n', 'global time, Ls, Lf, E,LG,c,n\n', 'time = 1\n', '\n', 'def main():\n', '    global time, Ls, Lf, E, LG,c,n\n', '    c = 0\n', '    n = int(input().strip())\n', '    E = [[] for _ in range(n)]\n', '    LG = collections.deque()\n', '    for line in sys.stdin:\n', '        Ltmp = list(map(int, list(line.strip().split())))\n', '        if not Ltmp[1] == 0: \n', '            E[Ltmp[0]-1] = Ltmp[2:]\n', '    Ls = [0]*n \n', '    Lf = [0]*n\n', '    dfs(0)\n', '    for i in range(n):\n', '        print(i+1, Ls[i],Lf[i])\n', '    \n', 'def dfs(cur):\n', '    global time, Ls, Lf, E, LG,c,n\n', '    LG.append(cur)\n', '    if Ls[cur] == 0: Ls[cur] = time\n', '    time += 1\n', '    for i in range(len(E[cur])):\n', '        check = E[cur][i] - 1\n', '        if Ls[check] == 0: dfs(check)\n', '    if Lf[cur] == 0:\n', '        Lf[cur] = time\n', '    try:\n', '        x = LG.pop()\n', '        if x == cur: x = LG.pop() \n', '        dfs(x)\n', '    except:\n', '        time += 1\n', '        for i in range(c,n):\n', '            if Ls[i] == 0:\n', '                c = i\n', '                dfs(i) \n', '    return\n', '\n', '\n', '\n', '\n', '    \n', '\n', '\n', '    \n', ""if __name__ == '__main__':\n"", '    main()\n', '\n']","['#区間スケジューリング問題\n', '\n', 'N = int(input())\n', '\n', 'robots = {}\n', '\n', 'for _ in range(N):\n', '    X, L = list(map(int, input().split()))\n', '\n', '    robots[X] = (X-L, X+L)\n', '\n', '#終端が早い順にソートして、取れるものから貪欲法でとっていく\n', '\n', 'robots_sorted = sorted(robots.items(), key=lambda x:x[1][1])\n', '\n', 'ans = 1\n', 'current_robot = robots_sorted[0]\n', '\n', 'for i in range(0, N):\n', '    if current_robot[1][1] > robots_sorted[i][1][0]:\n', '        continue\n', '\n', '    ans += 1\n', '    current_robot = robots_sorted[i]\n', '\n', '\n', 'print(ans)\n']",0
"['while True:\n', '    x = input()\n', ""    if x == '-' :\n"", '        break\n', '    m = int(input())\n', '    \n', '    for i in range(m):\n', '        h = int(input())\n', '        y = x[0:h]\n', '        z = x[h:len(x)+1]\n', '        x = list(z+y)\n', ""    x = ''.join(x)\n"", '    print(x)\n']","['def main():\n', '    import numpy as np\n', '    n,m=map(int,input().split())\n', '    A=list(map(int,input().split()))\n', '    A.sort()\n', '    A=np.array(A)\n', '\n', '    def cnt_shake(x): #握手の組であって合計パワーがx以上となる組みの数\n', '        return n**2-np.searchsorted(A,x-A).sum()\n', '  \n', '    right=10**10*1\n', '    left=-10**10-1\n', '    while right-left>1:\n', '        mid=(left+right)//2\n', '        if cnt_shake(mid)<m:\n', '            right=mid\n', '        else:\n', '            left=mid\n', '    \n', '    border=left  #border以上の握手をする\n', '    C=n-np.searchsorted(A,border+1-A)\n', '    B=np.cumsum(A[::-1])\n', '    #print(border,A,B,C)\n', '\n', '    s,cnt=0,0\n', '    for i in range(n):\n', '        if C[i]>0:\n', '          cnt+=C[i]\n', '          s+=B[C[i]-1]+A[i]*C[i]\n', '    s+=border*(m-cnt)\n', '\n', '    print(s)\n', ""if __name__=='__main__':\n"", '    main()\n']",0
"['def main():\n', '  import sys\n', '  n,s,_,*t=sys.stdin.buffer.read().split()\n', '  n=int(n)\n', '  d=[0]*n+[1<<c-97for c in s]\n', '  for i in range(n-1,0,-1):d[i]=d[i+i]|d[i-~i]\n', '  r=[]\n', '  for q,a,b in zip(*[iter(t)]*3):\n', '    i,s=int(a)+n-1,0\n', ""    if q<b'2':\n"", '      d[i]=1<<b[0]-97\n', '      while i:\n', '        i//=2\n', '        d[i]=d[i+i]|d[i-~i]\n', '      continue\n', '    j=int(b)+n\n', '    while i<j:\n', '      if i&1:\n', '        s|=d[i]\n', '        i+=1\n', '      if j&1:\n', '        j-=1\n', '        s|=d[j]\n', '      i//=2\n', '      j//=2\n', ""    r+=bin(s).count('1'),\n"", ""  print(' '.join(map(str,r)))\n"", 'main()']","['import sys\n', '\n', 'read = sys.stdin.read\n', 'readline = sys.stdin.readline\n', 'readlines = sys.stdin.readlines\n', 'sys.setrecursionlimit(10 ** 9)\n', 'INF = 1 << 60\n', 'MOD = 1000000007\n', '\n', '\n', 'def main():\n', '    r = int(readline())\n', '    print(r * r)\n', '    \n', '    return\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']",0
"['s = input()\n', 'q = int(input())\n', '#+---+---+---+---+---+---+\n', '#| P | y | t | h | o | n |\n', '#+---+---+---+---+---+---+\n', '#0   1   2   3   4   5   6\n', '#-6  -5  -4  -3  -2  -1\n', 'for i in range(0, q):\n', '  l = list(input().split())\n', '  a = int(l[1])\n', '  b = int(l[2]) + 1\n', '  if l[0] == ""print"":\n', '    print(s[a: b])\n', '  elif l[0] == ""reverse"":\n', '    rev = s[a: b]\n', '    rev = rev[::-1]\n', '    s = s[:a] + rev + s[b:]\n', '  else:\n', '    s = s[:a] + l[3] + s[b:]\n', '\n']","['x, y = map(int, input().split())\n', 'for i in range(1, x+1):\n', '  if (4*i + 2*(x - i) == y) or (2*i + 4*(x - i) == y):\n', '    print(""Yes"")\n', '    exit()\n', 'print(""No"")']",0
"['import math\n', 'from functools import reduce\n', 'from collections import deque\n', 'import sys\n', 'sys.setrecursionlimit(10**7)\n', 'from heapq import heappush, heappop\n', '\n', 'def input():\n', '    return sys.stdin.readline().strip()\n', '\n', '# スペース区切りの入力を読み込んで数値リストにして返します。\n', 'def get_nums_l():\n', '    return [ int(s) for s in input().split("" "")]\n', '\n', '# 改行区切りの入力をn行読み込んで数値リストにして返します。\n', 'def get_nums_n(n):\n', '    return [ int(input()) for _ in range(n)]\n', '\n', '# 改行またはスペース区切りの入力をすべて読み込んでイテレータを返します。\n', 'def get_all_int():\n', '    return map(int, open(0).read().split())\n', '\n', 'def rangeI(it, l, r):\n', '    for i, e in enumerate(it):\n', '        if l <= i < r:\n', '            yield e\n', '        elif l >= r:\n', '            break\n', '\n', 'def log(*args):\n', '    print(""DEBUG:"", *args, file=sys.stderr)\n', '\n', 'INF = 999999999999999999999999\n', 'MOD = 10**9+7\n', '\n', 'n = int(input())\n', 'S = [ input() for _ in range(n)]\n', '\n', 'left = 0\n', 'right = 0\n', '\n', 'l_ok = [False] * n\n', 'r_ok = [False] * n\n', 'LMR = [0] * n\n', 'MIN_LMR = [0] * n\n', '\n', 'for i,s in enumerate(S):\n', '    l = 0\n', '    r = 0\n', '    lok = True\n', '    for j,c in enumerate(s):\n', '        if c == ""("":\n', '            l += 1\n', '        else:\n', '            r += 1\n', '            if r > l:\n', '                lok = False\n', '        MIN_LMR[i] = min(MIN_LMR[i], l-r)\n', '    LMR[i] = l - r\n', '    l = 0\n', '    r = 0\n', '    rok = True\n', '    for j in range(len(s)-1, -1, -1):\n', '        if s[j] == ""("":\n', '            l += 1\n', '            if l > r:\n', '                rok = False\n', '                break\n', '        else:\n', '            r += 1\n', '\n', '    left += s.count(""("")\n', '    right += s.count("")"")\n', '\n', '    l_ok[i] = lok\n', '    r_ok[i] = rok\n', '\n', '# log(l_ok)\n', '# log(r_ok)\n', '\n', 'if left != right:\n', '    print(""No"")\n', '    exit()\n', '\n', '\n', 'positives = [ (MIN_LMR[i], LMR[i]) for i,x in enumerate(LMR) if x > 0 ]\n', 'zeros     = [ (MIN_LMR[i], LMR[i]) for i,x in enumerate(LMR) if x == 0 ]\n', 'negatives = [ (MIN_LMR[i], LMR[i]) for i,x in enumerate(LMR) if x < 0]\n', 'for i in range(len(negatives)):\n', '    min_lmr, lmr = negatives[i]\n', '    min_lmr = min_lmr - lmr\n', '    lmr = -1 * lmr\n', '    negatives[i] = (min_lmr, lmr)\n', '\n', 'positives.sort(reverse=True)\n', 'negatives.sort(reverse=True)\n', '\n', 'h = 0\n', 'for min_lmr, lmr in positives + zeros:\n', '    if h+min_lmr < 0:\n', '        print(""No"")\n', '        exit()\n', '    h += lmr\n', '\n', 'h = 0\n', 'for min_lmr, lmr in negatives:\n', '    if h+min_lmr < 0:\n', '        print(""No"")\n', '        exit()\n', '    h += lmr\n', '\n', 'print(""Yes"")']","['def resolve():\n', '    a,b = map(int, input().split())\n', '    if a*500 >= b:\n', '        print(""Yes"")\n', '    else:\n', '        print(""No"")\n', 'resolve()']",0
"['S = input()\n', 'k = int(input())\n', 'from itertools import groupby\n', 'x = y = 0\n', 'g = [len(list(v)) for k,v in groupby(S)]\n', 'for c in g:\n', '    x += c//2\n', '#print(len(S),g[0])\n', 'if S[-1] == S[0]:\n', '    if g[-1]%2 == 0 or g[0]%2 == 0:\n', '        pass\n', '    elif len(S) == 1:\n', '        y = k//2\n', '    elif len(S) == g[0]:\n', '        y = k//2\n', ""        #print('?',y)\n"", '    else:\n', '        y = k-1\n', 'print(x*k + y)\n']","['from itertools import accumulate\n', '\n', 'N, K = list(map(int, input().split()))\n', 'P = list(map(lambda x: int(x) + 1, input().split()))\n', 'P_cumsum = [0] + list(accumulate(P))\n', 'print(max([P_cumsum[i+K]-P_cumsum[i] for i in range(N-K+1)])/2)']",0
"['A, B = [s for s in input().split()]\n', '\n', 'A = int(A)\n', 'B = int(float(B) * 100 + .5)\n', '\n', 'C = A * B\n', '\n', 'ans = int(C // 100)\n', '\n', 'print(ans)']","['def cmb(n, r, p):\n', '  if (r < 0) or (n < r):\n', '    return 0\n', '  r = min(r, n - r)\n', '  return fact[n] * factinv[r] * factinv[n-r] % p\n', '\n', 'p = 10 ** 9 + 7\n', 'N, K = map(int,input().split())\n', 'As = list(map(int,input().split()))\n', 'As.sort()\n', '\n', 'fact = [1, 1]  # fact[n] = (n! mod p)\n', 'factinv = [1, 1]  # factinv[n] = ((n!)^(-1) mod p)\n', 'inv = [0, 1]  # factinv 計算用\n', ' \n', 'for i in range(2, N + 1):\n', '  fact.append((fact[-1] * i) % p)\n', '  inv.append((-inv[p % i] * (p // i)) % p)\n', '  factinv.append((factinv[-1] * inv[-1]) % p)\n', '\n', 'rlt = 0\n', 'for i in range(N-K+1):\n', '  rlt += (As[-i-1] - As[i])*cmb(N-i-1,K-1,p)\n', '  rlt %= p\n', '  \n', 'print(rlt)']",0
"['n = int(input())\n', 'ans = set()\n', '#n-1の約数は確定でOK\n', '\n', 'for i in range(1,int(pow(n-1,0.5)) + 1):\n', '    if (n-1) % i == 0:\n', '        ans.add((n-1)//i)\n', '        ans.add(i)\n', '#n = (1 + pk) * k^q の形になるkを探す。q ≠ 0のとき、kはnの約数\n', 'for i in range(2,int(pow(n,0.5)) + 1):\n', '    if n % i == 0:\n', '        tmp = n\n', '        while tmp % i == 0:\n', '            tmp = tmp // i\n', '        if (tmp - 1) % i == 0:\n', '            ans.add(i)\n', 'print(len(ans))\n', '\n']","['#!/usr/bin/python3\n', '#coding: utf-8\n', '\n', 'import math\n', '\n', 'N = int(input())\n', 'P = [[int(x) for x in input().split()] for _ in range(N)]\n', '\n', '\n', 'def calc(path):\n', '    r = 0\n', '    for i in range(len(path) - 1):\n', '        p1 = P[path[i-1]]\n', '        p2 = P[path[i]]\n', '        dx = p1[0] - p2[0]\n', '        dy = p1[1] - p2[1]\n', '        r += math.sqrt(dx*dx + dy*dy)\n', '    return r\n', '\n', 'ret = 0\n', 'numret = 0\n', 'def rec(path, rest):\n', '    if not rest:\n', '        global ret\n', '        global numret\n', '        ret += calc(path)\n', '        numret += 1\n', '        return\n', '    for i in range(len(rest)):\n', '        rec(path + [rest[i]],  rest[:i] + rest[i+1:])\n', '\n', 'rec([], [i for i in range(N)])\n', 'print(ret/numret)\n']",0
"['import sys\n', '\n', 'def gcd(inta, intb):\n', '    large = max(inta, intb)\n', '    small = min(inta,intb)\n', '    mod = large % small\n', '    if mod ==0:\n', '        return small\n', '    else:\n', '        return gcd(small, mod) \n', '    \n', 'def lcm(inta, intb, intgcd):\n', '    return (inta * intb // intgcd)\n', '\n', 'sets = sys.stdin.readlines()\n', 'for line in sets:\n', '    a, b = map(int, line.split())\n', '    c = gcd(a, b)\n', '    print(c, lcm(a, b, c))']","['X, Y = map(int, input().split())\n', 'mod = 10**9 + 7\n', '\n', '\n', 'def permute(n, m):\n', '    ret = 1\n', '    while n >= m:\n', '        ret *= n\n', '        # ret %= mod\n', '        n -= 1\n', '\n', '    return ret\n', '\n', '\n', 'def count_combinations(n, m):\n', '    fact = [1] * (n + 1)\n', '    inv = [i for i in range(n+1)]\n', '    fact_inv = [1] * (n + 1)\n', '\n', '    for i in range(2, n+1):\n', '        fact[i] = fact[i-1] * i % mod\n', '        inv[i] = (-inv[mod%i]*(mod//i))%mod\n', '        # inv[i] = mod - inv[mod % i] * (mod // i) % mod\n', '        fact_inv[i] = fact_inv[i-1] * inv[i] % mod\n', '\n', '    ret = (fact[n] * fact_inv[m] * fact_inv[n-m]) % mod\n', '\n', '    return ret\n', '\n', '\n', 'def count_comb2(n, m):\n', '    fact = [1, 1]  # fact[n] = (n! mod p)\n', '    factinv = [1, 1]  # factinv[n] = ((n!)^(-1) mod p)\n', '    inv = [0, 1]  # factinv 計算用\n', '\n', '    for i in range(2, n + 1):\n', '        fact.append((fact[-1] * i) % mod)\n', '        inv.append((-inv[mod % i] * (mod // i)) % mod)\n', '        factinv.append((factinv[-1] * inv[-1]) % mod)\n', '\n', '    if (m < 0) or (n < m):\n', '        return 0\n', '    m = min(m, n - m)\n', '    return fact[n] * factinv[m] * factinv[n-m] % mod\n', '\n', 'ret = 0\n', 'if (X+Y)%3 == 0:\n', '    m = (2*X - Y) // 3\n', '    n = (2*Y - X) // 3\n', '\n', '    if m >= 0 and n >= 0:\n', '        ret = count_combinations(n+m, m)\n', '        # ret = count_comb2(n+m, m)\n', '\n', 'print(ret)\n']",0
"['N = int(input())\n', 'ans = 0\n', 'for i in range(1, N + 1):\n', '    n = N // i  # 項数n\n', '    cnt = (n * (2 * i + (n - 1) * i)) // 2  # 初項i, 項数n の等差数列の和の公式\n', '    ans += cnt\n', 'print(ans)']","['import math\n', 'n,d=map(int,input().split())\n', 'L=[list(map(int, input().split())) for i in range(n)]\n', 'x=0\n', 'for i in range(n):\n', '  if math.sqrt(L[i][0]**2+L[i][1]**2)<=d:\n', '    x+=1\n', '  else:\n', '    pass\n', 'print(x)']",0
"['def sep():\n', '    return map(int,input().strip().split("" ""))\n', 'def lis():\n', '    return list(sep())\n', '\n', '\n', 'n=int(input())\n', 'ar=lis()\n', 'temp=[0]*(n+5)\n', 'for i in range(n-1):\n', '    #print(ar[i],temp)\n', '    temp[ar[i]]+=1\n', 'for i in range(1,n+1):\n', '    print(temp[i])\n', '\n']","['import math\n', '\n', 'def resolve():\n', '    a, b, x = map(int, input().split())\n', '    met = a ** 2 * b / 2\n', '    if x > met:\n', '        y = 2 * b - 2 * x / a**2\n', '        ans = math.atan2(y, a)\n', '    elif x == met:\n', '        ans = math.pi / 4\n', '    else:\n', '        y = 2 * x / a / b\n', '        ans = math.pi / 2 - math.atan2(y, b)\n', '\n', '    print(math.degrees(ans))\n', '    \n', 'resolve()']",0
"['def main():\n', '    h, w, m = map(int, input().split())\n', '    mapa = {}\n', '    strings = [0]*h\n', '    rows = [0]*w\n', '    for _ in range(m):\n', '        h1, w1 = map(int, input().split())\n', '        if not mapa.get(h1-1, 0):\n', '            mapa[h1-1] = []\n', '        mapa[h1-1].append(w1-1)\n', '        strings[h1-1] += 1\n', '        rows[w1-1] += 1\n', '    \n', '    max_s = max(strings)\n', '    max_r = max(rows)\n', '    strings_max = []\n', '    rows_max = []\n', '    for i in range(h):\n', '        if strings[i] == max_s:\n', '            strings_max.append(i)\n', '    for i in range(w):\n', '        if rows[i] == max_r:\n', '            rows_max.append(i)\n', '    \n', '    forbidden_positions = set(mapa[strings_max[0]])\n', '    for item in strings_max[1:]:\n', '        forbidden_positions.intersection_update(set(mapa[item]))\n', '\n', '    answer_set = set(rows_max).difference(forbidden_positions)\n', '    if answer_set:\n', '        print(max_s + max_r)\n', '    else:\n', '        print(max_s + max_r - 1)\n', '\n', 'main()\n']","['X = int(input())\n', 'i = 1\n', 'while (360 * i) % X != 0: i += 1\n', 'print((360 * i) // X)']",0
"['print("""".join(input().split()[::-1]))']","['while True:\n', '  H,W=map(int,raw_input().split())\n', '  if H==W==0:\n', '    break\n', '  elif H!=0 or W!=0:\n', ""    print (('#'*W +'\\n')*H)""]",0
"['while True:\n', '    a, op, b = raw_input().split()\n', '    if op == ""?"":\n', '        break\n', '    else:\n', ""        if op == '+':\n"", '            print int(a) + int(b)\n', ""        elif op == '-':\n"", '            print int(a) - int(b)\n', ""        elif op == '*':\n"", '            print int(a) * int(b)\n', ""        elif op == '/':\n"", '            print int(a) / int(b)\n', '        else:\n', '            print ""error""']","['n, q = map(int, input().split())\n', 'process = []\n', 'for _ in range(n):\n', '    name, time = input().split()\n', '    process.append([name, int(time)])\n', 'process.append([])\n', '\n', 'def reduce(index):\n', '    left_time = process[index][1] - q\n', '    return [process[index][0], left_time]\n', '\n', 'head = 0\n', 'tail = n\n', 'quene_len = len(process)\n', 'elapsed_time = 0\n', '\n', 'while head != tail:\n', '    if process[head][1] > q:\n', '        process[tail] = reduce(head)\n', '        elapsed_time += q\n', '        head = (head+1)%quene_len\n', '        tail = (tail+1)%quene_len\n', '    else:\n', '        elapsed_time += process[head][1]\n', '        print(process[head][0], elapsed_time)\n', '        head = (head+1)%quene_len\n']",0
"['import sys\n', '\n', 'n=int(input())\n', 'li=[int(x) for x in input().split()]\n', '\n', 'h=0\n', 'k=0\n', '\n', 'for i in range(n):\n', '  if h<=li[i]:\n', '    h=max(h,li[i])\n', '  else:\n', '    k=k+(h-li[i])\n', '    h=max(h,li[i])\n', '    \n', 'print(k)']","['# A Odds of Oddness\n', 'n = int(input())\n', 'c = []\n', 'for i in range(1,n+1):\n', '    if i % 2:\n', '        c.append(i)\n', 'x = len(c)/n\n', 'print(x)\n']",0
"['n=int(input())\n', '\n', 'dic={}\n', 'for i in range(n):\n', '  s=input()\n', '  if s not in dic:\n', '    dic[s]=1\n', '  else:\n', '    dic[s]+=1\n', '\n', '\n', 'dic = sorted(dic.items(),key=lambda x:x[0])\n', 'dic = sorted(dic,key=lambda x:x[1],reverse=True)\n', '\n', 'ma=dic[0][1]\n', 'for i,v in dic:\n', '  if v!=ma:\n', '    break\n', '  else:\n', '    print(i)']","['alp_count = [0]*26\n', '\n', '\n', '\n', 'string = open(0).read()\n', 'string = string.lower()\n', '\n', '\n', 'alp = [chr(ord(""a"")+i) for i in range(26)]\n', '\n', 'c = 0\n', '\n', 'for j in range(26):\n', '    c = string.count(alp[j])\n', '    alp_count[j] += c\n', '    print(""%s : %d""%(alp[j],alp_count[j]))\n']",0
"['n=int(input())\n', 's={}\n', 'for i in range(n):\n', '  si = input()\n', '  if si not in s:\n', '    s[si] = 1\n', '  else:\n', '    s[si]+=1\n', 'sa = sorted(s.items())\n', 'ma = max(s.values())\n', 'for a in sorted(a for a in s if s[a]==ma):\n', '  print(a)']","['a,b,c=map(int,input().split())\n', ""if a+b+c >=22:print('bust')\n"", ""else:print('win')""]",0
"['import sys\n', ""# sys.stdin = open('input.txt')\n"", '\n', 'k = int(input())\n', ""string = '1, 1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 5, 1, 2, 1, 14, 1, 5, 1, 5, 2, 2, 1, 15, 2, 2, 5, 4, 1, 4, 1, 51'\n"", ""s = [i for i in map(int, string.split(', '))]\n"", 'print(s[k-1])']","['n = list(input())\n', 'inf = 10**9\n', 'dp = [[inf for i in range(2)] for j in range(len(n) + 2)]\n', '#dp[i][j] := 下からi桁目まで決めたときの、繰り下がりがjである。(true, false)\n', '#ときの、最小紙幣数\n', 'n.reverse()\n', ""n += ['0']\n"", '#繰り下がりがない\n', 'dp[0][0] = 0\n', '#配るDP\n', 'for i in range(len(n)):\n', '    for j in range(2):\n', '        x = int(n[i])\n', '        #さっきの桁に繰り下がりをしている場合は、今回の数字が一つ減る。\n', '        #んだけど、実際に払う数字は後で決めるから、今回は、引く側の数字を1大きく\n', '        #することで、同じ操作を実現している\n', '        x += j\n', '        for a in range(10):\n', '            #今回払う数字を決める\n', '            if a >= x:\n', '                #繰り下がりなし\n', '                dp[i+1][0] = min(dp[i+1][0], dp[i][j] + 2 * a - x)\n', '            else:\n', '                #繰り下がりあり\n', '                dp[i+1][1] = min(dp[i+1][1], dp[i][j] + 2 * a - x + 10)\n', 'print(min(dp[len(n)][0], dp[len(n)][1]))\n', '\n']",0
"['def sum_part(N, k):\n', '  return k*(2*N-k+1)/2-k*(k-1)/2+1\n', '  \n', 'N, K = map(int, input().split())\n', 'ans = 0\n', 'for k in range(K,N+2):\n', '  ans += sum_part(N, k)\n', '  \n', 'ans = ans % (10**9 + 7)\n', '  \n', 'print(int(ans))']","['s=input()\n', 'li=list(s)\n', 'adana_li=[]\n', 'for i in range(3):\n', '    adana_li.append(li[i])\n', 'adana=li[0]+li[1]+li[2]\n', 'print(adana)']",0
"['S=str(input())\n', 'n=[]\n', 'for i in range(3):\n', '    n.append(S[i])\n', ""print(''.join(n))""]","['H, W = map(int, input().split())\n', 'S = []\n', 'for _ in range(H):\n', '    S.append([c for c in input()])\n', '\n', 'cnts = [[0 for _ in range(W)] for _ in range(H)]\n', 'if S[0][0] == ""#"":\n', '    cnts[0][0]  = 1\n', 'for h in range(H):\n', '    for w in range(W):\n', '        if h == 0 and w == 0:\n', '            continue\n', '\n', ""        c1, c2 = float('inf'), float('inf')\n"", '        if 0 <= h - 1:\n', '            c1 = cnts[h - 1][w]\n', '            if S[h][w] == ""#"" and S[h - 1][w] == ""."":\n', '                c1 += 1\n', '\n', '        if 0 <= w - 1:\n', '            c2 = cnts[h][w - 1]\n', '            if S[h][w] == ""#"" and S[h][w - 1] == ""."":\n', '                c2 += 1\n', '\n', '        cnts[h][w] = min(c1, c2)\n', 'print(cnts[H-1][W-1])\n']",0
"['def main():\n', '    import sys\n', '    input = sys.stdin.readline\n', '    sys.setrecursionlimit(10**7)\n', '    from collections import Counter, deque\n', '    from collections import defaultdict\n', '    from itertools import combinations, permutations, accumulate, groupby, product\n', '    from bisect import bisect_left,bisect_right\n', '    from heapq import heapify, heappop, heappush\n', '    from math import floor, ceil,pi,factorial\n', '    from operator import itemgetter\n', '    def I(): return int(input())\n', '    def MI(): return map(int, input().split())\n', '    def LI(): return list(map(int, input().split()))\n', '    def LI2(): return [int(input()) for i in range(n)]\n', '    def MXI(): return [[LI()]for i in range(n)]\n', '    def SI(): return input().rstrip()\n', ""    def printns(x): print('\\n'.join(x))\n"", ""    def printni(x): print('\\n'.join(list(map(str,x))))\n"", '    inf = 10**17\n', '    mod = 10**9 + 7\n', '#main code here!\n', '    n,k,s=MI()\n', '    ans=[]\n', '    if s==10**9:\n', '        for i in range(k):\n', '            ans.append(s)\n', '        for i in range(n-k):\n', '            ans.append(1)\n', '    else:\n', '        for i in range(k):\n', '            ans.append(s)\n', '        for i in range(n-k):\n', '            ans.append(10**9)\n', '    print(*ans)\n', '        \n', '        \n', '        \n', '    \n', 'if __name__==""__main__"":\n', '    main()\n', '\n']","['A,B,C,D = (int(x) for x in input().split())\n', 'while True:\n', '  C -= B\n', '  if C <= 0:\n', ""    print('Yes')\n"", '    break\n', '  else:\n', '    A -= D\n', '    if A <= 0:\n', ""      print('No')\n"", '      break']",0
"['import sys\n', 'input = sys.stdin.readline\n', '\n', 'n, s, f = int(input()), list(map(int, input().split())), True\n', 'for e in s:\n', '  if not e & 1:\n', '    if 0 not in [e % 3, e % 5]: f = False; break\n', ""print('APPROVED' if f else 'DENIED')\n""]","['MAX = 4*10**5\n', 'bikkuri=[1]\n', 'mod = 10**9+7\n', 'for i in range(1,MAX+1):\n', '    bikkuri.append((bikkuri[-1]*i)%mod)\n', '\n', 'def Comb(n,k):\n', '    ans = bikkuri[n]*pow(bikkuri[k],mod-2,mod)*pow(bikkuri[n-k],mod-2,mod)\n', '    ans %=mod\n', '    return ans\n', '    \n', 'n,k = map(int,input().split())\n', 'if n-1 <= k:\n', '    ans = Comb(2*n-1,n)\n', '    print(ans)\n', 'else:\n', '    tmp = 0\n', '    for i in range(k+1):\n', '        tmp += Comb(n,i)*Comb(n-1,i)\n', '        tmp %= mod\n', '    print(tmp)']",0
"['input = raw_input()\n', 'print int(input) ** 3']","['X = int(input())\n', 'MAX = 10**5+3\n', 'num = 2\n', 'primes = [0 for _ in range(MAX+1)]\n', '\n', '\n', 'for num in range(2, int(MAX**0.5)):\n', '  if primes[num] == 1:\n', '    continue\n', '  for i in range(num*2, MAX+1, num):\n', '    primes[i] = 1\n', 'for num in range(X, MAX+1):\n', '  if primes[num] == 0:\n', '    print(num)\n', '    exit()\n', '\n', '\n', '\n', '  \n', '  \n']",0
"['\n', 'def make_divisors(n):\n', '    divisors = []\n', '    for i in range(1, int(n**0.5)+1):\n', '        if n % i == 0:\n', '            divisors.append(i)\n', '            if i != n // i:\n', '                divisors.append(n//i)\n', '        \n', '\n', '    # divisors.sort()\n', '    return divisors\n', '\n', 'N = int(input())\n', 'ans = len(make_divisors(N-1))-1\n', '\n', 'for i in make_divisors(N):\n', '  if i == 1:\n', '    continue\n', '    \n', '  Ni = int(N/i)\n', '  \n', '  while Ni % i == 0:\n', '    Ni = int(Ni/i)\n', '    \n', '  if Ni % i == 1:\n', '    ans+=1\n', '    \n', '\n', 'print(ans)']","['from sys import stdin\n', '\n', 'rooms = [[[0] * 10 for _ in range(3)] for _ in range(4)]\n', 'stdin.readline().rstrip()\n', 'while True:\n', '    try:\n', '        b, f, r, v = [int(x) for x in stdin.readline().rstrip().split()]\n', '        rooms[b-1][f-1][r-1] += v\n', '    except:\n', '        break\n', '\n', 'for b in range(4):\n', '    for f in range(3):\n', '        print("" "", end = """")\n', '        print(*rooms[b][f])\n', '    else:\n', '        if b != 3:\n', '            print(""#""*20)\n']",0
