# -*- coding: utf-8 -*-
"""GraphCodeBERT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t_K59zx5wijjsx0x8vzOthWX_97V7w7s
"""

from google.colab import drive
drive.mount('/content/drive')

import os
from tqdm import tqdm

"""##데이터 다운로드"""

# Commented out IPython magic to ensure Python compatibility.
# 데이터 압축 풀기
# %cd /content/drive/MyDrive/determining_code_similarity_AI_competition/data
!unzip -qq "/content/drive/MyDrive/open.zip"

# 데이터 개수 확인
import os

def get_files_count(folder_path):
	dirListing = os.listdir(folder_path)
	return len(dirListing)
	
dir_path = "/content/drive/MyDrive/determining_code_similarity_AI_competition/data/code"
cnt = 0
fcnt = {}

for (root, directories, files) in os.walk(dir_path):
  for d in directories:
    f = get_files_count(os.path.join(root, d))
    fcnt[d] = f
    cnt += f

print(fcnt)
print("전체 코드 파일 수: ",cnt)

"""##데이터 전처리"""

import os
import pandas as pd
import re

"""####code 폴더 전처리"""

# code 폴더 처리
dir_path = '/content/drive/MyDrive/determining_code_similarity_AI_competition/data/code'
codes = []

for (root, directories, files) in os.walk(dir_path):
    for file in files:
        file_path = os.path.join(root, file)
        with open(file_path, 'r', encoding='utf-8') as f:
            one_code = f.read()
            codes.append([file, one_code])

import csv

combined_file = open('/content/drive/MyDrive/determining_code_similarity_AI_competition/data/codes.csv',"wt")
with open('/content/drive/MyDrive/determining_code_similarity_AI_competition/data/codes.csv',"wt") as combined_file:
    for idx,code in enumerate(codes):
      combined_file.write(code[0]+","+'{}'.format(code[1])+"\n")

"""####sample_train.csv 전처리"""

# sample_train.csv 처리
file_path = '/content/drive/MyDrive/determining_code_similarity_AI_competition/data/sample_train.csv'
df = pd.read_csv(file_path, encoding='latin1')
df.info()

df.head()

df = df.replace(re.compile('(^import.*|^from.*)',re.MULTILINE),"",regex=True) #import,from 없애기
df = df.replace(re.compile('(#.*)', re.MULTILINE),"",regex=True) #주석 한 줄
df = df.replace(re.compile('[\'\"]{3}.*?[\'\"]{3}', re.DOTALL),"",regex=True) #주석 여러줄
df = df.replace(re.compile('[\n]{2,}', re.MULTILINE),"\n",regex=True) #다중개행 한번으로
df = df.replace(re.compile('[ ]{4}', re.MULTILINE),"\t",regex=True) #tab 변환
df = df.replace(re.compile('[ ]{1,3}', re.MULTILINE)," ",regex=True) #공백 여러개 변환
df

"""##모델 구성"""

pip install transformers

from transformers import AutoTokenizer, AutoModel, AutoConfig
import torch
config = AutoConfig.from_pretrained("microsoft/graphcodebert-base")
tokenizer = AutoTokenizer.from_pretrained("microsoft/graphcodebert-base")
model = AutoModel.from_pretrained("microsoft/graphcodebert-base")

