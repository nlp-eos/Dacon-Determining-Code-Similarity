code1,code2,similar
"['num = [[0 for i in range(101)] for j in range(101)]\n', 'r, c = map(int, input().split())\n', 'for i in range(r):\n', '    num[i][:c] = list(map(int, input().split()))\n', '    for j in range(c):\n', '        num[i][c] += num[i][j]\n', 'for j in range(c+1):\n', '    for i in range(r):\n', '        num[r][j] += num[i][j]\n', 'for i in range(r+1):\n', '    for j in range(c):\n', ""        print(num[i][j], end=' ')\n"", '    print(num[i][c])']","['r, c = map(int, input().split())\n', 'table = []\n', 'for i in range(r):\n', '    table.append(list(map(int, input().split())))\n', 'for i in table:\n', '    i.append(sum(i))\n', 'b = []\n', 'for i in range(c):\n', '    x = 0\n', '    for k in range(r):\n', '        x += table[k][i]\n', '    b.append(x)\n', 'b.append(sum(b))\n', 'for i in table:\n', '    print("" "".join(map(str, i)))\n', 'print("" "".join(map(str, b)))\n']",1
"['X = int(input())\n', 't = X\n', 'ans = 1\n', 'while t%360 != 0:\n', '    t += X\n', '    ans += 1\n', 'print(ans)\n']","['def gcd(a, b):\n', '    while b:\n', '        a, b = b, a%b\n', '    return a\n', '\n', 'def lcm(a, b):\n', '    return a*b//gcd(a, b)\n', '\n', 'X = int(input())\n', 'print(lcm(360, X)//X)']",1
"['n = int(input())\n', '\n', 'class Node:\n', '    def __init__(self, idd, neighbors):\n', '        self.idd = idd\n', '        self.neighbors = neighbors\n', '        self.foundAt = 0\n', '        self.completeAt = 0\n', '        \n', '    def __repr__(self):\n', '        return ""{0} {1} {2}"".format(self.idd, self.foundAt, self.completeAt)\n', '\n', 'Nodes = [None] * n\n', 'for i in range(n):\n', '    row = [int(tt) for tt in input().split()]\n', '    Nodes[row[0]-1] = Node(row[0], [ row[j + 2] for j in range(row[1])])\n', '        \n', 'def depthSearch(Nodes):\n', '    stack = [Nodes[0]]\n', '    \n', '    time = 2\n', '    current = stack[-1]\n', '    current.foundAt = 1\n', '    while len(stack) > 0 or any([node.foundAt==0 for node in Nodes]):\n', '        if(len(stack)==0):\n', '            newStart = [node for node in Nodes if node.foundAt==0][0]\n', '            newStart.foundAt = time\n', '            stack.append(newStart)\n', '            time += 1\n', '        current = stack[-1]\n', '        if(len(current.neighbors) > 0):\n', '            next_n = Nodes[current.neighbors.pop(0)-1]\n', '            if(next_n.foundAt != 0):\n', '                continue\n', '            next_n.foundAt = time\n', '            stack.append(next_n)\n', '        else:\n', '            current.completeAt = time\n', '            stack.pop(-1)\n', '        time += 1\n', '    return Nodes\n', 'Nodes = depthSearch(Nodes)\n', 'for node in Nodes:\n', '    print(node)\n']","['# http://judge.u-aizu.ac.jp/onlinejudge/review.jsp?rid=4647653#1\n', '\n', '\n', '\n', 'import sys\n', 'sys.setrecursionlimit(10 ** 8)\n', 'input = sys.stdin.readline\n', '\n', 'class Graph:\n', '    def __init__(self, n, dictated=False, decrement=True, edge=[]):\n', '        self.n = n\n', '        self.dictated = dictated\n', '        self.decrement = decrement\n', '        self.edge = [set() for _ in range(self.n)]\n', '        self.parent = [-1]*self.n\n', '        self.info = [-1]*self.n\n', '        for x, y in edge:\n', '            self.add_edge(x,y)\n', '\n', '    def add_edge(self,x,y):\n', '        if self.decrement:\n', '            x -= 1\n', '            y -= 1\n', '        self.edge[x].add(y)\n', '        if self.dictated == False:\n', '            self.edge[y].add(x)\n', '\n', '    def add_adjacent_list(self,i,adjacent_list):\n', '        if self.decrement:\n', '            self.edge[i] = set(map(lambda x:x-1, adjacent_list))\n', '        else:\n', '            self.edge[i] = set(adjacent_list)\n', '\n', '    def path_detector(self, start=0, time=0):\n', '        """"""\n', '        :param p: スタート地点\n', '        :return: 各点までの距離と何番目に発見したかを返す\n', '        """"""\n', '\n', '        edge2= []\n', '        for i in range(self.n):\n', '            edge2.append(sorted(self.edge[i], reverse=True))\n', '\n', '        p, t = start, time\n', '        self.parent[p] = -2\n', '        full_path = [(p + self.decrement,t)]\n', '        while True:\n', '            if edge2[p]:\n', '                q = edge2[p].pop()\n', '                if q == self.parent[p] and not self.dictated:\n', '                    """""" 逆流した時の処理 """"""\n', '                    """"""""""""""""""""""""""""""""""""""""\n', '                    continue\n', '                if self.parent[q] != -1:\n', '                    """""" サイクルで同一点を訪れた時の処理 """"""\n', '                    """"""""""""""""""""""""""""""""""""""""\n', '                    continue\n', '                self.parent[q] = p\n', '                p, t = q, t + 1\n', '                full_path.append((p + self.decrement, t))\n', '            else:\n', '                """""" 探索完了時の処理 """"""\n', '                full_path.append((p + self.decrement, t))\n', '                """"""""""""""""""""""""""""""""""""""""\n', '                if p == start and t == time:\n', '                    break\n', '                p, t = self.parent[p], t-1\n', '                """""" 二度目に訪問時の処理 """"""\n', '                """"""""""""""""""""""""""""""""""""""""\n', '        return full_path\n', '\n', '    def path_list(self):\n', '        """"""\n', '        :return: 探索経路を返す。\n', '        """"""\n', '        self.parent = [-1]*self.n\n', '        res = []\n', '        for p in range(self.n):\n', '            if self.parent[p] == -1:\n', '                res.append(self.path_detector(start=p, time=1))\n', '        return res\n', '\n', '    def draw(self):\n', '        """"""\n', '        :return: グラフを可視化\n', '        """"""\n', '        import matplotlib.pyplot as plt\n', '        import networkx as nx\n', '\n', '        if self.dictated:\n', '            G = nx.DiGraph()\n', '        else:\n', '            G = nx.Graph()\n', '        for x in range(self.n):\n', '            for y in self.edge[x]:\n', '                G.add_edge(x + self.decrement, y + self.decrement)\n', '        nx.draw_networkx(G)\n', '        plt.show()\n', '\n', 'def make_graph(dictated=False, decrement=True):\n', '    """"""\n', '    自己ループの無いグラフを生成。N>=2\n', '    :param dictated: True = 有効グラフ\n', '    :param decrement: True = 1-indexed\n', '    :return:\n', '    """"""\n', '    import random\n', '    N = random.randint(2, 5)\n', '    if N > 2:\n', '        M_max = (3*N-6)*(1+dictated)\n', '    else:\n', '        M_max = 1\n', '    graph = Graph(N, dictated, decrement)\n', '    for _ in range(random.randint(0,M_max)):\n', '        graph.add_edge(*random.sample(range(decrement, N+decrement), 2))\n', '    return graph\n', '\n', '##################################################################\n', '# 入力が隣接リストの場合\n', '##################################################################\n', '\n', 'N = int(input())  # 頂点数\n', '\n', 'graph = Graph(N,dictated=True, decrement=True)\n', '\n', 'for i in range(N):  # [[頂点1と連結している頂点の集合], [頂点2と連結している頂点の集合],...]\n', '    points = list(map(int, input().split()))[2:]\n', '    graph.add_adjacent_list(i, points)\n', '\n', '\n', 'data = graph.path_list()\n', '\n', 'from itertools import chain\n', 'data = list(chain.from_iterable(data))\n', '\n', 'res = [[i+1,0,0] for i in range(N)]\n', 'for time, a in enumerate(data, start=1):\n', '    i = a[0] - 1\n', '    if res[i][1]:\n', '        res[i][2] = time\n', '    else:\n', '        res[i][1] = time\n', '\n', 'for a in res:\n', '    print(*a)\n']",1
"['n = int(input())\n', 'A = []\n', 'B = []\n', 'for i in range(n):\n', '    a, b = map(int, input().split())\n', '    A.append(a)\n', '    B.append(b)\n', '\n', 'A.sort()\n', 'B.sort()\n', '\n', 'if n % 2:\n', '    l = A[n // 2]\n', '    r = B[n // 2]\n', '    ans = r - l + 1\n', '    print(ans)\n', 'else:\n', '    l = A[n // 2 - 1] + A[n // 2]\n', '    r = B[n // 2 - 1] + B[n // 2]\n', '    ans = r - l + 1\n', '    print(ans)\n']","['n=int(input())\n', 'a=[]\n', 'b=[]\n', '\n', 'for i in range(n):\n', '  x,y=map(int,input().split())\n', '  a+=[x]\n', '  b+=[y]\n', '  \n', 'a.sort()\n', 'b.sort()\n', '\n', 'if n%2==1:\n', '  print(b[n//2]-a[n//2]+1)\n', '  \n', 'else:\n', '  print((b[n//2]+b[n//2-1])-(a[n//2]+a[n//2-1])+1)']",1
"['a,b,c = map(int,input().split())\n', 'print(""%d %d %d"" %(c,a,b))']","['x,y,z = map(int,input().split());print(z,x,y)']",1
"['N,K,S = [int(hoge) for hoge in input().split()]\n', 'import math\n', '#累積和数列であって、Ar-Al=Sを満たすものが丁度K個ある\n', 'if S==10**9:\n', '    print(*([S]*K + [27]*(N-K)))\n', '\n', 'elif S:\n', '    print(*([S]*K + [S+1]*(N-K)))\n', 'else:\n', '    ans = []\n', '    while 1:\n', '        if K==2:\n', '            ans +=[0,1,0]\n', '            break            \n', '        for R in range(N):\n', '            if (R+1)*(R+2)//2 > K:break\n', '        print(K)\n', '        if K==0:break\n', '        ans += [0]*R+[1]\n', '        K = K - R*(R+1)//2 \n', '        \n', '    print(ans + [1]*(N-len(ans)))']","['n, k, s = map(int, input().split())\n', 'a = [s] * n\n', 'if s == 1:\n', '    s = 2\n', 'else:\n', '    s -=1\n', 'for i in range(k, n):\n', '    a[i] = s\n', 'print(a[0], end = """")\n', 'for i in a[1:]:\n', '    print("""", i, end = """")\n', 'print()\n']",1
"['import sys\n', 'def input(): return sys.stdin.readline().rstrip()\n', 'class Sieve: #区間[2,n]の値の素因数分解 前処理O(nloglogn)素因数分解O(logn)\n', '    def __init__(self,n=1):\n', '        self.primes=[]\n', '        self.f=[0]*(n+1) #ふるい（素数ならその値）\n', '        self.f[0]=self.f[1]=-1\n', '        for i in range(2,n+1): #素数リスト作成\n', '            if self.f[i]: continue\n', '            self.primes.append(i)\n', '            self.f[i]=i\n', '            for j in range(i*i,n+1,i):\n', '                if not self.f[j]:\n', '                    self.f[j]=i  #最小の素因数を代入\n', '    def is_prime(self, x):\n', '        return self.f[x]==x\n', '    def prime_fact(self,x): #素因数分解 {2:p,3:q,5:r,...}\n', '        fact_dict=dict()\n', '        while x!=1:\n', '            p=self.f[x]\n', '            fact_dict[p]=fact_dict.get(p,0)+1\n', '            x//=self.f[x]\n', '        return fact_dict\n', 'class Sieve2: #√nまでの素因数で試し割り 前処理O(√nloglogn+√n/logn)\n', '    def __init__(self,n):\n', '        self.primes=[]\n', '        self.f=[0]*(int(n**0.5)+1) #ふるい（素数ならその値）\n', '        self.f[0]=self.f[1]=-1\n', '        for i in range(2,int(n**0.5)+1): #素数リスト作成\n', '            if self.f[i]: continue\n', '            self.primes.append(i)\n', '            self.f[i]=i\n', '            for j in range(i*i,int(n**0.5)+1,i):\n', '                if not self.f[j]:\n', '                    self.f[j]=i  #最小の素因数を代入\n', '    def prime_fact(self,x): #素因数分解 {2:p,3:q,5:r,...}\n', '        fact_dict=dict()\n', '        for p in self.primes:\n', '            if p*p>x:break\n', '            while x%p==0:\n', '                x//=p\n', '                fact_dict[p]=fact_dict.get(p,0)+1\n', '        if x>1:fact_dict[x]=fact_dict.get(x,0)+1\n', '        return fact_dict\n', '\n', 'def main():\n', '    n=int(input())\n', '    A=list(map(int,input().split()))\n', '    mod=10**9+7\n', '    p_lis={}\n', '    Prime=Sieve2(10**6+5)\n', '    for a in A:\n', '        f=Prime.prime_fact(a)\n', '        for key in f:\n', '            p_lis[key]=max(p_lis.get(key,0),f[key])\n', '    lcm=1\n', '    for key in p_lis:\n', '        lcm=(lcm*pow(key,p_lis[key],mod))%mod\n', '    ans=0\n', '    for a in A:\n', '        b=lcm*pow(a,mod-2,mod)%mod\n', '        ans=(ans+b)%mod\n', '    print(ans)\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n', '\n']","['import sys\n', 'import fractions\n', 'input = sys.stdin.readline\n', '\n', '\n', 'mod = 10 ** 9 + 7\n', 'N = int(input().strip())\n', 'A = list(map(int, input().strip().split("" "")))\n', '\n', 'lcm = 1\n', 'for a in A:\n', '    lcm = a // fractions.gcd(a, lcm) * lcm\n', '\n', 'ans = 0\n', 'for a in A:\n', '    ans += lcm // a\n', '\n', 'print(ans % mod)']",1
"['from collections import defaultdict\n', 'n,k = map(int,input().split())\n', 'a = list(map(int,input().split()))\n', 'for i in range(n):\n', '    a[i] -= 1\n', '    a[i] %= k\n', '\n', 'S = [0]\n', 'for i in range(n):\n', '    S.append((S[-1]+a[i])%k)\n', '\n', 'ans = 0\n', 'dic = defaultdict(int)\n', 'dic[0] = 1\n', 'for i in range(1,n+1):\n', '    if i >= k:\n', '        dic[S[i-k]] -= 1\n', '    ans += max(0,dic[S[i]])\n', '    dic[(S[i])] += 1\n', '\n', 'print(ans)']","['import sys\n', 'input = sys.stdin.buffer.readline\n', 'from collections import defaultdict\n', '\n', 'def main():\n', '    N,K = map(int,input().split())\n', '    a = list(map(int,input().split()))\n', '    \n', '    d = defaultdict(int)\n', '    cum = [0]\n', '    for i in range(N):\n', '        cum.append((cum[-1]+a[i]-1)%K)\n', '    \n', '    ans = 0\n', '    for i in range(N+1):\n', '        ans += d[cum[i]]\n', '        d[cum[i]] += 1\n', '        if i >= K-1:\n', '            d[cum[i-K+1]] -= 1\n', '    \n', '    print(ans)\n', '    \n', 'if __name__ == ""__main__"":\n', '    main()\n']",1
"['n = int(input())\n', 'a = list(map(int,input().split()))\n', 'b = [2 ** i for i in range(n)]\n', 'c = {}\n', 'for i in range(2 ** n):\n', '    k = 0\n', '    k += i\n', '    v = 0\n', '    for j in range(n)[::-1]:\n', '        v += k // b[j] * a[j]\n', '        k %= b[j]\n', '    c[v] = 0\n', 'm = int(input())\n', 'a = list(map(int,input().split()))\n', 'for i in range(m):\n', '    try:\n', '        c[a[i]]\n', '        print(""yes"")\n', '    except:\n', '        print(""no"")\n', '    \n']","['n= int(input())\n', 'A = list(map(int, input().split()))\n', 'q = int(input())\n', 'Mi = map(int, input().split())\n', 'PS={}\n', 'def solve(i,m):\n', ' if m == 0:\n', '  return True\n', ' if (i,m) in PS:\n', '  return PS[(i,m)]\n', ' if i >= n:\n', '  return False\n', ' res = solve(i+1, m) or solve(i + 1, m - A[i])\n', ' PS[(i,m)] = res\n', ' return res\n', '\n', 'for m in Mi:\n', ' if solve(0, m):\n', '  print(""yes"")\n', ' else:\n', '  print(""no"")']",1
"['import bisect,collections,copy,heapq,itertools,math,string\n', 'import numpy as np\n', 'import sys\n', 'sys.setrecursionlimit(10**7)\n', '\n', 'def _S(): return sys.stdin.readline().rstrip()\n', 'def I(): return int(sys.stdin.readline().rstrip())\n', 'def LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\n', 'def LS(): return list(sys.stdin.readline().rstrip().split())\n', '\n', 'N = I()\n', '#H,N = LI()\n', '_XY = [LI() for _ in range(N)]\n', '# X,Y = zip(*XY)\n', 'XY = np.array(_XY)\n', '#C = np.zeros(N + 1)\n', '# print(XY)\n', '\n', '# print(np.linalg.norm(XY[1]-XY[0]))\n', '\n', 'def calcdis(p1,p2):\n', '    return np.linalg.norm(p2-p1)\n', '\n', 'ans = []\n', 'for i in range(N):\n', '    tmp = 0\n', '    for j in range(N):\n', '        if not i==j:\n', '            # print(i,j)\n', '            tmp += calcdis(XY[i],XY[j])\n', '    ans.append(tmp)\n', 'print(np.average(ans))\n', '\n', '# if ans:\n', ""#     print('Yes')\n"", '# else:\n', ""#     print('No')""]","['import itertools, math\n', 'N = int(input())\n', 'ls, L = [], 0\n', 'for i in range(N):\n', ""    x, y = map(int, input().split(' '))\n"", '    ls.append([x, y])\n', 'perms = itertools.permutations(range(N))\n', 'for perm in perms:\n', '    for i in range(N - 1):\n', '        L += math.sqrt((ls[perm[i + 1]][0] - ls[perm[i]][0]) ** 2 + (ls[perm[i + 1]][1] - ls[perm[i]][1]) ** 2)\n', 'print(L / math.factorial(N))']",1
"['import networkx as nx\n', 'N, M = map(int, input().split())\n', '\n', 'G = nx.Graph()\n', '\n', 'G.add_edges_from(tuple(map(int, input().split())) for _ in range(M))\n', '\n', 'dist = nx.shortest_path_length(G, target=1)\n', ""print('Yes')\n"", 'for i in range(2, N+1):\n', '  print(min((dist[j], j) for j in nx.all_neighbors(G, i))[1])\n', '    \n', '\n', '\n', '\n']","['from collections import deque\n', '\n', 'N,M =map(int,input().split())\n', 'graph=[[] for _ in range(N)]\n', '\n', 'for _ in range(M):\n', '    a,b=map(int,input().split())\n', '    a,b=a-1,b-1\n', '    graph[a].append(b)\n', '    graph[b].append(a)\n', '\n', 'dist=[-1]*N\n', 'pre=[-1]*N\n', 'dist[0]=0\n', '\n', 'q=deque()\n', 'q.append(0)\n', '\n', 'while q:\n', '    v=q.popleft()\n', '    for i in graph[v]:\n', '        if dist[i] != -1:\n', '            continue\n', '        else:\n', '            dist[i]=dist[v]+1\n', '            pre[i]=v\n', '            q.append(i)\n', '\n', 'print(""Yes"")\n', 'for i in range(1,N):\n', '    print(pre[i]+1)']",1
"['S,T = input().split("" "")\n', 'A,B = list(map(int,input().split("" "")))\n', 'U = input()\n', '\n', 'if S == U:\n', '  print(A-1,B)\n', 'else:\n', '  print(A,B-1)']","['s,t = input().split()\n', 'd={}\n', 'd[s], d[t] = map(int,input().split())\n', 'd[input()] -= 1\n', 'print(d[s],d[t])']",1
"['x,y,z=map(int,input().split())\n', 'count=0\n', 'for i in range(x,y+1):\n', '  if(i%z==0):\n', '    count+=1\n', 'print(count)\n']","['l,r,d = map(int,input().split())\n', 'count = 0\n', 'for i in range(l,r + 1):\n', '    if i % d == 0:\n', '        count += 1\n', '    else:\n', '        pass\n', 'print(count)']",1
"['# -*- coding: utf-8 -*-\n', '\n', '#整数値龍力\u3000複数の入力\n', 'def input_multiple_number():\n', '    return map(int, input().split())\n', '\n', 'N_given,A_given,B_given = input_multiple_number()\n', '\n', 'cnt = 0\n', 'while True:\n', '    if (B_given - A_given)%2 == 0:\n', '        print(cnt + (B_given-A_given)//2)\n', '        exit(0)\n', '    else:\n', '        if (N_given - B_given) > (A_given-1):\n', '            cnt += (A_given-1)\n', '            cnt += 1\n', '            A_given = 1\n', '            B_given -= cnt\n', '        else:\n', '            cnt += (N_given - B_given)\n', '            cnt += 1\n', '            B_given = N_given\n', '            A_given += cnt\n', '\n', '\n']","['n,a,b = map(int,input().split())\n', 'if (b - a)%2 == 0:\n', '    x = (b - a)//2\n', '    y = min(max(a-1,b-1),max(n-a,n-b))\n', '    print(min(x,y))\n', 'else:\n', '    p = max(a-1,b-1)\n', '    q = max(n-a,n-b)\n', '    r = a-1+1+(b-(a-1)-1-1)//2\n', '    s = n-b+1+(n-(n-b+1)-a)//2\n', '    #print(p,q,r,s)\n', '    print(min(p,q,r,s))']",1
"['a, b = map(int, input().split())\n', 'd = a/b\n', 'r = a%b\n', 'f = a/b\n', 'print(""%d %d %.6f""%(d, r, f))\n']","['a, b = [int(i) for i in input().split("" "")]\n', 'num1 = a // b\n', 'num2 = a % b\n', 'num3 = ""{:.8f}"".format(a / b)\n', '\n', 'print(num1, num2, num3)']",1
"['#Macで実行する時\n', 'import sys\n', 'import os\n', 'if sys.platform==""darwin"":\n', '\tbase = os.path.dirname(os.path.abspath(__file__))\n', ""\tname = os.path.normpath(os.path.join(base, '../atcoder/input.txt'))\n"", '\tsys.stdin = open(name)\n', '\n', 'l = list(input())\n', '#print(l)\n', 'set_l = set(l)\n', 'if len(set_l)==1:\n', '    print(""No"")\n', 'else:\n', '    print(""Yes"")\n', '\n', '\n']","['S=input()\n', ""if S.count('A')==1 or S.count('A')==2:\n"", ""  print('Yes')\n"", 'else:\n', ""  print('No')""]",1
"['a, b = map(int, input().split())\n', '\n', 'ab = str(a) * b\n', 'ba = str(b) * a\n', '\n', 'print(sorted([ab, ba])[0])\n']","['x, y = map(int, input().split())\n', 'if(x < y):\n', '    for i in range(0, y):\n', ""        print(x, end = '')\n"", 'else:\n', '    for i in range(0, x):\n', ""        print(y, end = '')\n"", '\n', '\n', '\n', '\n']",1
"['n=int(input())\n', 's=list(map(str,input()))\n', 'if n%2==0:\n', '    num=int(n/2)\n', '    Sx=s[0:num]\n', '    Sy=s[num:n]\n', '    if Sx==Sy:\n', '      print(""Yes"")\n', '    else:\n', '      print(""No"")\n', 'else:\n', '  print(""No"")']","['N = int(input())\n', 'S = input()\n', '\n', 'if len(S) % 2 == 0 :\n', '    for i in range(len(S)//2) :\n', '        if S[i] != S[i+len(S)//2] :\n', '            print(""No"")\n', '            exit()\n', '    print(""Yes"")\n', '    exit()\n', 'print(""No"")']",1
"['s=input()\n', 'cnt=s.count(""hi"")\n', 'if cnt*2==len(s):\n', '  print(""Yes"")\n', 'else:\n', '  print(""No"")']","['S = str(input())\n', ""ans = 'Yes'\n"", '\n', 'from collections import Counter\n', 'SC = Counter(list(S))\n', 'h,i = 0,0\n', 'for a,b in SC.items():\n', ""  if a == 'h':\n"", '    h = b\n', ""  elif a == 'i':\n"", '    i = b\n', '  else:\n', ""    ans = 'No'\n"", '    break\n', '\n', 'if h == i:\n', '  for i in range(0,len(S)-1,2):\n', ""    if S[i]+S[i+1] != 'hi':\n"", ""      ans = 'No'\n"", '      break\n', 'else:\n', ""  ans = 'No'\n"", '  \n', 'print(ans)']",1
"['import math\n', 'def modpow(a, n, p):\n', '  if n == 0:\n', '    return 1\n', '  if n == 1:\n', '    return a % p \n', '  elif n % 2 == 1:\n', '    return a * modpow(a, n-1, p) % p\n', '  else:\n', '    return modpow(a, n//2, p) **2 % p\n', 'MOD = 1000000007\n', 'n = int(input())\n', '#初期値が0の辞書\n', 'from collections import defaultdict\n', 'pp = defaultdict(lambda: 0) \n', 'pm = defaultdict(lambda: 0) \n', 'def seiki(x,y):\n', '    tmp=math.gcd(x,y)\n', '    return (x//tmp,y//tmp)\n', '\n', 'a0b0 = 0\n', '\n', 'for i in range(n):\n', '  a, b = map(int, input().split())\n', '\n', '  if a == 0 and b == 0:\n', '    a0b0 += 1\n', '  elif a == 0:\n', '    pp[(0,1)] += 1\n', '\n', '  elif b == 0:\n', '    pm[(0,1)] += 1\n', '\n', '  elif a*b>0:\n', '    tmp = seiki(abs(a),abs(b))\n', '    pp[tmp] += 1\n', '\n', '  else:\n', '    tmp = seiki(abs(b),abs(a))\n', '    pm[tmp] += 1\n', '\n', 'ans = 1\n', 'for key in set(pp.keys()) | set(pm.keys()):\n', '    pp_v=pp[key]\n', '    pm_v=pm[key]\n', '    ans*=(modpow(2,pm_v,MOD)+modpow(2,pp_v,MOD)-1)\n', '    ans%=MOD\n', '\n', 'ans = (ans+a0b0-1) % MOD\n', 'print(ans)\n', '    \n', '  \n']","['from collections import defaultdict\n', 'import math\n', '\n', '\n', 'def ggg(a, b):\n', '    """"""規約分数を作る。n/0, 0/n は n=1,-1 にして返す。""""""\n', '    if a == b == 0:\n', '        return 0, 0\n', '\n', '    denominator = math.gcd(a, b)\n', '    x, y = a // denominator, b // denominator\n', '    return x, y\n', '\n', '\n', 'def main():\n', '    n = int(input())\n', '    mod = 1000000007\n', '    zeroes = 0\n', '    counter = defaultdict(lambda: defaultdict(int))\n', '    for _ in range(n):\n', '        a, b = [int(x) for x in input().split()]\n', '        x, y = ggg(a, b)\n', '\n', '        if x == y == 0:\n', '            zeroes += 1\n', '            continue\n', '        if y < 0:\n', '            # quadrant III, IV -> I, II\n', '            x, y = -x, -y\n', '\n', '        if x <= 0:\n', '            # round 90° from quadrant II to I\n', '            x, y = y, -x\n', '            counter[(x, y)][1] += 1\n', '        else:\n', '            counter[(x, y)][0] += 1\n', '\n', '    ans = 1\n', '    for v in counter.values():\n', '        now = 1\n', '        now += pow(2, v[0], mod) - 1\n', '        now += pow(2, v[1], mod) - 1\n', '        ans = ans * now % mod\n', '    ans += zeroes\n', '    ans -= 1  # choose no fish\n', '    return ans % mod\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    print(main())\n']",1
"['from decimal import Decimal as D\n', 'a,b=map(str,input().split())\n', 'print(int(D(a)*D(b)))']","['from decimal import Decimal\n', 'A,B=input().split()\n', 'A=int(A)\n', 'B=Decimal(B)\n', 'Bint=int(B)\n', 'B1=int((B-Bint)*100)\n', 'result=A*Bint+A*B1//100\n', 'print(result)']",1
"['n = int(input())\n', 'a = list(map(int, input().split()))\n', '\n', 'org = [[i, a[i]] for i in range(n)]\n', '\n', 'lis = sorted(org, key=lambda x: x[1], reverse=True)\n', '\n', 'dp = [[0 for i in range(n+1)] for j in range(n+1)]\n', '\n', '\n', 'for i in range(0, n, 1):\n', '    for j in range(0, n-i, 1):\n', '        if i + j == n:\n', '            break\n', '            \n', '        dp[i+1][j] = max(dp[i+1][j], dp[i][j] + lis[i+j][1]*abs(lis[i+j][0] - i))\n', '        dp[i][j+1] = max(dp[i][j+1], dp[i][j] + lis[i+j][1]*abs(lis[i+j][0] - (n-j-1)))\n', '\n', 'ans = 0\n', 'for i in range(n):\n', '    for j in range(n):\n', '        ans = max(ans, dp[i][j])\n', '        \n', 'print(ans)']","['# import time\n', '# p0 = time.time()\n', '\n', 'N = int(input())\n', 'A = list(map(int,input().split()))\n', '# print(A)\n', 'A = [[A[i],i] for i in range(N)]\n', 'A.sort(reverse=True)\n', '# print(""A :"",A)\n', 'dp = [[0]*(N+1) for _ in range(N+1)]\n', '# print(dp)\n', '\n', '#dp[x][y] : x人は Ai*(i-pi),y人は Ai*(pi-i)\n', '#           piは 0,1,2...   piはN-1,N-2,N-3,,\n', '# p1 = time.time()-p0\n', '\n', 'dp[0][0] = 0\n', '# y = 0\n', 'for x in range(1,N+1):\n', '    dp[x][0] = dp[x-1][0]+A[x-1][0]*(A[x-1][1]-x+1)\n', '    # print(x,dp)\n', '# x = 0\n', 'for y in range(1,N+1):\n', '    dp[0][y] = dp[0][y-1]+A[y-1][0]*(N-y - A[y-1][1])\n', '    # print(x,dp)\n', '\n', '# p2 = time.time()-p0\n', 'for x in range(1,N):\n', '    for y in range(1,N+1-x):\n', '        A0 = A[x+y-1][0]\n', '        A1 = A[x+y-1][1]\n', '        dp[x][y] = max(dp[x-1][y] + A0*(A1+1 - x), dp[x][y-1] + A0*(N-y - A1))\n', '# print(dp)\n', '\n', '# p3 = time.time()-p0\n', '\n', 'c = 0\n', 'for i in range(N):\n', '    if c < dp[i][N-i]:\n', '        c = dp[i][N-i]\n', 'print(c)\n', '\n', '# print(p1,p2,p3)']",1
"['\n', '1\n', '2\n', '3\n', 'from math import pi\n', 'r = float(input())\n', ""print('{:.6f} {:.6f}'.format(pi*r**2, 2*pi*r))""]","['r = float(input())\n', 'pi = 3.141592653589\n', 's = pi * r**2\n', 'h = 2 * pi * r\n', 'print(""{:.6f}"".format(s), ""{:.6f}"".format(h))\n']",1
"['# coding: UTF-8\n', 'moji = str(raw_input())\n', 'print moji.swapcase()\n']","['S = input()\n', 'for c in S:\n', ""    print(c.swapcase(), end='')\n"", '\n', 'print()\n']",1
"['import fractions\n', '\n', 'lst = []\n', 'for i in range(200):\n', '    try:\n', '        lst.append(input())\n', '    except EOFError:\n', '        break\n', '\n', ""nums = [list(map(int, elem.split(' '))) for elem in lst]\n"", '\n', '# gcd \n', 'res_gcd = [fractions.gcd(num[0], num[1]) for num in nums]\n', '\n', '# lcm\n', 'res_lcm = [nums[i][0] * nums[i][1] // res_gcd[i] for i in range(len(nums))]\n', '\n', 'for (a, b) in zip(res_gcd, res_lcm):\n', ""    print('{} {}'.format(a, b))""]","['# coding=utf-8\n', '\n', '\n', 'def solve_gcd(number1: int, number2: int) -> int:\n', '    two_list = [number1, number2]\n', '    two_list.sort()\n', '    if two_list[1] % two_list[0] == 0:\n', '        return two_list[0]\n', '    r = two_list[1] % two_list[0]\n', '    return solve_gcd(two_list[0], r)\n', '\n', '\n', 'def solve_lcm(number1: int, number2: int, number3: int) -> int:\n', '    return number1*number2//number3\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    while True:\n', '        try:\n', '            a, b = map(int, input().split())\n', '        except EOFError:\n', '            break\n', '        gcd = solve_gcd(a, b)\n', '        lcm = solve_lcm(a, b, gcd)\n', '        print(gcd, lcm)']",1
"['p = 1000000007\n', 'n = int(input())\n', 'A = list(map(int, input().split()))\n', '\n', 'ans = 1\n', 'cnt = [3 if i == 0 else 0 for i in range(n+1)]\n', '\n', 'for a in A:\n', '    ans *= cnt[a]\n', '    ans %= p\n', '    cnt[a] -= 1\n', '    cnt[a+1] += 1\n', 'print(ans)']","['n=int(input())\n', 'a=list(map(int,input().split()))\n', 'l=[3]+[0]*(10**5)\n', 'm=10**9+7\n', 'x=1\n', 'for i in a:\n', '  if l[i]:\n', '    x=(x*l[i])%m\n', '    l[i]-=1\n', '    l[i+1]+=1\n', '  else:\n', '    x=0\n', '    break\n', 'print(x)']",1
"['n,m = map(int,raw_input().split("" ""))\n', 'a = []\n', 'for i in range(0,n):\n', '\tb = map(int,raw_input().split("" ""))\n', '\ta.append(b)\n', 'for j in range(0,m):\n', '\tk = input()\n', '\tfor i in range(0,n):\n', '\t\ta[i][j] = a[i][j] * k\n', 'for i in range(0,n):\n', '\ts = 0\n', '\tfor j in range(0,m):\n', '\t\ts = s + a[i][j]\n', '\tprint str(s)']","['n,m= map(int,input().split())\n', 'A_line =[]\n', 'row=[]\n', '\n', 'for i in range(n):\n', '    line = [int(i) for i in input().split()]\n', '    A_line.append(line)\n', 'for i in range(m):\n', '    row += [int(i) for i in input().split()]\n', 'for i in range(n):\n', '    c=0\n', '    for j in range(m):\n', '        c += A_line[i][j]*row[j]\n', '    print(c)\n']",1
"['S = input()\n', ""if S == 'RRR':\n"", '  print(3)\n', ""elif 'RR' in S:\n"", '  print(2)\n', ""elif 'R' in S:\n"", '  print(1)\n', 'else:\n', '  print(0)']","['S = input()\n', '\n', ""if 'RRR' in S: ANS = 3\n"", ""elif 'RR' in S: ANS = 2\n"", ""elif 'RS' in S: ANS = 1\n"", ""elif 'SR' in S: ANS = 1\n"", ""elif 'SSS' in S: ANS = 0\n"", '\n', 'print(ANS)']",1
"['import decimal\n', 'a,b = map(decimal.Decimal,input().split())\n', 'ans = a*b//1\n', 'print(ans)\n']","['import sys\n', 'def input(): return sys.stdin.readline().rstrip()\n', 'def main():\n', '    a, b = input().split()\n', '    a = int(a)\n', '    b = int(b[0]+b[2:4])\n', '    print(a*b//100)\n', '\n', ""if __name__=='__main__':\n"", '    main()']",1
"['from numba import jit\n', '\n', '@jit\n', 'def solve():\n', '    n, k = map(int,input().split())\n', '    p = list(map(int, input().split()))\n', '    c = list(map(int, input().split()))\n', '    max_score = -10**10\n', '\n', '    for i in range(n):\n', '        count = 1\n', '        val = c[i]\n', '\n', '        next_i = p[i] -1\n', '        while next_i != i:\n', '            count += 1\n', '            val += c[next_i]\n', '            next_i = p[next_i] - 1\n', '        \n', '        if val > 0:\n', '            loop_num = (k//count -1)\n', '            tmp_score = loop_num * val\n', '            max_score = max(tmp_score, max_score)\n', '            num = k%count+count\n', '\n', '        else:\n', '            tmp_score = 0\n', '            num = min(k, count)\n', '\n', '        next_i = i\n', '        for _ in range(num):\n', '            next_i = p[next_i] - 1\n', '            tmp_score += c[next_i]\n', '            max_score = max(tmp_score, max_score)\n', '    \n', '    print(max_score)\n', '\n', 'solve()']","['n, k =map(int, input().split())\n', 'p = list(map(int, input().split()))\n', 'c = list(map(int, input().split()))\n', 'roop = []\n', 'seen = [0 for  _ in range(n)]\n', 'count = 0\n', 'for i in range(n):\n', '    if seen[i]>0:\n', '        continue\n', '    else:\n', '        count+=1\n', '        seen[i] = count\n', '        roop.append([c[i]])\n', '        t = i\n', '        while i!=p[t]-1:\n', '            seen[p[t]-1]=count\n', '            roop[-1].append(c[p[t]-1])\n', '            t = p[t]-1\n', '#print(seen)\n', '#print(roop)\n', 'ans = max(c)\n', '\n', 'for i in roop:\n', '    #print(ans)\n', '    \n', '    s = sum(i)\n', '    ii = i+i\n', '    #print(ii)\n', '    if len(i)>=k:\n', '        for j in range(1, k+1):\n', '            temp = sum(ii[:j])\n', '            for l in range(len(i)):\n', '                if l!=0:\n', '                    temp+=ii[l+j-1]\n', '                    temp-=ii[l-1]\n', '                    #temp = sum(ii[l:l+j])\n', '                #print(i, j, l, temp)\n', '                ans  = max(ans, temp)\n', '    else:\n', '        for j in range(1, len(i)+1):\n', '            temp=  sum(ii[:j])\n', '            for l in range(len(i)):\n', '                if l != 0:\n', '                    temp+=ii[l+j-1]\n', '                    temp-=ii[l-1]\n', '                #print(temp)\n', '                if s>0:\n', '                    temp1 = temp+s*((k-j)//len(i))\n', '                else:\n', '                    temp1 = temp\n', '                \n', '                #print(i, j, l, temp)\n', '                ans  = max(ans, temp)\n', '                ans  = max(ans, temp1)\n', '            \n', 'print(ans)\n', '\n', '        \n']",1
"['a = input()\n', 'a = int(a)\n', 'print(a*a*a)']","['n = input()\n', '\n', 'print n*n*n;']",1
"['import sys, re\n', 'from collections import deque, defaultdict, Counter\n', 'from math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians, gcd\n', 'from itertools import accumulate, permutations, combinations, product, groupby, combinations_with_replacement\n', 'from operator import itemgetter, mul\n', 'from copy import deepcopy\n', 'from string import ascii_lowercase, ascii_uppercase, digits\n', 'from bisect import bisect, bisect_left\n', 'from heapq import heappush, heappop\n', 'from functools import reduce\n', 'def input(): return sys.stdin.readline().strip()\n', 'def INT(): return int(input())\n', 'def MAP(): return map(int, input().split())\n', 'def LIST(): return list(map(int, input().split()))\n', 'def ZIP(n): return zip(*(MAP() for _ in range(n)))\n', 'sys.setrecursionlimit(10 ** 9)\n', ""INF = float('inf')\n"", 'mod = 10 ** 9 + 7\n', '\n', 'X = INT()\n', 'l = [400, 600, 800, 1000, 1200, 1400, 1600, 1800]\n', 'print(9-bisect(l, X))\n']","['import sys\n', 'def input():\n', '    return sys.stdin.readline()[:-1]\n', '\n', '\n', 'def main():\n', '    X = int(input())\n', '    if X >= 1800:\n', '        print(1)\n', '    elif X >= 1600:\n', '        print(2)\n', '    elif X >= 1400:\n', '        print(3)\n', '    elif X >= 1200:\n', '        print(4)\n', '    elif X >= 1000:\n', '        print(5)\n', '    elif X >= 800:\n', '        print(6)\n', '    elif X >= 600:\n', '        print(7)\n', '    else:\n', '        print(8)           \n', '    \n', 'if __name__ == ""__main__"":\n', '    main()\n']",1
"['def cmb(n, r, p):\n', '  if (r < 0) or (n < r):\n', '    return 0\n', '  r = min(r, n - r)\n', '  return fac[n]*finv[r]*finv[n-r]%p\n', '\n', 'N = pow(10,6)\n', 'MOD = pow(10,9)+7\n', '\n', 'fac = [-1]*(N+1); fac[0] = 1; fac[1] = 1 #階乗\n', 'finv = [-1]*(N+1); finv[0] = 1; finv[1] = 1 #階乗の逆元\n', 'inv = [-1]*(N+1); inv[0] = 0; inv[1] = 1 #逆元\n', 'for i in range(2,N+1):\n', '  fac[i] = fac[i-1]*i%MOD\n', '  inv[i] = MOD - inv[MOD%i]*(MOD//i)%MOD\n', '  finv[i] = finv[i-1]*inv[i]%MOD\n', '\n', '\n', 'X,Y = map(int,input().split())\n', 'if (X+Y)%3 != 0:\n', '  print(0)\n', '  exit()\n', 'n = (X+Y)//3\n', 'if min(X,Y) < n:\n', '  print(0)\n', '  exit()\n', '\n', 'ans = cmb(n,min(X,Y)-n,MOD)\n', 'print(ans)']","['x, y  = map(int, input().split())\n', 'mod = 10 ** 9 + 7\n', 'if (x + y) % 3 != 0:\n', '    ans = 0\n', 'else:\n', '    n, m = (2 * x - y) / 3, (2 * y - x) / 3\n', '    ans = 0\n', '    if n >= 0 and m >= 0:\n', '        n, m = int(n), int(m)\n', '        ans = 1\n', '        for i in range(min(m, n)):\n', '            ans = ans * (n + m - i) % mod \n', '            ans *= pow(i + 1, mod - 2, mod)\n', '\n', 'print(ans % mod)']",1
"['from time import time\n', 'from random import random\n', '\n', 'limit_secs = 2\n', 'start_time = time()\n', '\n', 'D = int(input())\n', 'c = list(map(int, input().split()))\n', 's = [list(map(int, input().split())) for _ in range(D)]\n', '\n', 'def calc_score():\n', '    score = 0\n', '    S = 0\n', '    last = [-1] * 26\n', '    for d in range(D):\n', '        S += s[d][t[d]]\n', '        last[t[d]] = d\n', '        for i in range(26):\n', '            S -= c[i] * (d - last[i])\n', '        score += max(10 ** 6 + S, 0)\n', '    return score\n', '\n', 'def solution():\n', '    return [i % 26 for i in range(D)]\n', '\n', 't = solution()\n', 'score = calc_score()\n', 'while time() - start_time + 0.14 < limit_secs:\n', '    d = int(random() * D)\n', '    q = int(random() * 26)\n', '    old = t[d]\n', '    t[d] = q\n', '    new_score = calc_score()\n', '    if new_score < score:\n', '        t[d] = old\n', '    else:\n', '        score = new_score\n', 'print(*[e + 1 for e in t])\n']","['import time\n', 'import copy\n', '\n', 'start_time = time.time()\n', '\n', '#input\n', 'D = int(input())\n', 'c_list = list(map(int, input().split()))\n', '\n', 's_grid = []\n', 'for i in range(D):\n', ""    array = list(map(int, input().strip().split(' ')))\n"", '    s_grid.append(array)\n', '\n', 'def calculate_score(d,t,last):\n', '    score = s_grid[d][t]\n', '    last[t] = -1\n', '    for i in range(26):\n', '        score -= c_list[i]*(last[i]+1)\n', '    return score\n', '\n', 't_list = [] #task_list\n', 'last_list = [0 for _ in range(26)]\n', '\n', 'total_score = 0\n', 'for k in range(0,D):\n', '    X = -1  # k-日目に変える番号を探す\n', '    p = 0\n', '    last = copy.deepcopy(last_list)\n', '    for i in range(26):  # 26通り試す\n', '        tmp = calculate_score(k,i,last)\n', '        if tmp > p:\n', '            X = i\n', '            p = tmp\n', '\n', '    #最大のXを投入\n', '    total_score += p\n', '    t_list.append(X)\n', '    last_list = [i+1 for i in last_list]\n', '    last_list[X] = 0\n', '\n', '    #if time.time() - start_time > 1.9:\n', '    #    break\n', '\n', 'for j in range(len(t_list)):\n', '    print(int(t_list[j]) + 1)']",1
"['N = int(input())\n', 'A = list(map(int, input().split()))\n', '\n', 'for a in A:\n', '  if a%2 == 0 and a%3 != 0 and a%5 != 0:\n', ""    print('DENIED')\n"", '    exit()\n', '\n', ""print('APPROVED')""]","['n=int(input())\n', 'a=list(map(int,input().split()))\n', 'for i in range(n):\n', '    if a[i]%2==1:\n', '        pass\n', '    else:\n', '        if a[i]%3==0 or a[i]%5==0:\n', '            pass\n', '        else:\n', '            print(""DENIED"")\n', '            exit()\n', 'print(""APPROVED"")']",1
"['def main():\n', '    from sys import stdin\n', '\n', '    readline = stdin.readline\n', '\n', '    X = int(readline().rstrip())\n', '\n', '    if X >= 30:\n', ""        print('Yes')\n"", '    else:\n', ""        print('No')\n"", ' \n', '\n', 'main()']","['import sys\n', 'sys.setrecursionlimit(10**7)\n', '\n', 'def input(): return sys.stdin.readline()[:-1]\n', 'mod = 10**9 + 7\n', 'def readInt():return int(input())\n', 'def readIntList():return list(map(int,input().split()))\n', 'def readStringList():return list(input())\n', 'def readStringListWithSpace():return list(input().split())\n', 'def readString():return input()\n', '\n', 'x = readInt()\n', 'print(""Yes"" if x >= 30 else ""No"")']",1
"['import math\n', 'n,m=map(int,input().split())\n', 'a=list(map(int,input().split()))\n', 'half_a=[ai//2 for ai in a]\n', '# print(half_a)\n', 'lcm=half_a[0]\n', 'for i in range(n-1):\n', '    a,b=lcm,half_a[i+1]\n', '    lcm=a*b//math.gcd(a,b)\n', '# print(lcm)\n', 'pow_cnt=0\n', 'tmp=half_a[0]\n', 'while tmp%2==0:\n', '    pow_cnt+=1\n', '    tmp=tmp//2\n', 'flag=True\n', 'for ai in half_a[1:]:\n', '    if ai%(2**pow_cnt)!=0:\n', '        flag=False\n', '        break\n', '    elif  ai%(2**(pow_cnt+1))==0:\n', '        flag=False\n', '        break\n', 'if flag:\n', '    print(math.ceil(m//lcm/2))\n', 'else:\n', '    print(0)']","['from fractions import gcd\n', 'from functools import reduce\n', 'def l(a,b):return a*b//gcd(a,b)\n', 'def L(N):return reduce(l,N)\n', 'n,m=map(int,input().split())\n', 'A=list(map(lambda x:int(x)//2,input().split()))\n', 'a=A[0]\n', 'c=0\n', 'while(a%2==0):\n', '  a//=2\n', '  c+=1\n', 'if any([(a%(2**c)==0 and a//(2**c))%2==0 for a in A]):\n', '  print(0)\n', '  exit()\n', 'a=L(A)\n', 'print((m+a)//(2*a))\n']",1
"['n = int(input())\n', 'u = []\n', 'v = []\n', 'ans = 0\n', 'for i in range(n):\n', '    x, y = map(int, input().split())\n', '    u.append(x+y)\n', '    v.append(x-y)\n', 'ans = max(max(u) - min(u), max(v) - min(v))\n', 'print(ans)']","['import sys, re\n', 'from collections import deque, defaultdict, Counter\n', 'from math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians, gcd\n', 'from itertools import accumulate, permutations, combinations, product, groupby, combinations_with_replacement\n', 'from operator import itemgetter, mul\n', 'from copy import deepcopy\n', 'from string import ascii_lowercase, ascii_uppercase, digits\n', 'from bisect import bisect, bisect_left\n', 'from heapq import heappush, heappop\n', 'from functools import reduce\n', 'def input(): return sys.stdin.readline().strip()\n', 'def INT(): return int(input())\n', 'def MAP(): return map(int, input().split())\n', 'def LIST(): return list(map(int, input().split()))\n', 'def ZIP(n): return zip(*(MAP() for _ in range(n)))\n', 'sys.setrecursionlimit(10 ** 9)\n', ""INF = float('inf')\n"", 'mod = 10 ** 9 + 7\n', '\n', 'N = INT()\n', 'xy = [LIST() for _ in range(N)]\n', 'zw = [[x+y, x-y] for x, y in xy]\n', 'z, w = zip(*zw)\n', 'print(max(max(z)-min(z), max(w)-min(w)))\n']",1
"['H = int(input())\n', 'for i in range(0, 10**20 + 1):\n', '  if 2**i <= H < 2 ** (i + 1):\n', '    break\n', 'print(2 ** (i + 1) - 1)']","['import math\n', '\n', 'def main():\n', '    H = {int(input()): 1}\n', '    ans = 0\n', '    while True:\n', '        new_H = {}\n', '        for h, freq in H.items():\n', '            ans += freq\n', '            if h > 1:\n', '                new_H[h // 2] = 2 * freq\n', '        if len(new_H) == 0:\n', '            break\n', '        else:\n', '            H = new_H\n', '    print(ans)\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']",1
"['a = input()\n', 'print(a.replace(""?"",""D""))']","['T=input()\n', ""tmp=T.replace('?','D')\n"", 'print(tmp)']",1
"['a,b,c = map(int,input().split())\n', 'k = int(input())\n', '\n', 'for i in range(k):\n', '  if(a >= b):\n', '    b*=2\n', '    continue\n', '  if(b >= c):\n', '    c*=2\n', '    continue\n', '    \n', 'if(a<b and b<c):\n', '  print(""Yes"")\n', '  exit()\n', 'else:\n', '  print(""No"")']","['a, b, c = map(int, input().split())\n', 'k = int(input())\n', 'n = 0\n', '\n', 'while a >= b:\n', '  b = b*2\n', '  n += 1\n', 'while b >= c:\n', '  c = c*2\n', '  n += 1\n', '\n', 'if a < b < c and n <= k:\n', ""  print('Yes')\n"", 'else:\n', ""  print('No')""]",1
"['#   ????????? str ?????????????????????????????????????????????????????????????????°??????\n', '\n', '#   ?????\\????±??????????str????¨??????\\???????????????\n', 'str = list(input())\n', 'str = """".join(str)\n', '#   ?????\\???????????°p????¨??????\\???????????????\n', 'p = int(input())\n', '#   p??????????????????????????????????????????\n', 'orderList = [0 for i in range(p)]\n', 'for i in range(0, p):\n', '    orderList[i] = list(input())\n', '    orderList[i] = """".join(orderList[i]).split()\n', '    if orderList[i][0] == ""print"":\n', '        print(""{0}"".format(str[int(orderList[i][1]):int(orderList[i][2]) + 1]))\n', '    elif orderList[i][0] == ""reverse"":\n', '        str = str[0:int(orderList[i][1])] + str[-len(str) + int(orderList[i][2]):-len(str) + int(orderList[i][1]) - 1:-1] + str[int(orderList[i][2]) + 1:]\n', '    elif orderList[i][0] == ""replace"":\n', '        str = str[:int(orderList[i][1])] + orderList[i][3] + str[int(orderList[i][2]) + 1:]']","['moto = input()\n', 'num = int(input())\n', '\n', 'for i in range(num):\n', '    order = input().split()\n', '    if order[0] == ""print"":\n', '        m,n=int(order[1]),int(order[2])\n', '        print(moto[m:n+1])\n', '    elif order[0] == ""reverse"":\n', '        m,n=int(order[1]),int(order[2])\n', '        moto = moto[:m]+moto[m:n+1][::-1]+moto[n+1:]\n', '    elif order[0] == ""replace"":\n', '        m,n,l=int(order[1]),int(order[2]),order[3]\n', '        moto = moto[:m]+order[3]+moto[n+1:]']",1
"['def main() :\n', '    n = int(input())\n', '    nums = [int(i) for i in input().split()]\n', '\n', '    flag = True\n', '    count = 0\n', '    index = 0\n', '    while flag :\n', '        flag = False\n', '        for i in reversed(range(index+1, n)) :\n', '            if nums[i-1] > nums[i] :\n', '                nums[i-1], nums[i] = nums[i], nums[i-1]\n', '                count += 1\n', '                flag = True\n', '        index += 1\n', '\n', '    nums_str = [str(i) for i in nums]\n', '    print("" "".join(nums_str))\n', '    print(count)\n', '\n', ""if __name__ == '__main__' :\n"", '    main()']","['def bubbleSort(A, N):\n', '    flag = True\n', '    count = 0\n', '    while flag:\n', '        flag = 0\n', '        for j in range(N-1, 0, -1):\n', '            if A[j] < A[j-1]:\n', '                tmp = A[j]\n', '                A[j] = A[j-1]\n', '                A[j-1] = tmp\n', '                flag = 1\n', '                count += 1\n', '    print(*A)\n', '    print(count)\n', '\n', '\n', 'arr_length = int(input())\n', 'arr_num = [int(i) for i in input().split("" "")]\n', '\n', 'bubbleSort(arr_num, arr_length)']",1
"['import copy\n', 'import random\n', '\n', 'D = list(map(int, input().split()))\n', 'q = int(input())\n', '\n', 'for x in range(q):\n', '    y, z = map(int, input().split())\n', '    while True:\n', '        r = random.randint(0,3)\n', '        if r == 0:\n', '            Dt = copy.copy(D)\n', '            temp = Dt[0]\n', '            Dt[0] = Dt[4]\n', '            Dt[4] = Dt[5]\n', '            Dt[5] = Dt[1]\n', '            Dt[1] = temp\n', '        elif r== 1:\n', '            Dt = copy.copy(D)\n', '            temp = Dt[0]\n', '            Dt[0] = Dt[2]\n', '            Dt[2] = Dt[5]\n', '            Dt[5] = Dt[3]\n', '            Dt[3] = temp\n', '        elif r== 2:\n', '            Dt = copy.copy(D)\n', '            temp = Dt[0]\n', '            Dt[0] = Dt[3]\n', '            Dt[3] = Dt[5]\n', '            Dt[5] = Dt[2]\n', '            Dt[2] = temp\n', '        elif r == 3:\n', '            Dt = copy.copy(D)\n', '            temp = Dt[0]\n', '            Dt[0] = Dt[1]\n', '            Dt[1] = Dt[5]\n', '            Dt[5] = Dt[4]\n', '            Dt[4] = temp\n', '\n', '        D = copy.copy(Dt)\n', '        if Dt[0] == y and Dt[1] == z:\n', '            print(Dt[2])\n', '            break\n', '\n']","['# coding: utf-8\n', '# ?????????????????¨????????????\n', 'class Dice(object):\n', '\tdef __init__(self):\n', '\t\t# ????????¶???\n', '\t\tself.dice = (2, 5), (3, 4), (1, 6) # x, y, z\n', '\t\tself.ax = [[0, False], [1, False], [2, False]]\n', '\t\tself.axmap = [0, 1, 2]\n', '\t\tself.mm = {""N"": (0, 2), ""S"": (2, 0), ""E"": (1, 2), ""W"": (2, 1), ""R"": (0, 1), ""L"": (1, 0)}\n', '\n', '\tdef rotate(self, dir):\n', '\t\tdef rot(k, r):\n', '\t\t\tt = self.axmap[r]\n', '\t\t\tself.axmap[k], self.axmap[r] = t, self.axmap[k]\n', '\t\t\tself.ax[t][1] = not self.ax[t][1]\n', '\n', '\t\trot(*self.mm[dir])\n', '\n', '\tdef front(self): return self.value(0, True)\n', '\tdef rear(self): return self.value(0, False)\n', '\tdef right(self): return self.value(1, True)\n', '\tdef left(self): return self.value(1, False)\n', '\tdef top(self): return self.value(2, True)\n', '\tdef bottom(self): return self.value(2, False)\n', '\tdef value(self, ax, d):\n', '\t\ta = self.ax[self.axmap[ax]]\n', '\t\treturn self.dice[a[0]][a[1] if d else not a[1]]\n', '\n', 'if __name__==""__main__"":\n', '\tdice = Dice()\n', '\tlabels = input().split()\n', '\tq = int(input())\n', '\tdef tf(p, f, d):\n', '\t\tfor _ in range(4):\n', '\t\t\tif p==f(): break\n', '\t\t\tdice.rotate(d)\n', '\n', '\tfor _ in range(q):\n', '\t\ta, b = input().split()\n', '\t\tp = labels.index(a) + 1\n', '\t\tf = dice.top\n', '\t\ttf(p, f, ""N"")\n', '\t\ttf(p, f, ""E"")\n', '\t\t\n', '\t\tp = labels.index(b) + 1\n', '\t\tf = dice.front\n', '\t\ttf(p, f, ""R"")\n', '\n', '\t\tprint(labels[dice.right()-1])']",1
"['N = int(input())\n', '\n', 'def memorize(f) :\n', '    cache = {}\n', '    def helper(*args) :\n', '        if args not in cache :\n', '            cache[args] = f(*args)\n', '        return cache[args]\n', '    return helper\n', '\n', '@memorize\n', 'def fibonacci(n):\n', '    if n == 0 or n == 1:\n', '        return 1\n', '    res = fibonacci(n - 2) + fibonacci(n - 1)\n', '    return res\n', '\n', 'print(fibonacci(N))\n']","['#!/usr/bin/env python\n', 'from __future__ import division, print_function\n', 'from sys import stdin\n', '\n', '\n', 'def fibo(n):\n', '    a, b = 1, 1\n', '    while n:\n', '        a, b = b, a + b\n', '        n -= 1\n', '    return a\n', '\n', '\n', 'print(fibo(int(stdin.readline())))']",1
"['N = int(input())\n', 'f = 0\n', 'for i in range(1,10):\n', '  for j in range(1,10):\n', '    if i*j == N:\n', '      f += 1\n', '      break\n', 'if f == 0:\n', '  print(""No"")\n', 'else:\n', '  print(""Yes"")']","['#!/usr/bin/env python3\n', '# -*- coding: utf-8 -*-\n', 'n = int(input())\n', 'r = False\n', 'for i in range(1,10):\n', '  if n % i == 0:\n', '    if n // i < 10:\n', '      r = True\n', '      break\n', '\n', 'if r:\n', ""  print('Yes')\n"", 'else:\n', ""  print('No')\n""]",1
"['a,b,c,d=map(int,input().split())\n', 'ans=-10**20\n', 'if ans<a*c:\n', '  ans=a*c\n', 'if ans<a*d:\n', '  ans=a*d\n', 'if ans<b*c:\n', '  ans=b*c\n', 'if ans<b*d:\n', '  ans=b*d\n', 'print(ans)\n']","['def main():\n', '    a, b, c, d = (int(i) for i in input().split())\n', '    print(max(a*c, b*d, a*d, b*c))\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']",1
"['X, Y, Z = map(str, input().split())\n', 'print(Z+"" ""+X+"" ""+Y)']","['def main():\n', '    a,b,c = map(str,input().split())\n', ""    print(c + ' ' + a + ' ' + b)\n"", 'main()']",1
"['import sys\n', 'input = sys.stdin.readline\n', '\n', ""'''\n"", '\n', ""'''\n"", '\n', 's = input().rstrip()\n', '\n', 'if s == ""MON"": print(6)\n', 'elif s == ""SAT"": print(1)\n', 'elif s == ""FRI"": print(2)\n', 'elif s == ""THU"": print(3)\n', 'elif s == ""WED"": print(4)\n', 'elif s == ""TUE"": print(5)\n', 'else:\n', '    print(7)']","['\n', 'S = input()\n', '\n', ""if S == 'SUN':\n"", '    answer = 7\n', ""elif S == 'MON':\n"", '    answer = 6\n', ""elif S == 'TUE':\n"", '    answer = 5\n', ""elif S == 'WED':\n"", '    answer = 4\n', ""elif S == 'THU':\n"", '    answer = 3\n', ""elif S == 'FRI':\n"", '    answer = 2\n', ""elif S == 'SAT':\n"", '    answer = 1\n', 'else:\n', ""    answer = '入力間違い【SUN】【MON】【TUE】【WED】【THU】【FRI】【SAT】を入力'\n"", '\n', 'print(answer)\n']",1
"['H, N = [int(s) for s in input().split()]\n', 'A = [int(s) for s in input().split()]\n', ""print('Yes' if H - sum(A) <= 0 else 'No')""]","['H,N=map(int,input().split())\n', 'A=list(map(int,input().split()))\n', 'sum=0\n', 'for i in range(len(A)):\n', '    sum+=A[i]\n', 'if H<=sum :\n', '    print(""Yes"")\n', 'else:\n', '    print(""No"")']",1
"['n = int(input())\n', 'a = [0]*n\n', 'b = [0]*n\n', '\n', 'for i in range(n):\n', '    aa,bb = map(int, input().split())\n', '    a[i] = aa\n', '    b[i] = bb\n', '\n', 'a.sort()\n', 'b.sort()\n', '\n', 'if n%2 == 1:\n', '    print(b[n//2] - a[n//2] + 1)\n', 'else:\n', '    print(b[n//2] + b[(n//2)-1] - a[n//2] - a[(n//2)-1] + 1)\n']","['n = int(input())\n', '\n', 'a_line = []\n', 'b_line = []\n', 'for i in range(n):\n', '    a, b = map(int, input().split())\n', '    a_line.append(a)\n', '    b_line.append(b)\n', '    \n', 'a_line.sort()\n', 'b_line.sort()\n', '\n', '\n', 'if n % 2 == 0:\n', '    left = a_line[n // 2 - 1] + a_line[n // 2]\n', '    right = b_line[n // 2 - 1] + b_line[n // 2]\n', '    print(right - left + 1)\n', 'else:\n', '    print(b_line[n // 2] - a_line[n // 2] + 1)']",1
"['while True:\n', '    m,f,r = [int(x) for x in input().split()]\n', '    if (m,f,r)==(-1,-1,-1): break\n', '    s_mf = m + f\n', ""    if   m < 0 or f < 0: mark = 'F'\n"", ""    elif s_mf <  30:     mark = 'F'\n"", ""    elif s_mf >= 80:     mark = 'A'\n"", ""    elif s_mf >= 65:     mark = 'B'\n"", ""    elif s_mf >= 50:     mark = 'C'\n"", ""    elif r    >= 50:     mark = 'C'\n"", ""    else:                mark = 'D'\n"", '    print(mark)']","['while True:\n', '    r = list(map(int, input().split()))\n', '\n', '    if r[0] == -1 and r[1] == -1 and r[2] == -1:\n', '        break\n', '    elif r[0] == -1 or r[1] == -1:\n', '        print(""F"")\n', '    elif r[0] + r[1] >= 80:\n', '        print(""A"")\n', '    elif r[0] + r[1] >= 65 and r[0] + r[1] < 80:\n', '        print(""B"")\n', '    elif r[0] + r[1] >= 50 and r[0] + r[1] < 65:\n', '        print(""C"")\n', '    elif r[0] + r[1] >= 30 and r[0] + r[1] < 50:\n', '        if r[2] >= 50:\n', '            print(""C"")\n', '        else:\n', '            print(""D"")\n', '    else:\n', '        print(""F"")']",1
"['n=int(input())\n', 'li=list(map(int,input().split()))\n', 'for i in li:\n', '  if i%2==0:\n', '    if i%3==0 or i%5==0:\n', '      pass\n', '    else:\n', '      print(""DENIED"")\n', '      break\n', 'else:\n', '  print(""APPROVED"")']","['n=int(input())\n', 'a=list(map(int,input().split()))\n', '\n', 'l=[]\n', 'flag=0\n', 'for aa in a:\n', '  if aa%2==0:\n', '    flag=1\n', '    l.append(aa)\n', '\n', 'if flag==1:   \n', '  for ll in l:\n', '    if ll % 3!=0 and ll % 5!=0:\n', '\t    flag=2\n', '\n', 'if flag==0:\n', ""  print('APPROVED')\n"", 'elif flag==1:\n', ""  print('APPROVED')\n"", 'elif flag==2:\n', ""  print('DENIED')\n""]",1
"['n = int(input())\n', 'heights = list(map(int, input().split()))\n', 'cnt = 0\n', 'for i in range(1,n):\n', '  if heights[i] >= heights[i-1]:\n', '    pass\n', '  else:\n', '    x = heights[i-1] - heights[i]\n', '    cnt += x\n', '    heights[i] = heights[i-1]\n', '    \n', 'print(cnt)']","['N=int(input())\n', 'A=[int(i) for i in input().split()]\n', 'S=0\n', 'for i in range(1,N):\n', '    if A[i-1]>A[i]:\n', '        S+=A[i-1]-A[i]\n', '        A[i]=A[i-1]\n', 'print(S)']",1
"['\n', ""if __name__ == '__main__':\n"", '    n = int(input())\n', '    if n % 2 == 0:\n', '        print(int(n/2 - 1))\n', '    else:\n', '        print(int((n-1)/2))']","['a = int(input())\n', 'if a < 2:\n', '        print(0)\n', 'elif a % 2 == 0:\n', '        print(int(a / 2 - 1) )\n', 'else:\n', '        print(int(a/2))']",1
"['n , k , s = map(int,input().split())\n', 'l = []\n', 'for i in range(k):\n', '    l.append(s)\n', 'if s == 1:\n', '    t = 3\n', 'elif s == 10**9:\n', '    t = 1\n', 'else:\n', '    t = s + 1\n', '\n', 'for i in range(n-k):\n', '    l.append(t)\n', '\n', '\n', ""print(' '.join(map(str, l)))""]","['N, K, S = map(int, input().split())\n', '\n', 'd = S\n', 'if S == int(1e9):\n', '    d -= 1\n', 'else:\n', '    d += 1\n', '\n', 'ans = [1 for _ in range(N)]\n', 'for i in range(N):\n', '    if K > 0:\n', '        ans[i] = S\n', '        K -= 1\n', '    else:\n', '        ans[i] = d\n', '\n', 'print(*ans)\n']",1
"['#!/usr/bin/env python3\n', 'def main():\n', '    from scipy.special import comb\n', '\n', '    N = int(input())\n', '    A = [int(x) for x in input().split()]\n', '\n', '    num_lst = [0] * (N + 1)\n', '    for a in A:\n', '        num_lst[a] += 1\n', '\n', '    ans = 0\n', '    for num in num_lst:\n', '        ans += comb(num, 2, exact=True)\n', '\n', '    for a in A:\n', '        print(ans - (num_lst[a] - 1))\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']","['from collections import Counter\n', 'N = int(input())\n', 'Alist = list(map(int,input().split()))\n', 'numcntlist = [0] * N \n', 'numCounter = Counter(Alist)\n', '\n', 'for i in range(1,N+1):\n', '    numcntlist[i-1] = numCounter[i]\n', '\n', 'sumcomb = 0\n', 'for i in numcntlist:\n', '    sumcomb += int(i*(i-1)/2)\n', '\n', 'for i in Alist:\n', '    ans = sumcomb -(numCounter[i] - 1)\n', '    print(ans)']",1
"['a=str(input())\n', ""if a.isupper():print('A')\n"", ""else:print('a')""]","['s = input()\n', 'if(s[0].islower()):\n', ""    print('a')\n"", 'else:\n', ""    print('A')    \n""]",1
"['a,b=input().split()\n', 'a=int(a)\n', 'b=int(b)\n', 'print(int(a*(a-1)/2+(b*(b-1)/2)))']","['N, M = map(int, input().split())\n', '\n', 'Ev = M * (M - 1) // 2\n', 'Od = N * (N - 1) // 2\n', '\n', 'print(Ev + Od)']",1
"['days = [""DAYS"",""SAT"",""FRI"",""THU"",""WED"",""TUE"",""MON"",""SUN""]\n', 's = str(input())\n', 'for i in days:\n', '    if i == s:\n', '        print(days.index(i))\n', '        break']","['s = input()\n', 'res = 0\n', 'if s == ""SUN"":\n', '  res = 7\n', 'elif s == ""MON"":\n', '  res = 6\n', 'elif s == ""TUE"":\n', '  res = 5\n', 'elif s == ""WED"":\n', '  res = 4\n', 'elif s == ""THU"":\n', '  res = 3\n', 'elif s == ""FRI"":\n', '  res = 2\n', 'elif s == ""SAT"":\n', '  res = 1\n', 'print(res)']",1
"['string = input()\n', '\n', 'if string == ""ABC"":\n', '  print(""ARC"")\n', 'else:\n', '  print(""ABC"")']","['S = input()\n', ""out = 'ABC' if S == 'ARC' else 'ARC'\n"", 'print(out)']",1
"['import sys\n', '\n', 'while True:\n', '\ta, op, b = sys.stdin.readline().split( "" "" )\n', '\tif ""?"" == op:\n', '\t\tbreak\n', '\ta = int( a )\n', '\tb = int( b )\n', '\tif ""+"" == op:\n', '\t\tprint( ""{:d}"".format( a+b ) )\n', '\telif ""-"" == op:\n', '\t\tprint( ""{:d}"".format( a-b ) )\n', '\telif ""*"" == op:\n', '\t\tprint( ""{:d}"".format( a*b ) )\n', '\telif ""/"" == op:\n', '\t\tprint( ""{:d}"".format( a//b ) )']","['while True:\n', ' a,op,b=raw_input().split()\n', ' if op == ""?"":break\n', ' if op == ""+"":print int(a) + int(b)\n', ' if op == ""-"":print int(a) - int(b)\n', ' if op == ""*"":print int(a) * int(b)\n', ' if op == ""/"":print int(a) / int(b)']",1
"['s=[_ for _ in input()]\n', ""print(''.join(s[:3]))""]","['nm = input()\n', 'print(nm[:3])']",1
"['import sys\n', '\n', '\n', 'def gcd(m, n):\n', '  if n > m:\n', '    m, n = n, m\n', '  if n == 0:\n', '    return m\n', '  else:\n', '    return gcd(n, m % n)\n', '\n', '\n', 'for line in sys.stdin:\n', '  try:\n', '    a, b = [int(i) for i in line.split()]\n', '    g = gcd(a, b)\n', '    l = a * b / g\n', '    print(""%d %d"" % (g, l))\n', '  except:\n', '    break']","['while(1):\n', '    try:\n', '        i = raw_input()\n', '        a, b = map(int, i.split())\n', '        x, y = a, b\n', '        while(b != 0):\n', '            tmp = b\n', '            b = a % b\n', '            a = tmp\n', '        print a,\n', '        print x*y/a\n', '    except:\n', '        break']",1
"['n = int(input())\n', 'a = list(map(int, input().split()))\n', 'ans = 10 ** 16\n', 'a_1 = 0\n', 'a_2 = sum(a)\n', 'for i in range(n - 1):\n', '    a_1 += a[i]\n', '    a_2 -= a[i]\n', '    ans = min(ans, abs(a_1 - a_2))\n', 'print(ans)']","['import sys\n', 'import math\n', 'import itertools\n', 'import bisect\n', 'from copy import copy\n', 'from collections import deque,Counter\n', 'from decimal import Decimal\n', 'def s(): return input()\n', 'def k(): return int(input())\n', 'def S(): return input().split()\n', 'def I(): return map(int,input().split())\n', 'def X(): return list(input())\n', 'def L(): return list(input().split())\n', 'def l(): return list(map(int,input().split()))\n', 'def lcm(a,b): return a*b//math.gcd(a,b)\n', 'def gcd(*numbers): reduce(math.gcd, numbers)\n', 'sys.setrecursionlimit(10 ** 9)\n', 'mod = 10**9+7\n', 'count = 0\n', 'ans = 0\n', '\n', 'N = k()\n', 'A = l()\n', 'S = sum(A)\n', 'minx = S\n', 'sum = 0\n', '\n', 'for x in A:\n', '    sum += x\n', '    minx = min(minx, abs(sum-(S-sum)))\n', '\n', 'print(minx)\n']",1
"['N = int(input())\n', 'A = []\n', 'for i in range(N):\n', '    A.append(int(input()))\n', '\n', '\n', 'def insertionSort(N,A,g):\n', '    global cnt\n', '    for i in range(g,N):\n', '        v = A[i]\n', '        j = i-g\n', '        while A[j] > v and j >= 0:\n', '            A[j+g] = A[j]\n', '            j -= g\n', '            cnt += 1\n', '        A[j+g] = v\n', '    return A    \n', '      \n', 'def shellSort(N,A):\n', '    global cnt\n', '    cnt = 0\n', '    m = 1\n', '    G = [1]\n', '    x = 1\n', '    for i in range(N):\n', '        x = 3*x + 1\n', '        if x > N:\n', '            break\n', '        G.insert(0,x)\n', '        m += 1\n', '    \n', '    for i in range(m):\n', '        A = insertionSort(N,A,G[i])\n', '    \n', '    return cnt,A,m,G\n', '\n', 'cnt,A,m,G = shellSort(N,A)\n', 'print(m)\n', 'print("" "".join([str(g) for g in G]))\n', 'print(cnt)\n', 'for i in range(len(A)):\n', '    print(A[i])\n', '        \n', '        \n', '        \n']","['def insertionSort(a, n, g):\n', '    global cnt\n', '    for i in range(g, n):\n', '        v = a[i]\n', '        j = i - g\n', '        while j >= 0 and a[j] > v:\n', '            a[j+g] = a[j]\n', '            j = j - g\n', '            cnt = cnt + 1\n', '        a[j+g] = v\n', '\n', 'def shellSort(a, n):\n', '    global cnt\n', '    global G\n', '    global m\n', '    cnt = 0\n', '    G = [1]\n', '    while 3 * G[0] + 1 <= n:\n', '        G = [ 3*G[0]+1 ] + G\n', '    m = len(G)\n', '    for i in range(0, m):\n', '        insertionSort(a, n, G[i])\n', '\n', 'n = int(input())\n', 'a = [int(input()) for i in range(0, n)]\n', '\n', 'shellSort(a, n)\n', '\n', 'print(m)\n', 'print(*G)\n', 'print(cnt)\n', 'for i in range(0, n):\n', '    print(a[i])\n']",1
"['H,A = (int(x) for x in input().split())\n', 'print(H//A+(H%A>0))']","['x, y = map(int, input().split())\n', 'if x <= y:\n', '    print(1)\n', 'elif x % y == 0:\n', '    print(x//y)\n', 'else:\n', '    print(x//y+1)\n']",1
"['N, M, K = map(int, input().split())\n', '\n', 'class UnionFind:\n', '    def __init__(self, n):\n', '        self.ps = [-1] * (n + 1)\n', ' \n', '    def find(self, x):\n', '        if self.ps[x] < 0:\n', '            return x\n', '        else:\n', '            self.ps[x] = self.find(self.ps[x])\n', '            return self.ps[x]\n', ' \n', '    def union(self, x, y):\n', '        x = self.find(x)\n', '        y = self.find(y)\n', '        if x == y:\n', '            return False\n', '        if self.ps[x] > self.ps[y]:\n', '            x, y = y, x\n', '        self.ps[x] += self.ps[y]\n', '        self.ps[y] = x\n', '        return True\n', ' \n', '    def same(self, x, y):\n', '        return self.find(x) == self.find(y)\n', ' \n', '    def size(self, x):\n', '        x = self.find(x)\n', '        return -self.ps[x]\n', '\n', 'uf = UnionFind(N)\n', 'friends = [0]*(N+1)\n', 'chain = [0]*(N+1)\n', '\n', '\n', 'for _ in range(M):\n', '    A, B = map(int, input().split())\n', '    friends[A] += 1\n', '    friends[B] += 1\n', '    uf.union(A, B)\n', '\n', 'for _ in range(K):\n', '    C, D = map(int, input().split())\n', '    if uf.same(C, D):\n', '        friends[C] += 1\n', '        friends[D] += 1\n', '\n', 'ans = []\n', '\n', 'for i in range(1, N+1):\n', '    ans.append(uf.size(i) - friends[i] - 1)\n', '\n', 'print(*ans)']","['import sys\n', 'from collections import deque\n', '\n', 'def read():\n', '    return sys.stdin.readline().rstrip()\n', '\n', 'def main():\n', '    n, m, k = map(int, read().split())\n', '    friend = [[] for _ in range(n)]\n', '    block = [set() for _ in range(n)]\n', '    potential = [set() for _ in range(n)]\n', '    for _ in range(m):\n', '        a, b = [int(i) - 1 for i in read().split()]\n', '        friend[a].append(b)\n', '        friend[b].append(a)\n', '    for _ in range(k):\n', '        c, d = [int(i) - 1 for i in read().split()]\n', '        block[c].add(d)\n', '        block[d].add(c)\n', '    sd = set()\n', '    for u in range(n):\n', '        if u in sd:\n', '            continue\n', '        sn = deque([u])\n', '        pf = set()\n', '        while sn:\n', '            p = sn.pop()\n', '            if p in sd:\n', '                continue\n', '            sd.add(p)\n', '            pf.add(p)\n', '            for f in friend[p]:\n', '                sn.append(f)\n', '        for pfi in pf:\n', '            potential[pfi] = pf\n', '    print(*[len(potential[i]) - len(block[i] & potential[i]) - len(friend[i]) - 1 for i in range(n)])\n', '\n', ""if __name__ == '__main__':\n"", '    main()']",1
"['H, W, K = map(int, input().split())\n', 'S = [list(input()) for _ in range(H)]\n', 'ans = [[0] * W for _ in range(H)]\n', '\n', 'def calc(h, w, k):\n', '    #上下方向の限界を決める\n', '    up = h\n', '    for i in range(1, h + 1):\n', ""        if S[h - i][w] == '.' and ans[h - i][w] == 0:\n"", '            if h == i:\n', '                up = 0\n', '            continue\n', '        else:\n', '            up = h - (i - 1)\n', '            break\n', '\n', '    down = h\n', '    for i in range(1, H - h):\n', ""        if S[h + i][w] == '.' and ans[h + i][w] == 0:\n"", '            if i == H - h - 1:\n', '                down = H - 1\n', '            continue\n', '        else:\n', '            down = h + (i - 1)\n', '            break\n', ""    # print ('up, down =', up, down, i)\n"", '    # up から down までの縦の長さの長方形を作る。\n', '    for i in range(up, down + 1):\n', '        ans[i][w] = k\n', '    \n', '    flag = True\n', '    for i in range(1, w + 1):\n', '        for j in range(up, down + 1):\n', ""            if ans[j][w - i] == 0 and S[j][w - i] == '.':\n"", '                continue\n', '            else:\n', '                flag = False\n', '                break\n', '        if not flag:\n', '            break\n', '        for j in range(up, down + 1):\n', '            ans[j][w - i] = k\n', '    flag = True\n', '    for i in range(1, W - w):\n', '        for j in range(up, down + 1):\n', ""            if ans[j][w + i] == 0 and S[j][w + i] == '.':\n"", '                continue\n', '            else:\n', '                flag = False\n', '                break\n', '        if not flag:\n', '            break\n', '        for j in range(up, down + 1):\n', '            ans[j][w + i] = k\n', '        \n', '\n', '\n', 'k = 1\n', 'for w in range(W):\n', '    for h in range(H):\n', ""        if S[h][w] == '#':\n"", '            # print (h, w)\n', '            calc(h, w, k)\n', '            k += 1\n', '\n', 'for tmp in ans:\n', ""    print (*tmp, sep = ' ')""]","['import sys\n', 'from collections import deque\n', 'input = sys.stdin.readline\n', '\n', 'def main():\n', '    h, w, k = map(int, input().split())\n', '    board = [input().strip() for i in range(h)]\n', '\n', '    group = [[0 for i in range(w)] for j in range(h)]\n', '\n', '    state = 0   # 0:not found, 1:one strawberry\n', '    num = 1\n', '    stock = 1\n', '    pre = -1\n', '    for i in range(h):\n', '        if ""#"" not in board[i]:\n', '            stock += 1\n', '            continue\n', '        for j in range(w):\n', '            if board[i][j] == ""#"":\n', '                if state == 0:\n', '                    state = 1\n', '                else:\n', '                    num += 1\n', '                group[i][j] = num\n', '            else:\n', '                group[i][j] = num\n', '        for k in range(stock):\n', '            for j in range(w):\n', '                print(group[i][j], end="" "")\n', '            print()\n', '        num += 1\n', '        state = 0\n', '        stock = 1\n', '        pre = i\n', '    \n', '    for k in range(h-pre-1):\n', '        for j in range(w):\n', '            print(group[pre][j], end="" "")\n', '        print()\n', '\n', '\n', 'if __name__ == ""__main__"":\n', '    main()']",1
"['import math\n', '#入力\n', 'x = int(input())\n', 'x_upper = (x+1) / 1.08\n', 'x_lower = x / 1.08\n', 'x_candidate = math.ceil(x_lower)\n', 'if x_lower <= x_candidate < x_upper:\n', '    print(x_candidate)\n', 'else:\n', '    print("":("")']","['# -*- coding: utf-8 -*-\n', ' \n', '## Library\n', ' \n', 'import sys\n', 'from fractions import gcd\n', 'import math\n', 'from math import ceil,floor\n', 'import collections\n', 'from collections import Counter\n', 'import itertools\n', 'import copy\n', ' \n', '## input\n', ' \n', '# N=int(input())\n', '# A,B,C,D=map(int, input().split())\n', '# S = input()\n', '# yoko = list(map(int, input().split()))\n', '# tate = [int(input()) for _ in range(N)]\n', '# N, M = map(int,input().split()) \n', '#    P = [list(map(int,input().split())) for i in range(M)]\n', '#    S = []\n', '#    for _ in range(N):\n', '#        S.append(list(input()))\n', ' \n', 'N=int(input())\n', '\n', 'for i in range(1,N+1):\n', '    if floor(i*1.08)==N:\n', '        print(i)\n', '        sys.exit()\n', 'print("":("")']",1
"['N = int(input())\n', 'X = input()\n', 'memo = [-1] * (N+1)\n', 'memo[0] = 0\n', '\n', 'def popcount(k):\n', ""    return bin(k).count('1')\n"", '\n', 'def calc(k):\n', '    pop = popcount(k)\n', ""    #print('  ', k, pop)\n"", '    key = k\n', '    if memo[key] < 0:\n', '        k %= pop\n', '        if k == 0:\n', '            memo[key] = 1\n', '        else:\n', '            memo[key] = calc(k) + 1\n', '    return memo[key]\n', '\n', 'K = int(X, 2)\n', 'one = popcount(K)\n', 'if one == 0:\n', '    K_MOD = K\n', 'elif one == 1:\n', '    K_MOD   = 0\n', '    K_MOD_M = K\n', 'else:\n', '    K_MOD   = K % one\n', '    K_MOD_M = K % (one-1)\n', 'K_MOD_P = K % (one+1)\n', '\n', 'T_M = [1]*(N+1)\n', 'T_P = [1]*(N+1)\n', 'for i in range(1,N+1):\n', '    if one > 1:\n', '        T_M[i] = (T_M[i-1]*2) % (one-1)\n', '    T_P[i] = (T_P[i-1]*2) % (one+1)\n', '\n', 'for i in range(N):\n', ""    if X[i] == '1':\n"", '        pop = one - 1\n', '        k = K_MOD_M - T_M[N-i-1]\n', '    else:\n', '        pop = one + 1\n', '        k = K_MOD_P + T_P[N-i-1]\n', '\n', '    if pop == 0:\n', '        print(0)\n', '    else:\n', '        k %= pop\n', '        print(calc(k)+1)\n']","['N = int(input())\n', 'X = input()\n', '\n', 'def f(x):\n', '    ret = 0\n', '    c = bin(x).count(""1"")\n', '    while c > 0:\n', '        x %= c\n', '        c = bin(x).count(""1"")\n', '        ret += 1\n', '    return ret\n', '\n', 'MOD = 10 ** 9 + 7\n', 'origin_pop = X.count(""1"")\n', 'one_pop = origin_pop - 1\n', 'zero_pop = origin_pop + 1\n', 'one_mod = 0\n', 'zero_mod = 0\n', '\n', 'for i in X:\n', '    if one_pop > 0:\n', '        one_mod = one_mod * 2 + int(i)\n', '        one_mod %= one_pop\n', '    zero_mod = zero_mod * 2 + int(i)\n', '    zero_mod %= zero_pop\n', '\n', 'for i, x in enumerate(X):\n', '    if x == ""0"":\n', '        tmp = zero_mod + pow(2, N-1-i, zero_pop)\n', '        tmp %= zero_pop\n', '        print(f(tmp)+1)\n', '    else:\n', '        if one_pop == 0:\n', '            print(0)\n', '        else:\n', '            tmp = one_mod - pow(2, N-1-i, one_pop)\n', '            tmp = (tmp + one_pop) % one_pop\n', '            print(f(tmp)+1)\n']",1
"['\n', 'def arg(operator):\n', '    try:\n', '        return elements.index(operator)\n', '    except:\n', '        return 100000000000000\n', '\n', '\n', ""elements = [elem if elem in ['+', '-', '*']\n"", '            else int(elem) for elem in input().split()]\n', '\n', 'while len(elements) != 1:\n', ""    if arg('+') or arg('-') or arg('*'):\n"", ""        i = arg('+')\n"", ""        i = min(i, arg('-'))\n"", ""        i = min(i, arg('*'))\n"", '\n', ""        if elements[i] == '+': r = elements[i-2] + elements[i-1]\n"", ""        elif elements[i] == '-': r = elements[i-2] - elements[i-1]\n"", ""        elif elements[i] == '*': r = elements[i-2] * elements[i-1]\n"", '\n', '        # i, i-1, i-2 -> one element\n', '        elements = elements[:i-2] + [r] + elements[i+1:]\n', '    else:\n', '        break\n', '\n', 'print(elements[0])']","['list = input().split()\n', 'stack = []\n', 'for i in list:\n', '    if ( i.isdigit() ):\n', '        stack.append(int(i))\n', ""    elif (i == '+'):\n"", '        stack.append(stack.pop() + stack.pop())\n', ""    elif (i == '*'):\n"", '        stack.append(stack.pop() * stack.pop())\n', ""    elif (i == '-'):\n"", '        stack.append( (-1)*stack.pop() + stack.pop())\n', '\n', 'print(stack.pop())']",1
"['from sys import stdin\n', 'input = stdin.buffer.readline\n', '\n', 'n, k = map(int, input().split())\n', '*a, = map(int, input().split())\n', 'for i in range(k, n):\n', '\tif a[i] > a[i - k]:\n', ""\t\tprint('Yes')\n"", '\telse:\n', ""\t\tprint('No')\n""]","['from sys import stdin, stdout\n', 'import math,sys,heapq\n', 'from itertools import permutations, combinations\n', 'from collections import defaultdict,deque,OrderedDict\n', 'from os import path\n', 'import bisect as bi\n', ""def yes():print('YES')\n"", ""def no():print('NO')\n"", ""if (path.exists('input.txt')): \n"", '    #------------------Sublime--------------------------------------#\n', ""    sys.stdin=open('input.txt','r');sys.stdout=open('output.txt','w');\n"", '    def I():return (int(input()))\n', '    def In():return(map(int,input().split()))\n', 'else:\n', '    #------------------PYPY FAst I/o--------------------------------#\n', '    def I():return (int(stdin.readline()))\n', '    def In():return(map(int,stdin.readline().split()))\n', '\n', 'def dict(a):\n', '    d={}\n', '    for x in a:\n', '        if d.get(x,-1)!=-1:\n', '            d[x]+=1\n', '        else:\n', '            d[x]=1\n', '    return d\n', '\n', 'def find_gt(a, x):\n', ""    'Find leftmost value greater than x'\n"", '    i = bi.bisect_right(a, x)\n', '    if i != len(a):\n', '        return i\n', '    else:            \n', '        return -1\n', '\n', 'def main():\n', '    try:\n', '        n,k=In()\n', '        l=list(In())   \n', '        ans=[]\n', '        t=1\n', '        last=1\n', '        for x in range(k,n):\n', '            if l[x-k]>=l[x]:\n', ""                print('No')\n"", '            else:\n', ""                print('Yes')\n"", '\n', '\n', '    except:\n', '        pass\n', '        \n', 'M = 998244353\n', 'P = 1000000007\n', ' \n', ""if __name__ == '__main__':\n"", '    #for _ in range(I()):main()\n', '    for _ in range(1):main()\n', '\n', '\n']",1
"['import math\n', 'n = int(input())\n', 'a = [float(x) for x in list(input().split())]\n', 'b = [float(x) for x in list(input().split())]\n', '\n', 'result = 0\n', 'for aa, bb in zip(a, b):\n', '    result += abs(aa - bb)\n', 'print(round(result, 6))\n', '\n', 'result = 0\n', 'for aa, bb in zip(a, b):\n', '    result += abs(aa - bb) ** 2\n', 'print(round(math.sqrt(result), 8))\n', '\n', 'result = 0\n', 'for aa, bb in zip(a, b):\n', '    result += abs(aa - bb) ** 3\n', 'print(round(math.pow(result, 1/3), 8))\n', '\n', 'result = []\n', 'for aa, bb in zip(a, b):\n', '    result.append(abs(aa - bb))\n', 'print(max(result))\n', '\n']","['import math\n', 'n = int(input())\n', 'x, y = [int(e) for e in input().split()], [int(e) for e in input().split()]\n', 'D1 = D2 = D3 = 0; D4 = []\n', 'for x1, y1 in zip(x, y):\n', '    D1 += abs(x1-y1)\n', '    D2 += abs(x1-y1)**2\n', '    D3 += abs(x1-y1)**3\n', '    D4.append(abs(x1-y1))\n', ""print('{0:.6f}'.format(D1))\n"", ""print('{0:.6f}'.format(math.sqrt(D2)))\n"", ""print('{0:.6f}'.format(math.pow(D3, (1/3))))\n"", ""print('{0:.6f}'.format(max(D4)))\n"", '\n']",1
"['MOD=10**9+7\n', 'def pow(x,n,mod):\n', '    ans = 1\n', '    while n>0:\n', '        if n&1==1:\n', '            ans*=x\n', '            ans%=mod\n', '        x = x*x\n', '        x%=mod\n', '        n = n>>1\n', '    return ans\n', '\n', 'N,a,b=map(int,input().split())\n', 'xa=1\n', 'for i in range(N,N-a,-1):\n', '  xa*=i\n', '  xa%=MOD\n', 'xb=xa\n', 'for i in range(N-a,N-b,-1):\n', '  xb*=i\n', '  xb%=MOD\n', 'ya=1\n', 'for i in range(2,a+1):\n', '  ya*=i\n', '  ya%=MOD\n', 'yb=ya\n', 'for i in range(a+1,b+1):\n', '  yb*=i\n', '  yb%=MOD\n', 'ans=(pow(2,N,MOD)-1\n', '     -(xa*pow(ya,MOD-2,MOD)%MOD)\n', '     -(xb*pow(yb,MOD-2,MOD)%MOD))%MOD\n', 'print(ans)']","['n, a, b = map(int, input().split())\n', '\n', 'MOD = 10 ** 9 + 7\n', '\n', 'def modinv(x, mod):\n', '    return pow(x, mod-2, mod)\n', '\n', 'modinv_table = [-1] * (b+1)\n', 'for i in range(1, b+1):\n', '    modinv_table[i] = modinv(i, MOD)\n', '\n', 'def comb(n, k, mod):\n', '    ans = 1\n', '    for i in range(k):\n', '        ans *= n-i\n', '        ans *= modinv_table[i + 1]\n', '        ans %= mod\n', '    return ans\n', '  \n', 'ans = (pow(2, n, MOD) - comb(n, a, MOD) - comb(n, b, MOD)) % MOD - 1\n', '\n', 'print(ans)']",1
"['n = int(input())\n', ""s = 'abcdefghijklmnopqrstuvwxyz'\n"", ""ans = ''\n"", 'while n > 0:\n', '    n -= 1\n', '#    print(n//26,n%26)\n', '    ans = s[n%26] + ans\n', '    n = n // 26\n', 'print(ans)']","['n = int(input())\n', '\n', 'str = """"\n', '\n', 'while 1:\n', '    n, mod = divmod(n, 26)\n', '    if mod == 0:\n', ""        str = 'z' + str\n"", '        n -=1\n', '    else:\n', '        str = chr(96+mod) + str\n', '\n', '    if n == 0:\n', '        break\n', '\n', 'print(str)']",1
"['def fibonacci(F,n):\n', '    F[0] = 1\n', '    F[1] = 1\n', '    for i in range(2,n+1,1):\n', '        F[i] = F[i-1] + F[i-2]\n', '    return F[n]\n', '\n', 'def main():\n', '    n = int(input())\n', '    F  = [0]*(n+1)\n', '    ans = fibonacci(F,n)\n', '    return ans\n', '\n', 'print(main())\n', '\n']","['memo = [1, 1]\n', '\n', 'def fib(n):\n', '    if (n < len(memo)):\n', '        return memo[n]\n', '\n', '    memo.append(fib(n-1) + fib(n-2))\n', '    return memo[n]\n', '\n', 'N = int(input())\n', 'print(fib(N))\n']",1
"['N,K=map(int,input().split())\n', 'H=list(map(int,input().split()))\n', 'P=0\n', 'for i in range(N):\n', '  if K<=H[i]:\n', '    P+=1\n', 'print(P)']","['import numpy as np\n', 'n,k = map(int,input().split())\n', 'h = np.array(list(map(int,input().split())))\n', '\n', 'print(len(h[k<=h]))']",1
"['N = int(input())\n', 'X = input().split()\n', '\n', 'distance = 0\n', ""min_distance = float('Inf')\n"", '\n', 'for i in range(1,101):\n', '    for j in range(N):\n', '        distance += (int(X[j]) - i) ** 2\n', '\n', '    min_distance = min(min_distance, distance)\n', '    distance = 0\n', '\n', 'print(min_distance)']","['# coding: utf-8\n', '\n', 'def main():\n', '    N = input()\n', '    X = list(map(int, input().split()))\n', '    ans = 1000001\n', '\n', '    for i in range(1, 101):\n', '        tmp = sum([(x - i) ** 2 for x in X])\n', '        if tmp < ans:\n', '            ans = tmp\n', '\n', '    print(ans)\n', '\n', 'if __name__ == ""__main__"":\n', '    main()\n']",1
"['a = []\n', 'for i in range(10):\n', '    a.append(int(raw_input()))\n', 'a.sort()\n', 'a.reverse()\n', 'for i in range(3):\n', '    print a[i]']","['# coding: utf-8\n', '# Here your code !\n', '\n', 'import sys\n', '\n', 'n = [int(input()) for i in range (1,11)] \n', '#t = [int(input()) for i in range(n)] \n', 'n.sort()\n', 'n.reverse()\n', '\n', 'for j in range (0,3):\n', '    print(n[j])']",1
"['x = int(input())\n', 'b = x\n', 'a = 1\n', 'while b%360!=0:\n', '    a += 1\n', '    b += x\n', 'print(a)']","['X = int(input())\n', 'K = 1\n', '\n', 'while K > 0:\n', '  if X * K % 360 == 0:\n', '    print(K)\n', '    break\n', '  else:\n', '    K += 1\n', '\n']",1
"['n=int(input())\n', 'a=list(map(int,input().split()))\n', 'q=int(input())\n', 'm=list(map(int,input().split()))\n', '\n', 'd={}\n', 'for i in range(2**n):\n', '    c=0\n', '    for j in range(n):\n', '        if (i>>j)&1:\n', '            c+=a[j]\n', '    d[c]=1\n', '\n', 'for i in range(q):\n', '    if m[i] in d:\n', '        print(""yes"")\n', '    else:\n', '        print(""no"")\n']","['n = int(input())\n', 'A = list(map(int,input().split()))\n', 'm = int(input())\n', 'B = list(map(int,input().split()))\n', '\n', 'def solve2(x,y):\n', '    if x==n:\n', '        S[y] = 1\n', '    else:\n', '        solve2(x+1,y)\n', '        if y+A[x] < 2001:\n', '            solve2(x+1,y+A[x])\n', '            \n', 'S = [0 for i in range(2001)]\n', '\n', 'solve2(0,0)\n', '\n', 'def solve(x,y):\n', '    if y<0:\n', '        return False\n', '    elif y==0:\n', '        return True\n', '    elif x==n:\n', '        return False\n', '    else:\n', '        return solve(x+1,y) or solve(x+1,y-A[x])\n', '    \n', 'for i in range(m):\n', '    if (i>50 and (S[B[i]] == 1)):\n', '        print(""yes"")\n', '    elif (i>50 and (S[B[i]] == 0)):\n', '        print(""no"")\n', '    else:\n', '        if solve(0,B[i]):\n', '            print(""yes"")\n', '        else:\n', '            print(""no"")\n']",1
"['# -*- coding: utf-8 -*-\n', '""""""\n', 'Created on Thu May  7 23:19:34 2020\n', '\n', '@author: Kanaru Sato\n', '""""""\n', 'def dfs(v):\n', '    global t\n', '    d[v] = t\n', '    t += 1\n', '    if conlist[v]:\n', '        for connectedv in conlist[v]:\n', '            if d[connectedv] == -1:\n', '                dfs(connectedv)\n', '    f[v] = t\n', '    t += 1\n', '\n', 'n = int(input())\n', 'conlist = [[] for i in range(n)]\n', 'for i in range(n):\n', '    _ = list(map(int,input().split()))\n', '    [conlist[i].append(_[k]-1) for k in range(2,_[1]+2)]\n', '\n', 'd = [-1 for i in range(n)]\n', 'f = [-1 for i in range(n)]\n', 't = 1\n', '\n', 'for i in range(n):\n', '    if d[i] == -1:\n', '        dfs(i)    \n', '\n', 'for i in range(n):\n', '    print(i+1,d[i],f[i])\n']","['n = int(input())\n', 'g = [None] * n\n', 'visited = [0] * n\n', 'root = set(range(n))\n', 'ts = [[0, 0] for _ in range(n)]\n', 't = 0\n', '\n', 'while n:\n', '    l = list(map(int, input().split()))\n', '    connected = [i - 1 for i in l[2:]]\n', '    g[l[0] - 1] = [i - 1 for i in l[2:]]\n', '    root -= set(connected)\n', '    n -= 1\n', '\n', '\n', 'def dfs(i):\n', '    global g, t, ts, visited\n', '    lts = ts[i]\n', '    t += 1\n', '    lts[0] = t\n', '    visited[i] = 1\n', '    for c in g[i]:\n', '        if not visited[c]:\n', '            dfs(c)\n', '    t += 1\n', '    lts[1] = t\n', '\n', 'if root:\n', '    for r in sorted(root):\n', '        dfs(r)\n', 'else:\n', '    dfs(0)\n', '\n', 'for i, v in enumerate(ts):\n', '    print(i + 1, *v)']",1
"['n,t=map(int,input().split())\n', 'l=[list(map(int,input().split())) for _ in range(n)]\n', 'dp=[0]*(t+max(l)[0])\n', 'l.sort()\n', 'for a,b in l:\n', '  for i in range(0,t+a)[::-1]: \n', '    if i-a>=0:\n', '      dp[i]=max(dp[i],dp[i-a]+b)\n', 'print(max(dp[t:]))']","['N,T = map(int,input().split())\n', 'AB = [list(map(int,input().split())) for i in range(N)]\n', 'AB.sort(key=lambda x: x[0])\n', '#print(AB)\n', '\n', 'W = T + 1\n', 'def dp(AB,W):\n', '    N = len(AB)\n', '    DP = [[0]*W for i in range(N+1)]\n', '    for i in range(N):\n', '        for w in range(W):\n', '            if w != W-1:\n', '                if AB[i][0] <= w:\n', '                    DP[i+1][w] = max(DP[i][w-AB[i][0]]+AB[i][1],DP[i][w])\n', '                else:\n', '                    DP[i+1][w] = DP[i][w]\n', '            else:\n', '                DP[i+1][w] = max(DP[i][w-1]+AB[i][1],DP[i][w])\n', '    return DP\n', '\n', 'DP1 = dp(AB,W)\n', '\n', 'ans = DP1[N][T]\n', 'print(ans)']",1
"['n = int(input())\n', 'S = list(input())\n', 'ans = 0\n', 'for i in range(len(S)-2):\n', '  if S[i] == ""A"":\n', '    if S[i+1] == ""B"":\n', '      if S[i+2] == ""C"":\n', '        ans += 1\n', '\n', 'print(ans)']","['N = int(input())\n', 'S = input()\n', '\n', 'ans = 0\n', 'for i in range(N - 2):\n', '    if S[i] + S[i + 1] + S[i + 2] == ""ABC"":\n', '        ans += 1\n', 'print(ans)\n']",1
"['import sys\n', 'import itertools\n', '# import numpy as np\n', 'import time\n', 'import math\n', ' \n', 'sys.setrecursionlimit(10 ** 7)\n', ' \n', 'from collections import defaultdict\n', ' \n', 'read = sys.stdin.buffer.read\n', 'readline = sys.stdin.buffer.readline\n', 'readlines = sys.stdin.buffer.readlines\n', '\n', 'N = int(input())\n', '\n', 'c = [[0 for i in range(10)] for _ in range(10)]\n', 'def f(n):\n', '    x = 0\n', '    while n > 0:\n', '        n //= 10\n', '        x +=1\n', '    return x\n', '\n', 'for i in range(1, N + 1):\n', '    d = f(i)\n', '    front = i // (10 ** (d - 1)) \n', '    back = i % 10\n', '    c[front][back] += 1\n', '\n', 'ans = 0\n', 'for i in range(1, 10):\n', '    for j in range(1, 10):\n', '        ans += c[i][j] * c[j][i]\n', 'print(ans)\n']","['N = int(input())\n', 'rem = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n', ' [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n', ' [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n', ' [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n', ' [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n', ' [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n', ' [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n', ' [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n', ' [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n', ' [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\n', 'for i in range(1,N+1):\n', '    sti = str(i)\n', '    rem[int(sti[0])][int(sti[-1])] += 1\n', 'count = 0\n', 'for k in range(10):\n', '    for j in range(10):\n', '        count += rem[k][j]*rem[j][k]\n', '        \n', 'print(count)']",1
"['def main():\n', '    X = int(input())\n', '    tmp = 0\n', '    cnt = 0\n', '    while True:\n', '        tmp += X\n', '        cnt += 1\n', '        tmp %= 360\n', '        if tmp == 0:\n', '            break\n', '    return cnt \n', '\n', 'print(main())\n']","['x = int(input())\n', '\n', 'idx = 0\n', 'tmp = 0\n', 'while 1:\n', '    tmp += x\n', '    idx += 1\n', '    if tmp % 360 == 0:\n', '        break\n', '\n', 'print(idx)\n']",1
"['# https://atcoder.jp/contests/abc164/tasks/abc164_d\n', '\n', 'import sys\n', 'input = sys.stdin.readline\n', '\n', '\n', 'S = input().rstrip()\n', '\n', 'res = 0\n', '\n', 'x = 0\n', 'p = 1\n', 'L = len(S)\n', 'MOD = 2019\n', 'reminder = [0]*2019\n', 'reminder[0] = 1\n', 'for s in reversed(S):\n', '    """""" 累積和 """"""\n', '    x = (int(s)*p + x)%MOD\n', '    p = p*10%MOD\n', '    reminder[x] += 1\n', '\n', 'for c in reminder:\n', '    res += c*(c-1)//2\n', '\n', 'print(res)']","['import numpy as np\n', 'S=input()\n', 'N=len(S)\n', 'mod=[0 for i in range(2019)]\n', 'mod2=0\n', 'ten=1\n', 'for i in range(N-1,-1,-1): \n', '  s=int(S[i])*ten\n', '  mod2+=np.mod(s,2019)\n', '  mod2=np.mod(mod2,2019)\n', '  mod[mod2]+=1\n', '  ten=(ten*10)%2019\n', 'ans=0\n', 'for i in range(2019):\n', '  k=mod[i]\n', '  if i==0:\n', '    if k>=2:\n', '      ans+=k*(k-1)//2+k\n', '    else:\n', '      ans+=k\n', '  else:\n', '    if k>=2:\n', '      ans+=k*(k-1)//2\n', 'print(ans) ']",1
"['from collections import Counter\n', 'from itertools import accumulate\n', '\n', 'N, K = map(int,input().split())\n', 'A = list(map(int,input().split()))\n', '\n', 'd = Counter()\n', '\n', 'A = [0] + list(accumulate(A))\n', 'A = [a % K for a in A]\n', '\n', 'ans = 0\n', 'for i in range(N+1):\n', '    ans += d[(A[i]-i) % K]\n', '    d[(A[i]-i) % K] += 1\n', '    if i-K+1 >= 0:\n', '        d[(A[i-K+1] - (i-K+1)) % K] -= 1\n', '\n', 'print(ans)']","['from collections import Counter\n', 'from itertools import accumulate\n', '\n', 'N, K = map(int,input().split())\n', 'A = list(map(int,input().split()))\n', '\n', 'd = Counter()\n', '\n', 'A = [0] + list(accumulate(A))\n', 'A = [a % K for a in A]\n', '\n', 'ans = 0\n', 'for i in range(N+1):\n', '    ans += d[(A[i]-i) % K]\n', '    d[(A[i]-i) % K] += 1\n', '    if i-K+1 >= 0:\n', '        d[(A[i-K+1] - (i-K+1)) % K] -= 1\n', '\n', 'print(ans)']",1
"['n, s = map(int, input().split())\n', 'print(""Yes"" if 500*n >= s else ""No"")']","['a,b=input().split()\n', 'a=int(a)\n', 'b=int(b)\n', 'if a*500>=b:\n', '  print(""Yes"")\n', 'else:\n', '  print(""No"")']",1
"['N=int(input())\n', 'if N==1:\n', '    print(0)\n', '    exit()\n', '\n', 'def primeryNum(n):\n', '    border=int(n**0.5)+1\n', '    ary=list(range(int(n**0.5)+2))\n', '    ary[1]=0\n', '    for a in ary:\n', '        if a>border: break\n', '        elif a==0: continue\n', '        for i in range(a*2,int(n**0.5)+2,a):\n', '            ary[i]=0           \n', '    return ary\n', '\n', 'primeryNumL=primeryNum(N)\n', '# print(primeryNumL)\n', 'ans=0\n', 'N_=N\n', 'for x in primeryNumL:\n', '    if x==0 or N%x!=0:\n', '        continue\n', '    n=N\n', '    cnt=0\n', '    while n%x==0:\n', '        cnt+=1\n', '        n/=x\n', '    N_//=x**cnt\n', '    buf=cnt-1\n', '    res=1\n', '    # print(x,cnt)\n', '    for i in range(2,cnt+1):\n', '        if buf<i:\n', '            break\n', '        buf-=i\n', '        res+=1\n', '    ans+=res\n', 'if N_>1:\n', '    ans+=1\n', 'print(ans)\n']","['import math\n', '\n', '# 素数か否かを判定する関数\n', 'def is_prime(n):\n', '    for i in range(2, int(math.sqrt(n))+1):\n', '        if n%i == 0:\n', '            return False\n', '    return True      \n', '\n', '# nまでの素数を返す関数（エラトステネスの篩）\n', 'def getPrime(n):\n', '    n_sqrt = int(math.sqrt(n))\n', '    array = [True]*(n_sqrt+1)\n', '    result = []\n', '    for i in range(2, n_sqrt+1):\n', '        if array[i]:\n', '            array[i] = False\n', '            result.append(i)\n', '            for j in range(i*2, n_sqrt+1, i):\n', '                array[j] = False\n', '    return result\n', '\n', 'N = int(input())\n', 'n = N\n', 'prime = getPrime(n)\n', 'prime_exp = []\n', '# print(prime)\n', 'for p in prime:\n', '    cnt = 0\n', '    while n%p == 0:\n', '        n = int(n/p)\n', '        # print(n)\n', '        cnt += 1\n', '    if cnt != 0:\n', '        prime_exp.append([p, cnt])\n', 'if is_prime(n) and n != 1:\n', '    prime_exp.append([n, 1])\n', 'ans = 0\n', 'for pe in prime_exp:\n', '    ans += int((-1+math.sqrt(1+8*pe[1]))/2)\n', 'print(ans)']",1
"[""print(eval(input().replace(' ','*')))""]","['import sys\n', '\n', 'A, B = map(int,input().split())\n', '\n', 'def solve():\n', '  ret = A*B\n', '  return ret\n', '\n', 'print(solve())']",1
"['from collections import defaultdict\n', 'from collections import deque\n', 'N, M = map(int, input().split())\n', 'edges = defaultdict(list)\n', 'ans = [0]*(N+1)\n', 'num = 1\n', 'q = deque([1])\n', 'currentdepth = {1}\n', 'nextdepth = set()\n', 'for _ in range(M):\n', '  a, b = map(int, input().split())\n', '  edges[a].append(b)\n', '  edges[b].append(a)\n', 'while q:\n', '  current = q.popleft()\n', '  for nextver in edges[current]:\n', '    if ans[nextver]==0:\n', '      q.append(nextver)\n', '      ans[nextver] = current\n', ""print('Yes')\n"", ""print(*(ans[2:]),sep='\\n')""]","['from collections import deque\n', 'N, M = map(int, input().split())\n', 'Mlist = [[] for _ in range(N+1)]\n', 'for i in range(M):\n', '    a, b = map(int, input().split())\n', '    Mlist[a].append(b)\n', '    Mlist[b].append(a)\n', '\n', 'ans = [0] * (N+1)\n', '\n', 'd = deque()\n', 'd.append(1)\n', 'count = 0\n', 'while count != N:\n', '    Q = d.popleft()\n', '    for i in Mlist[Q]:\n', '        if ans[i] == 0:\n', '            ans[i] = Q\n', '            d.append(i)\n', '            count = count+1\n', ""print('Yes')\n"", 'for i in range(N-1):\n', '    print(ans[i+2])\n']",1
"['import sys\n', 'from collections import deque\n', '\n', 'read = sys.stdin.read\n', 'readline = sys.stdin.readline\n', 'readlines = sys.stdin.readlines\n', 'sys.setrecursionlimit(10 ** 9)\n', 'INF = 1 << 60\n', 'MOD = 1000000007\n', '\n', '\n', 'def main():\n', '    N, K, *A = map(int, read().split())\n', '\n', '    pos = [a for a in A if a >= 0]\n', '    neg = [a for a in A if a < 0]\n', '\n', '    pos.sort()\n', '    neg.sort(reverse=True)\n', '\n', '    if N == K:\n', '        vec = A\n', '    elif N == len(neg):\n', '        if K & 1:\n', '            vec = neg[:K]\n', '        else:\n', '            vec = neg[-K:]\n', '    else:\n', '        ans_pos = []\n', '        ans_neg = []\n', '        for _ in range(K):\n', '            if not pos:\n', '                ans_neg.append(neg.pop())\n', '            elif not neg:\n', '                ans_pos.append(pos.pop())\n', '            elif pos[-1] > -neg[-1]:\n', '                ans_pos.append(pos.pop())\n', '            else:\n', '                ans_neg.append(neg.pop())\n', '\n', '        if (len(ans_neg) & 1) and ((not ans_pos) or (ans_pos[-1] != 0)):\n', '            if not pos or not ans_neg:\n', '                drop_pos = True\n', '            elif not neg or not ans_pos:\n', '                drop_pos = False\n', '            else:\n', '                drop_pos = pos[-1] * ans_pos[-1] < neg[-1] * ans_neg[-1]\n', '\n', '            if drop_pos:\n', '                ans_neg.append(neg.pop())\n', '                ans_pos.pop()\n', '            else:\n', '                ans_pos.append(pos.pop())\n', '                ans_neg.pop()\n', '\n', '        vec = ans_pos + ans_neg\n', '\n', '    ans = 1\n', '    for a in vec:\n', '        ans = ans * a % MOD\n', '\n', '    print(ans)\n', '    return\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']","['MOD = 10**9+7\n', '\n', 'n, k = map(int, input().split())\n', 'a = list(map(int, input().split()))\n', 'p, q = [], []\n', 'for x in a:\n', '    if x >= 0: p.append(x)\n', '    else: q.append(x)\n', 'lp, lq = len(p), len(q)\n', '\n', 'def sp():\n', '    p.sort(reverse=True)\n', '    q.sort()\n', '    ans = p[0] if k % 2 else 1\n', '    s = []\n', '    for i in range(0, lq-1, 2):\n', '        s.append(q[i]*q[i+1])\n', '    for i in range(k % 2, lp-1, 2):\n', '        s.append(p[i]*p[i+1])\n', '    s.sort(reverse=True)\n', '    for i in range(k//2):\n', '        ans *= s[i]\n', '        ans %= MOD\n', '    print(ans)\n', '\n', 'def sq():\n', '    a.sort(key=lambda x: abs(x))\n', '    ans = 1\n', '    for i in range(k):\n', '        ans *= a[i]\n', '        ans %= MOD\n', '    print(ans)\n', '\n', 'if k % 2 and not p: sq()\n', 'elif n == k and lq % 2: sq()\n', 'else: sp()\n']",1
"['from bisect import bisect_left,bisect_right\n', '\n', 'TO_ACII = 97\n', '\n', 'N = int(input())\n', 'S = [""0""] + list(input())\n', 'Q = int(input())\n', '\n', 'ABC = [[]for i in range(0,26,1)]#該当文字a:0 b:1 ...z:26 が何文字目に出てきたかを保持する配列\n', '\n', 'for i in range(1,N+1,1):\n', '    ABC[ord(S[i])-TO_ACII].append(i)\n', '\n', 'ans = []\n', 'for i in range(0,Q,1):\n', '    q = list(input().split())\n', '    if q[0]==""1"":#文字変更\n', '        changed = S[int(q[1])]\n', '        ABC[ord(changed)-TO_ACII].pop(bisect_left(ABC[ord(changed)-TO_ACII],int(q[1])))\n', '        ABC[ord(q[2])-TO_ACII].insert(bisect_left(ABC[ord(q[2])-TO_ACII],int(q[1])),int(q[1]))\n', '        S[int(q[1])]=q[2]\n', '    else:\n', '        tmpans = 0\n', '        for i in range(0,26,1):\n', '\n', '            if bisect_right(ABC[i],int(q[1])-1)<len(ABC[i]) and int(q[2]) >= ABC[i][bisect_right(ABC[i],int(q[1])-1)]:\n', '                tmpans+=1\n', '        ans.append(tmpans)\n', '\n', 'for i in range(0,len(ans),1):\n', '    print(ans[i])\n']","['import sys\n', 'input = sys.stdin.readline\n', '\n', 'class SegmentTree:\n', '    def __init__(self,l):\n', '        nb = bin(len(l))[2:]\n', '        b = sum([int(d) for d in nb])\n', '        if b == 1:\n', '            self.end_leaves = pow(2,len(nb)-1)\n', '        else:\n', '            self.end_leaves = pow(2,len(nb))\n', '        self.tree = [set() for _ in range(self.end_leaves*2)]\n', '        \n', '        for i in range(len(l)):\n', '            self.tree[self.end_leaves+i].add(l[i])\n', '            \n', '    def union(self,a):\n', '        if a >= self.end_leaves // 2:\n', '            self.tree[a] = self.tree[a*2] | self.tree[a*2+1]\n', '            return self.tree[a]\n', '        else:\n', '            self.tree[a] = self.union(a*2) | self.union(a*2+1)\n', '            return self.tree[a]\n', '    def update(self,a,s):\n', '        x = a + self.end_leaves\n', '        if s not in self.tree[x]:\n', '            self.tree[x] = set(s)\n', '            while x > 1:\n', '                x //= 2\n', '                self.tree[x] = self.tree[x*2] | self.tree[x*2+1]\n', '    def query(self,l,r):\n', '        x = l + self.end_leaves\n', '        y = r + self.end_leaves\n', '        tl = set()\n', '        tr = set()\n', '        while y - x > 1:\n', '            if x % 2 == 1:\n', '                tl = tl | self.tree[x]\n', '                x += 1\n', '            if y % 2 == 0:\n', '                tr = self.tree[y] | tr\n', '                y -= 1\n', '            x >>= 1\n', '            y >>= 1\n', '        if y - x == 0:\n', '            print(len(tl|tr|self.tree[x]))\n', '        else:\n', '            print(len(tl|tr|self.tree[x]|self.tree[y]))\n', '            \n', '            \n', '\n', 'N = int(input())\n', 'S = list(input())\n', 'st = SegmentTree(S)\n', 'st.union(1)\n', 'Q = int(input())\n', 'for i in range(Q):\n', '    q = input().split()\n', ""    if q[0] == '1':\n"", '        st.update(int(q[1])-1,q[2])\n', '    else:\n', '        st.query(int(q[1])-1,int(q[2])-1)']",1
"['n = int(input())\n', 'A = list(map(int, input().split()))\n', '\n', 'x = 1000\n', 'for i in range(n-1):\n', '    if A[i] < A[i+1]:\n', '        q, x = divmod(x, A[i])\n', '        x += q*A[i+1]\n', 'print(x)']","['n=int(input())\n', 'a=[int(i) for i in input().split()]\n', '\n', 'c=1000\n', '\n', 'for i in range(n-1):\n', '    if a[i]<a[i+1]:\n', '        c += (c//a[i])*(a[i+1]-a[i])\n', 'print(c)']",1
"['h, w, k = map(int, input().split())\n', 'X = [[1 if a == ""#"" else 0 for a in input()] for _ in range(h)]\n', 'ans = 0\n', 'for ii in range(1 << h):\n', '  for jj in range(1 << w):\n', '    if sum([sum([X[i][j] for j in range(w) if jj >> j & 1]) for i in range(h) if ii >> i & 1]) == k:\n', '      ans += 1\n', 'print(ans)']","['h,w,k = map(int,input().split())\n', 'd = []\n', 'for i in range(h):\n', '  d.append(list(input()))\n', '\n', 'c = 0\n', 'for x in range(2**h):\n', '  for y in range(2**w):\n', ""    e =  [['t' for _ in range(w)] for _ in range(h)]\n"", '    for i in range(h):\n', '      if ((x >> (h-1-i)) & 1) == 1:\n', '        for l in range(w):\n', ""          e[i][l] = 'R'\n"", '    \n', '    for j in range(w):\n', '      if ((y >> (w-1-j)) & 1) == 1:\n', '        for m in range(h):\n', ""          e[m][j] = 'R'\n"", '    \n', '    s = 0     \n', '    for p in range(h):\n', '      for q in range(w):\n', ""        if d[p][q] == '#' and e[p][q] != 'R':\n"", '          s += 1\n', '    \n', '    if s == k:\n', '      c += 1\n', '            \n', 'print(c)        ']",1
"['n, m, x = map(int, input().split())\n', 'books_info = []\n', 'price_info = []\n', 'for i in range(n):\n', '    c, *a = map(int, input().split())\n', '    books_info.append(a)\n', '    price_info.append(c)\n', 'pattern_list = []\n', 'for j in range(2 ** n):\n', '    tmp_list = []\n', '    for k in range(n):\n', '        if ((j >> k) & 1):\n', '            tmp_list.append(k)\n', '        else:\n', '            pass\n', '    pattern_list.append(tmp_list)\n', 'book_price = 10 ** 5 * 12 + 1\n', 'for pattern in pattern_list:\n', '    # 全ての参考書を買わない=len(pattern)が0の場合はスキップする\n', '    if len(pattern) == 0:\n', '        continue\n', '    is_ok = False\n', '    price = 0\n', '    for j in range(m):\n', '        m_sum = 0\n', '        price_sum = 0\n', '        for k in pattern:\n', '            m_sum += books_info[k][j]\n', '            price_sum += price_info[k]\n', '        if m_sum >= x:\n', '            is_ok = True\n', '        else:\n', '            is_ok = False\n', '            break\n', '        price = price_sum\n', '    if is_ok == True:\n', '        book_price = min(price, book_price)\n', '    else:\n', '        pass\n', 'print(book_price if book_price != 10 ** 5 * 12 + 1 else -1)\n', '\n']","['import numpy as np\n', '\n', 'N, M, X = map(int, input().split())\n', 'C = [list(map(int, input().split())) for _ in range(N)]\n', '\n', 'cost = float(""inf"")\n', 'for i in range(2**N):\n', '  tmp = np.array([0 for _ in range(M+1)])\n', '  for j in range(N):\n', '    if (i>>j) & 1:\n', '      tmp += np.array(C[j])\n', '  if min(tmp[1:]) >= X:\n', '    cost = min(cost, tmp[0])\n', '\n', 'print(-1 if cost == float(""inf"") else cost)']",1
"['N = int(input())\n', 'a = list(input())\n', 'count = 1\n', 'for i in range(N):\n', '  if i>0:\n', '    if a[i-1]==a[i]:\n', '      pass\n', '    elif a[i-1]!=a[i]:\n', '      count+=1\n', '      \n', 'print(count)']","['N = int(input())\n', 'S = input()\n', 'tmp = S[0]\n', 'ans = 1\n', 'for n in range(1,N):\n', '  if S[n] != tmp:\n', '    ans += 1\n', '    tmp = S[n]\n', 'print(ans)']",1
"['from sys import stdin\n', '\n', '# read input\n', 'n,m = [int(x) for x in stdin.readline().strip().split()]\n', 'sc_dict = {}\n', '\n', '# create dict\n', 'for _ in range(m):\n', '  s, c = [int(x) for x in stdin.readline().strip().split()]\n', '  if s in sc_dict.keys(): sc_dict[s].append(c)\n', '  else: sc_dict[s] = [c]\n', '    \n', '# get min\n', ""min_val = list(str(10**(n-1))) if n > 1 else ['0']\n"", 'for k, v in sc_dict.items():\n', '  if len(v) != 1 and len(set(v)) > 1:\n', ""    print('-1')\n"", '    exit()\n', '  min_val[k-1] = str(v[0])\n', '  \n', ""min_val = ''.join(min_val)\n"", 'if len(min_val) > 1 and int(min_val) == 0:\n', ""  print('-1')\n"", 'else:\n', ""  print(''.join(min_val))""]","['\n', 'def main():\n', '    n, m = map(int, input().split("" ""))\n', '    s = [0] * m\n', '    c = [0] * m\n', '    for i in range(m):\n', '        s[i], c[i] = map(int, input().split("" ""))\n', '    ans = [-1] * n\n', '    for i in range(m):\n', '        if ans[s[i]-1] != -1 and ans[s[i]-1] != c[i]:\n', '            print(-1)\n', '            return\n', '        ans[s[i]-1] = c[i]\n', '    if ans[0] == 0:\n', '        if n == 1:\n', '            print(0)\n', '            return\n', '        print(-1)\n', '        return\n', '    for i in range(n):\n', '        if ans[i] == -1:\n', '            if i == 0:\n', '                if n == 1:\n', '                    print(0)\n', '                    return\n', '                print(1, end="""")\n', '            else:\n', '                print(0, end = """")\n', '        else:\n', '            print(ans[i], end ="""")\n', '    print()\n', '    \n', '\n', 'if __name__ == ""__main__"":\n', '    main()']",1
"['n = int(input())\n', 's = list(map(int, input().split()))\n', 'c = 0\n', ""a = 'a'\n"", 'def merge(A, left, mid, right):\n', '    global c\n', '    L = A[left:mid]\n', '    R = A[mid:right]\n', '    L.append(10 ** 9)\n', '    R.append(10 ** 9)\n', '    i = 0\n', '    j = 0\n', '    for k in range(left, right):\n', '        c += 1\n', '        if L[i] <= R[j]:\n', '            A[k] = L[i]\n', '            i += 1\n', '        else:\n', '            A[k] = R[j]\n', '            j += 1\n', '\n', 'def mergesort(A, left, right):\n', '    if left+1 < right:\n', '        mid = (left+right)//2\n', '        mergesort(A, left, mid)\n', '        mergesort(A, mid, right)\n', '        merge(A, left, mid, right)\n', '\n', 'mergesort(s, 0, n)\n', '\n', 'for i in range(n-1):\n', ""    print(s[i], end=' ')\n"", 'print(s[n-1])\n', 'print(c)\n']","['cnt = 0\n', 'INF = pow(10, 18)\n', '\n', 'def merge(A, left, mid, right):\n', '    L = A[left:mid] + [INF]\n', '    R = A[mid:right] + [INF]\n', '    i = 0\n', '    j = 0\n', '    for k in range(left, right):\n', '        global cnt\n', '        cnt += 1\n', '        if L[i] <= R[j]:\n', '            A[k] = L[i]\n', '            i += 1\n', '        else:\n', '            A[k] = R[j]\n', '            j += 1\n', '\n', 'def mergeSort(A, left, right):\n', '    if left + 1 < right:\n', '        mid = (left + right) // 2\n', '        mergeSort(A, left, mid)\n', '        mergeSort(A, mid, right)\n', '        merge(A, left, mid, right)\n', '\n', 'n = int(input())\n', 's = list(map(int, input().split()))\n', 'mergeSort(s, 0, n)\n', 'print(*s)\n', 'print(cnt)\n']",1
"['N, K, S = map(int, input().split())\n', 'A = []\n', 'for i in range(K):\n', '    A.append(S)\n', '\n', 'if S != 10 ** 9:\n', '    res = S + 1\n', 'else:\n', '    res = 1\n', '\n', 'for j in range(N - K):\n', '    A.append(res)\n', 'print(*A)\n']","['N, K, S = map(int, input().split())\n', 'a = [str(S)] * K\n', '\n', 'if S == 10**9:\n', '    b = [str(1)] * (N-K)\n', 'else:\n', '    b = [str(S+1)] * (N-K)\n', 'ans = a + b\n', 'print(*ans)']",1
"['import math\n', 'a, b, x = map(int, input().split())\n', '\n', 'if x == a**2*b:\n', '  print(0)\n', '  \n', 'elif x >= a**2*b/2:\n', '  print(90 - math.degrees(math.atan(a**3/(2*a**2*b-2*x))))\n', 'else:\n', '  \n', '  print((90 - math.degrees(math.atan(2*x/(a*b**2)))))\n']","['import math\n', '\n', 'a,b,x = map(int,input().split())\n', 'if x <= a*a*b/2:\n', '  print(math.atan((a*b*b/2/x))*180/math.pi)\n', 'else:\n', '  print(math.atan((a*a*b-x)/(a**3)*2)*180/math.pi)']",1
"['#!/usr/bin/env python3\n', 'import collections as cl\n', 'import sys\n', '\n', '\n', 'def II():\n', '    return int(sys.stdin.readline())\n', '\n', '\n', 'def MI():\n', '    return map(int, input().split())\n', '\n', '\n', 'def LI():\n', '    return list(map(int, sys.stdin.readline().split()))\n', '\n', '\n', 'def main():\n', '    h, a = MI()\n', '\n', '    ans = h // a\n', '    if h % a != 0:\n', '        ans += 1\n', '    print(ans)\n', '\n', '\n', 'main()\n']","['import sys\n', 'from collections import defaultdict\n', 'readline = sys.stdin.buffer.readline\n', '\n', '\n', 'def geta(fn=lambda s: s.decode()):\n', '    return map(fn, readline().split())\n', '\n', '\n', 'def gete(fn=lambda s: s.decode()):\n', '    return fn(readline().rstrip())\n', '\n', '\n', '# sys.setrecursionlimit(10**5)\n', '\n', '\n', 'def main():\n', '    h, a = geta(int)\n', '\n', '    print((h + a - 1) // a)\n', '\n', '\n', 'if __name__ == ""__main__"":\n', '    main()']",1
"['x = int(input())\n', 'yen_500 = 0\n', 'yen_5 = 0\n', 'amari = 0\n', 'happy = 0\n', '\n', 'if x>= 500:\n', '    yen_500 = x//500\n', '    amari = x - 500 * yen_500\n', '    yen_5 = amari//5\n', '    happy = 1000 * yen_500 + 5 * yen_5\n', '    print(happy)\n', 'else:\n', '    yen_5 = x//5\n', '    happy = 5 * yen_5\n', '    print(happy)\n']","['X = int(input())\n', '\n', 'sum = 0\n', 'gohyakumai =X//500\n', '#print (gohyakumai)\n', 'sum = gohyakumai*1000\n', '#print (sum)\n', 'goenmai = (X%500)//5\n', '#print (goenmai)\n', 'sum = goenmai *5 +sum\n', '\n', 'print (sum)']",1
"['(r, c) = map(int, input().split())\n', 'a = [[v for v in list(map(int, input().split()))] for r in range(r)]\n', 'add_c = [sum(l) for l in a]\n', 'for i in range(r):\n', '    a[i].append(add_c[i])\n', 'add_r = [sum([a[i][j] for i in range(r)]) for j in range(c + 1)]\n', 'a.append(add_r)\n', 'for i in range(r + 1):\n', ""    print(' '.join(map(str, a[i])))""]","['r, c = map(int, input().split())\n', 'table = []\n', 'for i in range(r):\n', '    table.append(list(map(int, input().split())))\n', 'for i in table:\n', '    i.append(sum(i))\n', 'b = []\n', 'for i in range(c):\n', '    x = 0\n', '    for k in range(r):\n', '        x += table[k][i]\n', '    b.append(x)\n', 'b.append(sum(b))\n', 'for i in table:\n', '    print("" "".join(map(str, i)))\n', 'print("" "".join(map(str, b)))\n']",1
"['from collections import deque\n', '\n', 'k=int(input())\n', '\n', 'lunlun=deque(i for i in range(1,10))\n', 'for _ in range(k-1):\n', '  p=lunlun.popleft()\n', '  if p%10!=0:\n', '    lunlun.append(10*p+p%10-1)\n', '  lunlun.append(10*p+p%10)\n', '  if p%10!=9:\n', '    lunlun.append(10*p+p%10+1)\n', 'print(lunlun.popleft())']","['from collections import deque\n', '\n', '\n', 'def solver(K):\n', '    q = deque([i for i in range(1, 10)])\n', '\n', '    if K <= 9:\n', '        ans = q[K - 1]\n', '\n', '    else:\n', '        cnt = 9\n', '        for i in range(1, K):\n', '            c = q.popleft()\n', '\n', '            if c % 10 != 0:\n', '                q.append(c * 10 + (c % 10) - 1)\n', '                cnt += 1\n', '                if cnt >= K:\n', '                    break\n', '\n', '            q.append(c * 10 + (c % 10))\n', '            cnt += 1\n', '            if cnt >= K:\n', '                break\n', '\n', '            if c % 10 != 9:\n', '                q.append(c * 10 + (c % 10) + 1)\n', '                cnt += 1\n', '                if cnt >= K:\n', '                    break\n', '\n', '        ans = q[-1]\n', '    return ans\n', '\n', '\n', 'def run():\n', '    K = int(input())\n', '    ans = solver(K)\n', '\n', '    print(ans)\n', '\n', '\n', 'run()\n']",1
"['def gcd(a,b):\n', '    # assume a,b are +ve integers.\n', '    if a>b:\n', '        a,b = b,a\n', '    if b%a==0:\n', '        return a\n', '    \n', '    return gcd(a,b%a)\n', 'print(360//(gcd(360,int(input()))))']","['import math\n', 'y = int(input())\n', 'print(360//math.gcd(y,360))']",1
"['A, B = map(int,input().split())\n', 'def gcd(a,b):\n', '    if b == 0:\n', '        return a\n', '    return gcd(b,a%b)\n', 'def lcm(a,b):\n', '    return a*b//gcd(a,b)\n', 'print(lcm(A,B))\n']","['import math\n', '\n', 'a,b = map(int,input().split())\n', 'if b>a:\n', '    a,b = b,a\n', 'l = (a*b)//(math.gcd(a,b))\n', 'print(l)']",1
"[""A, B, N = [int(i) for i in input().split(' ')]\n"", '\n', 'if B > N:\n', '    x = N\n', 'else:\n', '    x = B - 1\n', '\n', 'm = int(A * x / B) - A * int(x / B)\n', '\n', 'print(m)']","['import math\n', '\n', 'A, B, N = [int(x) for x in input().split()]\n', 'count = min(B-1, N)\n', 'a = math.floor(float(A*count)/B) - A * math.floor(float(count)/B)\n', 'print(a)\n', '\n', '\n', '\n']",1
"['n = int(input())\n', 'lst = list(map(int, input().split()))\n', 'lst = sorted(lst, reverse = True)\n', 'summ = lst[0] + 2 * sum(lst[1:n//2])\n', 'if n % 2:\n', '    summ += lst[n//2]\n', 'print(summ)\n', '\n']","['from sys import stdin\n', 'import sys\n', 'import math\n', 'from functools import reduce\n', 'import functools\n', 'import itertools\n', 'from collections import deque,Counter,defaultdict\n', 'from operator import mul\n', 'import copy\n', '# ! /usr/bin/env python\n', '# -*- coding: utf-8 -*-\n', 'import heapq\n', 'sys.setrecursionlimit(10**6)\n', '# INF =  float(""inf"")\n', 'INF = 10**18\n', 'import bisect\n', 'import statistics\n', 'mod = 10**9+7\n', '# mod = 998244353\n', '\n', '\n', '\n', 'N = int(input())\n', '\n', 'A = list(map(int, input().split()))\n', '\n', 'A = sorted(A, reverse=True)\n', '\n', 'ans = A[0]\n', 'for i in range(N-2):\n', '    ans += A[i//2+1]\n', '\n', 'print(ans)\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n']",1
"['l = list(input())\n', 'a = False\n', 'b = False\n', 'c = False\n', '\n', '\n', ""if l[0] == 'R':\n"", '\ta = True\n', ""if l[1] == 'R':\n"", '\tb = True\n', ""if l[2] == 'R':\n"", '  \tc = True\n', '    \n', 'if a and b and c:\n', '  \tprint(3)\n', 'elif (a and b) or (b and c):\n', '  \tprint(2)\n', 'elif a or b or c:\n', '  \tprint(1)\n', 'else:\n', '  \tprint(0)']","['S = str(input())\n', 'count = 0\n', 'result = 0\n', 'for i in S:\n', ""  if i == 'R':\n"", '    count+=1\n', '    if count>result:\n', '      result = count\n', '  else:\n', '    count=0\n', 'print(result)\n']",1
"['a = [list(map(int,input().split())) for i in range(3)]\n', 'n = int(input())\n', 'b = [int(input()) for i in range(n)]\n', 'visited = [[False for i in range(3)] for j in range(3)]\n', 'for i in b:\n', '    for j in range(3):\n', '        for k in range(3):\n', '            if i==a[j][k]:\n', '                visited[j][k] = True\n', '\n', 'ans = ""No""\n', 'for i in visited:\n', '    if i==[True,True,True]:\n', '        ans = ""Yes""\n', '\n', 'for i in range(3):\n', '    flag = True\n', '    for j in range(3):\n', '        if visited[j][i]==False:\n', '            flag = False\n', '            break\n', '    if flag:\n', '        ans = ""Yes""\n', '\n', 'if visited[0][0] and visited[1][1] and visited[2][2]:\n', '    ans = ""Yes""\n', 'if visited[2][0] and visited[1][1] and visited[0][2]:\n', '    ans = ""Yes""\n', 'print(ans)']","['a = [list(map(int ,input().split())) for _ in range(3)]\n', 'n = int(input())\n', '\n', 'ans = [[0] * 3 for _ in range(3)]\n', '\n', 'for i in range(n):\n', '    b = int(input())\n', '    for j in range(3):\n', '        for k in range(3):\n', '            if a[j][k] ==  b:\n', '                ans[j][k] = 1\n', '\n', 'state = False\n', 'for i in range(3):\n', '    num = 0\n', '    for j in range(3):\n', '        num += ans[i][j]\n', '    \n', '    if num == 3:\n', '        state = True\n', '\n', 'for i in range(3):\n', '    num = 0\n', '    for j in range(3):\n', '        num += ans[j][i]\n', '    \n', '    if num == 3:\n', '        state = True\n', '\n', 'if ans[0][0] + ans[1][1] + ans[2][2] == 3:\n', '    state = True\n', '\n', 'if ans[0][2] + ans[1][1] + ans[2][0] == 3:\n', '    state = True\n', '\n', 'if state:\n', '    print(""Yes"")\n', 'else:\n', '    print(""No"")\n', '\n']",1
"['N,D = [int(i) for i in input().split()]\n', 'XY = []\n', 'count = 0\n', '\n', 'for i in range(N):\n', '  XY.append([int(i) for i in input().split()])\n', '\n', 'for xy in XY:\n', '  dd = xy[0]**2+xy[1]**2\n', '  if dd <= D**2:\n', '    count +=1\n', '\n', 'print(count)']","['#B問題\n', '\n', 'import math\n', '\n', 'distance = 0\n', 'ans = 0\n', 'n, d = map(int, input().split())\n', 'x = [input().split() for l in range(n)]\n', '\n', '#リストの中にリストがある時→A[i][j]のように表現\n', 'for i in range(n):\n', '    distance = math.sqrt(pow(int(x[i][0]),2)+pow(int(x[i][1]),2))\n', '    if distance <= d:\n', '        ans += 1\n', 'print(ans)']",1
"['n = int(input())\n', 'ans = (n + 1) * n // 2\n', 'for i in range(2, n + 1):\n', '    j = 1\n', '    while i * j <= n:\n', '        ans += i * j\n', '        j += 1\n', 'print(ans)\n']","['import sys\n', 'read = sys.stdin.readline\n', 'import time\n', 'import math\n', 'import itertools as it\n', 'def inpl():\n', '    return list(map(int, input().split()))\n', 'st = time.perf_counter()\n', '# ------------------------------\n', '\n', 'N = int(read())\n', 'ans = 0\n', 'for i in range(1, N+1):\n', '    n = N // i\n', '    ans += 0.5 * n * (2*i + i * (n-1))\n', 'print(int(ans))\n', '\n', '# ------------------------------\n', 'ed = time.perf_counter()\n', ""print('time:', ed-st, file=sys.stderr)\n""]",1
"[' \n', 'list = input().split()\n', ' \n', 'm1 = int(list[0])*60 + int(list[1])\n', 'm2 = int(list[2])*60 + int(list[3])\n', '#print(m1,m2)\n', '    \n', 'ans = m2 - m1\n', 'print(ans-int(list[4]))\n']","[""H_1, M_1, H_2, M_2, K = list(map(int, input().split(' ')))\n"", '\n', 'print((H_2-H_1)*60+(M_2-M_1)-K)']",1
"['a = int(input())\n', 'print(1-a)']","['a = int(input())\n', 'print(1 if a == 0 else 0)']",1
['import math;print(2**(int(math.log2(int(input())))+1)-1)'],"['H =int(input())\n', '\n', '#h= 1\n', '#while 2**(h+1) <= H:\n', '#    h += 1\n', '#\n', '#n=2**(h+1) - 1\n', '#print(n)\n', '#\n', 'import math\n', 'def helper(h):\n', '    if h ==1:\n', '        return 1\n', '    return 1 + 2 * helper(math.floor(h/2))\n', 'print(helper(H))']",1
"['def stack():\n', '    A = list(input().split())\n', '    lst = []\n', '    \n', '    def add(a, b):\n', '        return b + a\n', '    \n', '    def sub(a, b):\n', '        return b - a\n', '        \n', '    def mul(a, b):\n', '        return b * a\n', '    \n', '    def div(a, b):\n', '        return b / a\n', '        \n', '    def calc(lst, f):\n', '        return lst.append(f(lst.pop(), lst.pop()))\n', '    \n', '    for i in A:\n', ""        if i == '+':\n"", '            calc(lst, add)\n', ""        elif i == '-':\n"", '            calc(lst, sub)\n', ""        elif i == '*':\n"", '            calc(lst, mul)\n', ""        elif i == '/':\n"", '            calc(lst, div)\n', '        else: \n', '            lst.append(int(i))\n', '    \n', '    print(*lst)\n', '    \n', 'stack()']","['def reverse_polish_calculator(s):\n', '    """"""Calculate a reverse polish notation s.\n', '    + - * operators can be used in s. Only positive integer is\n', '    supported for operand.\n', '\n', '    >>> reverse_polish_calculator(""1 2 +"")\n', '    3\n', '    >>> reverse_polish_calculator(""1 2 + 3 4 - *"")\n', '    -3\n', '    """"""\n', '    def calc(val1, op, val2):\n', ""        if op == '+':\n"", '            return val1 + val2\n', ""        elif op == '-':\n"", '            return val1 - val2\n', ""        elif op == '*':\n"", '            return val1 * val2\n', '        else:\n', '            raise ValueError()\n', '\n', '    stack = []\n', '    for c in s.split():\n', '        if c.isnumeric():\n', '            stack.append(int(c))\n', '        else:\n', '            v2 = stack.pop()\n', '            v1 = stack.pop()\n', '            stack.append(calc(v1, c, v2))\n', '\n', '    return stack.pop()\n', '\n', '\n', 'def run():\n', '    s = input()\n', '    print(reverse_polish_calculator(s))\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    run()\n']",1
"['s = input()\n', ""dict_contest = {'ABC':'ARC', 'ARC':'ABC'}\n"", 'print(dict_contest.get(s))']","[""print({'ABC':'ARC', 'ARC':'ABC'}[input()])""]",1
"['X, N=map(int, input().split())\n', 'if N==0:print(X);exit()\n', 'p=sorted(list(map(int, input().split())))\n', '\n', 'm=X;i=0\n', 'for i in range(m,min(p)-2,-1):\n', '  if i not in p:break\n', 'M=X;j=0\n', 'for j in range(M,max(p)+2):\n', '  if j not in p:break\n', 'if abs(i-X)==abs(j-X):print(min(i,j))\n', 'elif abs(i-X)<abs(j-X):\n', '  print(i)\n', 'else:print(j)']","['X, N = list(map(int, input().split()))\n', 'p = list(map(int, input().split()))\n', 'integer = [i for i in range(102)]\n', 'for i in range(N):\n', '   integer.remove(p[i])\n', 'l = len(integer)\n', 'ans = -200\n', 'for i in range(l):\n', '   if abs(ans) > abs(integer[i]-X):\n', '      ans = integer[i] - X\n', 'print(ans + X)']",1
"['n,k = map(int,input().split())\n', 'a = list(map(int,input().split()))\n', '\n', 'l = 0\n', 'r = 10**10\n', '\n', 'while r > l + 1:\n', '    m = (r+l)//2\n', '    count = 0\n', '    for i in a:\n', '        if i <= m:\n', '            continue\n', '        count += (i)//m\n', '        \n', '    if count > k:\n', '        l = m\n', '    else:\n', '        r = m\n', '    \n', 'print(r)\n']","['N, K = map(int, input().split())\n', 'A = list(map(int, input().split()))\n', '\n', 'def is_ok(n):\n', '    cnt = 0\n', '    for a in A:\n', '        if n >= a:\n', '            continue\n', '        cnt += a // n\n', '    return cnt <= K\n', '\n', 'def meguru_bisect(ng, ok):\n', '    while (abs(ok - ng) > 1):\n', '        mid = (ok + ng) // 2\n', '        if is_ok(mid):\n', '            ok = mid\n', '        else:\n', '            ng = mid\n', '    return ok\n', '\n', 'print(meguru_bisect(0, 10**9+1))\n']",1
"['for j in range(1,10,1):\n', '    for k in range(1,10,1):\n', '        print(""{}x{}={}"".format(j,k,j*k))\n']","['def multi():\n', '    for i in range(1, 10):\n', '        for j in range(1, 10):\n', '            print(str(i) + ""x"" + str(j) + ""="" + str(i * j))\n', '\n', ""if __name__ == '__main__':\n"", '    multi()\n']",1
"['print(((1/3)*float(input("""")))**3)']","['L = float(input())\n', '\n', 'returnVal = (L/3)**3\n', 'print(returnVal)']",1
"['import sys\n', 'import math\n', 'def IL(): return map(int,sys.stdin.readline().rstrip().split())\n', '\n', 'def Main():\n', '    a,b,n = IL()\n', '    x = min(b-1,n)\n', '    print(math.floor(a*x/b)-a*math.floor(x/b))\n', '    return\n', '\n', ""if __name__=='__main__':\n"", '    Main()']","['import math\n', 'a, b, n = map(int, input().split())\n', 'x = min(b - 1, n)\n', 'ans = math.floor(a * x / b) - a * math.floor(x / b)\n', 'print(ans)']",1
"['n = int(raw_input())\n', '\n', 'for i in range(n):\n', '    a = map(int,raw_input().split())\n', '    a.sort()\n', '    if (a[0]**2 + a[1]**2) == a[2]**2:\n', '        print ""YES""\n', '    else:\n', '        print ""NO""']","['times = int(input())\n', '\n', 'for i in range(0, times):\n', '\tedge = []\n', '\tfor e in input().split("" ""):\n', '\t\tedge.append(int(e))\n', '\tedge.sort()\n', '\tif pow(int(edge[0]), 2) + pow(int(edge[1]), 2) == pow(int(edge[2]), 2):\n', '\t\tprint(""YES"")\n', '\telse:\n', '\t\tprint(""NO"")']",1
"['k=int(input())\n', 'from math import gcd\n', 'ans=0\n', 'for i in range(1,k+1):\n', '  for j in range(1,k+1):\n', '    temp=gcd(i,j)\n', '    for m in range(1,k+1):\n', '      ans=ans+gcd(temp,m)\n', 'print(ans)\n']","['import math\n', 'K = int(input())\n', 'ans = 0\n', '\n', 'for a in range(1, K+1):\n', '    for b in range(a, K+1):\n', '        for c in range(b, K+1):\n', '            s = math.gcd(a, b)\n', '            t = math.gcd(s, c)\n', '            if a == c:\n', '                ans += t\n', '            elif (a == b or b == c) and a != c:\n', '                ans += 3*t\n', '            else:\n', '                ans += 6*t\n', 'print(ans)']",1
"['X=int(input())\n', 'a=True\n', 'while a==True:\n', '    for i in range(-1000,1001):\n', '        for j in range(i,1001):\n', '            if j**5-i**5==X:\n', '                print(j,i)\n', '                exit()\n']","['# -*- coding: utf-8 -*-\n', 'X = int(input())\n', '\n', '# A**5 - (A-1)**5 = X = 10**9(Xの最大) となるAが\n', '# Aの最大値となる(それ以上Aが大きくなると、Xは上限値を超える)\n', '# → 最大となるAは120\n', '\n', 'for A in range(-120, 120 + 1):\n', '  for B in range(-120, 120):\n', '    if A**5 - B**5 == X:\n', '      print(""{} {}"".format(A, B))\n', '      exit()']",1
"['a=int(input())\n', 'hours=a//3600\n', 'minutes_num=a%3600\n', 'minutes=minutes_num//60\n', 'seconds=a%60\n', 'print(str(hours)+"":""+str(minutes)+"":""+str(seconds))\n', '\n']","['sec=int(input())\n', 'print("":"".join(map(str, [int(sec/3600), int(sec/60)%60, sec%60])))']",1
"['import sys\n', 'input = lambda: sys.stdin.readline().rstrip()\n', '\n', 'n = int(input())\n', 'a = [int(x) for x in input().split()]\n', '\n', 'from itertools import accumulate\n', '\n', 'a_csum = list(accumulate(a))\n', '\n', 'ans = 10**10\n', '\n', 'for i in range(n - 1):\n', '    ans = min(ans, abs(a_csum[i] - (a_csum[-1] - a_csum[i])))\n', '\n', 'print(ans)']","['n = int(input())\n', 'a = list(map(int,input().split()))\n', 's = sum(a)\n', 'x = 0\n', 'm = s\n', 'for i in range(n):\n', '    x += a[i]\n', '    m = min(m, abs(s-x*2))\n', 'print(m)\n']",1
"['# -*- coding: utf-8 -*-\n', 'X = int(input())\n', '\n', '# A**5 - (A-1)**5 = X = 10**9(Xの最大) となるAが\n', '# Aの最大値となる(それ以上Aが大きくなると、Xは上限値を超える)\n', '# → 最大となるAは120\n', '\n', 'for A in range(-120, 120 + 1):\n', '  for B in range(-120, 120):\n', '    if A**5 - B**5 == X:\n', '      print(""{} {}"".format(A, B))\n', '      exit()']","['x=int(input())\n', 'for a in range(-200,200,1):\n', '    for b in range(-200,200,1):\n', '        if a**5 - b**5 == x:\n', '            print(a,b)\n', '            exit()']",1
"['#Union-Find木の実装\n', 'from collections import Counter\n', 'N,M=map(int,input().split())\n', ' \n', '#初期化\n', 'par=[i for i in range(N)]#親の要素(par[x]=xのときxは木の根)\n', 'rank=[0]*N#木の深さ\n', ' \n', '#木の根を求める\n', 'def find(x):\n', '  #xが根だった場合xをそのまま返す\n', '  if par[x] == x:\n', '    return x\n', '  else:\n', '    #根が出るまで再帰する\n', '    par[x] = find(par[x])\n', '    return par[x]\n', ' \n', '#xとyの属する集合を併合\n', 'def unite(x,y):\n', '  x=find(x)#xの根\n', '  y=find(y)#yの根\n', '  #根が同じなら何もしない\n', '  if x == y:\n', '    return\n', '  #もし根の深さがyの方が深いなら\n', '  if rank[x] < rank[y]:\n', '    par[x] = y#yを根にする\n', '  else:\n', '    par[y] = x#xを根にする\n', '    if rank[x] == rank[y]:\n', '      rank[x]+=1\n', ' \n', '#xとyが同じ集合に属するか否か\n', '#def same(x,y):\n', '  #return find(x)==find(y)\n', ' \n', 'for _ in range(M):\n', '  a,b = map(int,input().split())\n', '  a,b = a-1, b-1\n', '  unite(a,b)\n', ' \n', 'for i in range(N):\n', '  find(i)\n', 'c=Counter(par)\n', 'print(len(c)-1)']","['import sys\n', 'sys.setrecursionlimit(10**9)\n', 'input = sys.stdin.readline\n', '\n', 'from collections import defaultdict\n', '\n', 'n,m=map(int,input().split())\n', 'visited=[0]*n\n', 'd=defaultdict(list)\n', 'def dfs(n):\n', '    visited[n]=1\n', '    #print(visited)\n', '    for i in d[n]:\n', '        if visited[i]==0:\n', '            dfs(i)\n', '\n', 'for i in range(m):\n', '    a,b=map(int,input().split())\n', '    a,b=a-1,b-1\n', '    d[a].append(b)\n', '    d[b].append(a)\n', '\n', 'r=-1\n', 'for i in range (n):\n', '    if visited[i]==0:\n', '        dfs(i)\n', '        r+=1\n', 'print(r)']",1
"['R, C, K = map(int, input().split())\n', 'goods = [[0] * C for _ in range(R)]\n', 'for _ in range(K):\n', '    r, c, v = map(int, input().split())\n', '    goods[r-1][c-1] = v\n', '\n', 'dp = [[[0] * C for _ in range(4)] for _ in range(R)]\n', 'dp[0][1][0] = goods[0][0]\n', 'for i in range(R):\n', '    for j in range(4):\n', '        for k in range(C):\n', '            if i < R - 1:\n', '                dp[i+1][0][k] = max(dp[i+1][0][k], dp[i][j][k])\n', '                dp[i+1][1][k] = max(dp[i+1][1][k], dp[i][j][k] + goods[i+1][k])\n', '        \n', '            if k < C - 1:\n', '                dp[i][j][k+1] = max(dp[i][j][k+1], dp[i][j][k])\n', '                if j < 3:\n', '                    dp[i][j+1][k+1] = max(dp[i][j+1][k+1], dp[i][j][k] + goods[i][k+1])\n', '\n', 'res = 0\n', 'for i in range(4):\n', '    res = max(res, dp[R-1][i][C-1])\n', '\n', 'print(res)']","['H,W,k = map(int, input().split())\n', '# アイテムが何処に何個あるか\n', 'fs = [[0]*(W+1) for i in range(H+1)]\n', 'for i in range(k):\n', '    h, w, v = map(int, input().split())\n', '    h -= 1\n', '    w -= 1\n', '    fs[h][w] = v\n', '\n', 'mvs = [(0,1),(1,0)]\n', 'dp = [[[-1<<50 for i in range(W+1)] for j in range(H+1)] for k in range(4)]\n', '# dp[n][i][j] n個取ったときの、i,jにおけるアイテム価値の最大値\n', 'from collections import deque\n', 'q = deque([])\n', 'q.append((0,0))\n', 'dp[0][0][0] = 0\n', 'dp[1][0][0] = fs[0][0]\n', 'for h in range(H):\n', '    for w in range(W):\n', '        dp[0][h][w+1] = max(dp[0][h][w+1], dp[0][h][w])\n', '        dp[1][h][w+1] = max(dp[1][h][w+1], dp[1][h][w], dp[0][h][w] + fs[h][w+1])\n', '        dp[2][h][w+1] = max(dp[2][h][w+1], dp[2][h][w], dp[1][h][w] + fs[h][w+1])\n', '        dp[3][h][w+1] = max(dp[3][h][w+1], dp[3][h][w], dp[2][h][w] + fs[h][w+1])\n', '    for w in range(W):\n', '        mx = 0\n', '        for i in range(4):\n', '            # print(""fe"",i,h,w,""dp"",dp[i][h][w])\n', '            mx = max(mx,dp[i][h][w])\n', '        dp[0][h+1][w] = mx\n', '        dp[1][h+1][w] = mx + fs[h+1][w]\n', '\n', 'H -= 1\n', 'W -= 1\n', 'ans0 = dp[0][H][W]\n', 'ans1 = dp[1][H][W]\n', 'ans2 = dp[2][H][W]\n', 'ans3 = dp[3][H][W]\n', '# print(fs)\n', '# for i in range(3):\n', '#     d = dp[i]\n', '#     for r in d:\n', '#         print(*r)\n', '#     print(""----------"")\n', 'print(max(ans1,ans2,ans3))']",1
"['import numpy as np\n', 'n = int(input())\n', 'a = list(map(int,input().split()))\n', '\n', 'dp = np.zeros((n+1,2), int)\n', 'dp[1],dp[2] = [0,a[0]], [0,max(a[0], a[1])]\n', 'for i in range(3,n+1):\n', '  if(i%2 == 0):\n', '    dp[i][0] = max(dp[i-1][0],dp[i-2][0]+a[i-1],dp[i-2][1])\n', '    dp[i][1] = max(dp[i-1][1],dp[i-2][1]+a[i-1])\n', '  else:\n', '    dp[i][0] = max(dp[i-1][1],dp[i-2][1],dp[i-2][0]+a[i-1])\n', '    dp[i][1] = dp[i-2][1]+a[i-1]\n', 'print(dp[n][(n+1)%2])']","['from sys import stdin, stdout\n', 'def main():\n', '    N = int(stdin.readline())\n', '    A = [0] + list(map(int, stdin.readline().rstrip().split()))\n', '    dp = [0] * (N+1)\n', '    prefix = [0] * (N+1)\n', '    dp[1], prefix[1] = 0, A[1]\n', '    for i in range(3, N, 2):\n', '        prefix[i] = prefix[i-2]+A[i]\n', '    for i in range(2, N+1):\n', '        if i & 1:\n', '            dp[i] = max(dp[i-1], A[i] + dp[i-2])\n', '        else:\n', '            dp[i] = max(dp[i-2] + A[i], prefix[i-1])\n', '    \n', '    stdout.write(str(dp[N])+""\\n"")\n', 'main()\n']",1
"['import sys\n', 'import heapq, math\n', 'from itertools import zip_longest, permutations, combinations, combinations_with_replacement\n', 'from itertools import accumulate, dropwhile, takewhile, groupby\n', 'from functools import lru_cache\n', 'from copy import deepcopy\n', '\n', 'A, B = map(int, input().split())\n', '\n', 'print(max(0, A - 2 * B))']","['import sys\n', 'input = sys.stdin.readline\n', '\n', 'a, b = [int(x) for x in input().split()]\n', 'if 2*b >= a:\n', '    print(0)\n', 'else:\n', '    print(a - 2*b)']",1
"['def main():\n', '    from bisect import bisect_left as bl\n', '    from itertools import accumulate as ac\n', '\n', '    n, m = map(int, input().split())\n', '    a = list(map(int, input().split()))\n', '    a.sort()\n', '    aa = [0]+list(ac(a))\n', '    an = aa[n]\n', '\n', '    ok = 0\n', '    ng = 10**10\n', '    while abs(ok-ng) > 1:\n', '        mid = (ok+ng)//2\n', '        if sum([n-bl(a, mid-a[i]) for i in range(n)]) >= m:\n', '            ok = mid\n', '        else:\n', '            ng = mid\n', '\n', '    c = -m+sum([n-bl(a, ok-a[i]) for i in range(n)])\n', '    ans = -c*ok\n', '    for i in range(n):\n', '        d = bl(a, ok-a[i])\n', '        ans += an-aa[d]+(n-d)*a[i]\n', '    print(ans)\n', '\n', '\n', 'main()']","['#Eans\n', '\n', 'import sys, math, itertools, collections, bisect\n', ""mans = float('inf')\n"", 'mod = 10 **9 +7\n', 'ans = 0\n', 'count = 0\n', 'pro = 0\n', '\n', 'N, M = map(int, input().split())\n', 'A = sorted(map(int, input().split()))\n', 'B = [0] + A[:]\n', 'for i in range(N):\n', '  B [i+1] += B[i]\n', '\n', ""#print('A', A)\n"", ""#print('B', B)\n"", 'def solve_binary(mid):\n', '  tmp = 0\n', '  for i, ai in enumerate(A):\n', '    tmp += N - bisect.bisect_left(A, mid-ai)\n', '    #bisect.bisect_left(A, mid-ai)はaiに固定した時の、もう片方の最小の値のインデックス\n', '    #tmpは、aiに固定した時のありうる個数（M)\n', '  return tmp >= M\n', '\n', 'def binary_search(N):\n', '  ok = 0\n', '  ng = N\n', '  while abs(ok - ng ) > 1:\n', '    mid = (ok + ng) // 2\n', '    if solve_binary(mid):\n', '      ok = mid\n', '    else:\n', '      ng = mid\n', '  return ok\n', '\n', '\n', 'binresult = binary_search(2*10**5+1)\n', '#Xを二分探索で得る\n', '#binresult=ok\n', '#print(binresult)\n', 'for i, ai in enumerate(A):\n', '  ans += ai*(N - bisect.bisect_left(A, binresult-ai)) + B[N] - B[bisect.bisect_left(A, binresult-ai)]\n', ""  #print(ans, '=', ai, '*', N-bisect.bisect_left(A, binresult-ai), '+', B[N], '-', B[bisect.bisect_left(A, binresult-ai\n"", '  count += N - bisect.bisect_left(A, binresult-ai)\n', 'ans -= binresult * (count-M)\n', 'print(ans)']",1
"['#!/usr/bin/python3\n', ' \n', 'cmdvar_numlist=input()\n', 'cmdvar_spritd=cmdvar_numlist.split()\n', 'D,T,S=list(map(int,cmdvar_spritd))\n', '\n', 'if D/S<=T:\n', '    print(""Yes"")\n', 'else:\n', '    print(""No"")']","['d,t,s=map(int,input().split())\n', 'print(""YNeos""[s*t<d::2])']",1
"['D=int(input())\n', 'C=list(map(int, input().split()))\n', 'S=[list(map(int,input().split())) for i in range(D)]\n', '\n', 'T=[]\n', 'for i in range(D):\n', '  T.append(int(input()))\n', '\n', 'def dissat(day):\n', '  dissat = 0\n', '  for i in range(26):\n', '    if T[day-1]-1 == i:\n', '      continue\n', '    dissat += C[i]*(day-lastdays[i])\n', '\n', '  return dissat    \n', '    \n', 'def last(day):\n', '  lastdays[T[day-1]-1] = day\n', '\n', 'sat = 0\n', 'lastdays = [0]*26\n', '\n', '# main\n', 'for i in range(D):\n', '  # dayi\n', '  last(i)\n', '  sat += S[i][T[i]-1] - dissat(i+1)\n', '  print(sat)\n']","['#Scoring\n', 'import numpy as np\n', 'D = int(input())\n', 'C = np.array(list(map(int, input().split())))\n', 'S = np.zeros((D,26),int)\n', 'for i in range(D):\n', '    S[i] = list(map(int, input().split()))\n', '\n', 't = np.zeros(D,int)\n', 'for i in range(D):\n', '    t[i] = int(input())\n', '\n', 'score = int(0)\n', 'ld = -np.ones(26,int)\n', 'tscore = np.zeros(26,int)\n', 'for i in range(D):\n', '    cid = t[i]-1\n', '    ld[cid] = i\n', '    score -= np.sum(C*(i-ld))\n', '    score += S[i,cid]\n', '    print(score)\n']",1
"['# Common Raccoon vs Monster\n', 'H, N = map(int,input().split())\n', 'A = list(map(int, input().split()))\n', ""ans = ['No', 'Yes'][sum(A) >= H]\n"", 'print(ans)']","['h, n = map(int, input().split())\n', ""print('No' if sum(list(map(int, input().split())))<h else 'Yes')""]",1
"['n=int(input())\n', 'a=list(map(int,input().split()))\n', 'q=int(input())\n', 'b,c=[],[]\n', 'for _ in range(q):\n', '  bi,ci=map(int,input().split())\n', '  b.append(bi)\n', '  c.append(ci)\n', 'number=[0 for i in range(10**5+1)]\n', 'for i in range(n):\n', '  number[a[i]]+=1\n', 's=sum(a)\n', 'for i in range(q):\n', '  s+=(c[i]-b[i])*number[b[i]]\n', '  number[c[i]]+=number[b[i]]\n', '  number[b[i]]=0\n', '  print(s)']","[""'''\n"", '参考\n', 'https://drken1215.hatenablog.com/entry/2020/06/21/224900\n', ""'''\n"", 'N = int(input())\n', 'A = list(map(int, input().split()))\n', '\n', 'INF = 10 ** 5\n', 'cnt = [0] * (INF+1)\n', '\n', 'Q = int(input())\n', 'BC = []\n', '\n', 'for _ in range(Q):\n', '    BC.append(list(map(int, input().split())))\n', '\n', 'for a in A:\n', '    cnt[a] += 1\n', '\n', 'total = sum(A)\n', '\n', 'for b, c in BC:\n', '    total += (c-b) * cnt[b]\n', '    cnt[c] += cnt[b]\n', '    cnt[b] = 0\n', '    print(total)\n']",1
"['""""""\n', '○ 角速度 = θ / t [rad/s]\n', '・時針\n', 'ω = θ / t\n', '  = math.radians(360) / (12 * 60 * 60) [rad/s]\n', '・分針\n', 'ω = θ / t\n', '  = math.radians(360) / (60 * 60) [rad/s]\n', '""""""\n', '\n', 'import math\n', '\n', 'def colon():\n', '    # 入力\n', '    A, B, H, M = map(int, input().split())\n', '    # 時針と分針の角速度\n', '    angular_velocity_h = math.radians(360) / (12 * 60 * 60)\n', '    angular_velocity_m = math.radians(360) / (60 * 60)\n', '    # 0時を基準に時針が何度傾いたか\n', '    radian_h = angular_velocity_h * ((H * 60 * 60) + (M * 60))\n', '    # 0時を基準に分針が何度傾いたか\n', '    radian_m = angular_velocity_m * (M * 60)\n', '    # 時針と分針の間の角度\n', '    radian_hm = abs(radian_h - radian_m)\n', '    if radian_hm > math.pi:\n', '        radian_hm = 2 * math.pi - radian_hm\n', '    elif radian_hm == math.pi:\n', '        return A + B\n', '    elif math.pi > radian_hm:\n', '        pass\n', '    # 端点の距離\n', '    distance = math.sqrt((A**2 + B**2) - (2 * A * B * math.cos(radian_hm)))\n', '    # 戻り値\n', '    return distance\n', '\n', 'result = colon()\n', 'print(result)']","['import math\n', '\n', 'A, B, H, M = map(int, input().split())\n', '\n', 'c = math.cos(math.radians(360 - abs(30 * H + 0.5 * M - 6 * M)))\n', 'X_2 = A ** 2 + B ** 2 - 2 * A * B * c\n', 'X = math.sqrt(X_2)\n', '\n', 'print(X)']",1
"['from logging import *\n', ""basicConfig(level=DEBUG, format='%(levelname)s: %(message)s')\n"", 'disable(CRITICAL)\n', '\n', 'MOD = 10**9 + 7\n', 'INF = MOD\n', 'def mmul(a, b): return a*b%MOD\n', '\n', 'n, k = map(int, input().split())\n', 'A = [*map(int, input().split())]\n', 'P, M = [], [] # plus, minus\n', 'for a in A:\n', '    if a < 0: M.append(a)\n', '    else: P.append(a)\n', '\n', ""debug('A {}'.format(sorted(A, reverse=True, key=lambda x:abs(x))))\n"", '\n', '\n', 'def mix():\n', '    len_p = len(P); len_m = len(M)\n', '\n', '    P.sort(reverse=True); M.sort()\n', '    P.append(-1); M.append( 1) # add endpoint\n', '\n', ""    debug('P {}'.format(P));debug('M {}'.format(M))\n"", '\n', '    pa, ma = [], []\n', '    while len(pa) + len(ma) < k:\n', '        if P[len(pa)] < -M[len(ma)]: ma.append(M[len(ma)])\n', '        else: pa.append(P[len(pa)])\n', '\n', ""    debug('pa {}'.format(pa));debug('ma {}'.format(ma))\n"", '    if len(ma)%2 == 0: return pa + ma\n', '\n', '    exist_pa = len(pa) > 0; exist_ma = len(ma) > 0\n', '    remain_p = len_p - len(pa) > 0; remain_m = len_m - len(ma) > 0\n', ""    debug('exist_pa {}'.format(exist_pa));debug('exist_ma {}'.format(exist_ma))\n"", ""    debug('remain_p {}'.format(remain_p));debug('remain_m {}'.format(remain_m))\n"", '\n', '    if exist_pa & exist_ma & remain_p & remain_m:\n', '        p_in = pa[-1]; p_out = P[len(pa)]\n', '        m_in = ma[-1]; m_out = M[len(ma)]\n', '        if abs(p_in*p_out) < abs(m_in*m_out): pa.pop(); ma.append(m_out)\n', '        else: ma.pop(); pa.append(p_out)\n', ""        debug('pa {}'.format(pa));debug('ma {}'.format(ma))\n"", '        return pa + ma\n', '\n', '    # if (not exist_pa) & exist_ma & remain_p & (not remain_m):\n', '    # if exist_ma & remain_p & (not remain_m):\n', '    if exist_ma & remain_p:\n', '        m_in = ma[-1]; p_out = P[len(pa)]\n', '        ma.pop(); pa.append(p_out)\n', ""        debug('pa {}'.format(pa));debug('ma {}'.format(ma))\n"", '        return pa + ma\n', '\n', '    # if exist_pa & (not exist_ma) & (not remain_p) & remain_m:\n', '    # if exist_pa & (not remain_p) & remain_m:\n', '    if exist_pa & remain_m:\n', '        p_in = pa[-1]; m_out = M[len(ma)]\n', '        pa.pop(); ma.append(m_out)\n', ""        debug('pa {}'.format(pa));debug('ma {}'.format(ma))\n"", '        return pa + ma\n', '\n', '    # --------------------------------\n', '    P.pop(); M.pop()\n', '\n', '    P.sort(); M.sort(reverse=True)\n', '    P.append(-1); M.append( 1) # add endpoint\n', ""    debug('---')\n"", ""    debug('P {}'.format(P));debug('M {}'.format(M))\n"", '\n', '    pa, ma = [], []\n', '    while len(pa) + len(ma) < k:\n', '        if P[len(pa)] >= -M[len(ma)]: ma.append(M[len(ma)])\n', '        else: pa.append(P[len(pa)])\n', '\n', ""    debug('pa {}'.format(pa));debug('ma {}'.format(ma))\n"", '    if len(ma)%2 == 1: return pa + ma\n', '\n', '    exist_pa = len(pa) > 0; exist_ma = len(ma) > 0\n', '    remain_p = len_p - len(pa) > 0; remain_m = len_m - len(ma) > 0\n', ""    debug('exist_pa {}'.format(exist_pa));debug('exist_ma {}'.format(exist_ma))\n"", ""    debug('remain_p {}'.format(remain_p));debug('remain_m {}'.format(remain_m))\n"", '\n', '    if exist_pa & exist_ma & remain_p & remain_m:\n', '        p_in = pa[-1]; p_out = P[len(pa)]\n', '        m_in = ma[-1]; m_out = M[len(ma)]\n', '        if abs(p_in*p_out) >= abs(m_in*m_out): pa.pop(); ma.append(m_out)\n', '        else: ma.pop(); pa.append(p_out)\n', ""        debug('pa {}'.format(pa));debug('ma {}'.format(ma))\n"", '        return pa + ma\n', '\n', '    # if (not exist_pa) & exist_ma & remain_p & (not remain_m):\n', '    if exist_ma & remain_p:\n', '        m_in = ma[-1]; p_out = P[len(pa)]\n', '        ma.pop(); pa.append(p_out)\n', ""        debug('pa {}'.format(pa));debug('ma {}'.format(ma))\n"", '        return pa + ma\n', '\n', '    # if exist_pa & (not exist_ma) & (not remain_p) & remain_m:\n', '    if exist_pa & remain_m:\n', '        p_in = pa[-1]; m_out = M[len(ma)]\n', '        pa.pop(); ma.append(m_out)\n', ""        debug('pa {}'.format(pa));debug('ma {}'.format(ma))\n"", '        return pa + ma\n', '\n', '    # return [0]\n', '    return pa + ma\n', '\n', '\n', 'ans = 1\n', 'if k==n:\n', ""    debug('k==n: {} == {} '.format(k,n))\n"", ""    debug('A {}'.format(A))\n"", '    for a in A: ans = mmul(ans, a)\n', 'else:\n', ""    debug('k<n: {} < {} '.format(k,n))\n"", '    if len(P) == n:\n', ""        debug('n({}) all plus({})'.format(n,len(P)))\n"", '        P.sort(reverse=True)\n', ""        debug('P[:k] {}'.format(P[:k]))\n"", '        for a in P[:k]: ans = mmul(ans, a)\n', '    elif len(M) == n:\n', ""        debug('n({}) all minus({})'.format(n,len(M)))\n"", '        if k%2:\n', ""            debug('k({}) is odd ({})'.format(k,k%2))\n"", '            M.sort(reverse=True)\n', '        else:\n', ""            debug('k({}) is even ({})'.format(k,k%2))\n"", '            M.sort()\n', ""        debug('M[:k] {}'.format(M[:k]))\n"", '        for a in M[:k]: ans = mmul(ans, a)\n', '    else:\n', ""        debug('n({}) mix plus({}):minus({})'.format(n,len(P),len(M)))\n"", '        for a in mix(): ans = mmul(ans, a)\n', '\n', 'ans += MOD; ans %= MOD\n', ""debug('ans {}'.format(ans))\n"", 'print(ans)\n']","['MOD = 10**9+7\n', 'N,K = map(int, input().split())\n', 'A = list(map(int, input().split()))\n', '\n', 'A.sort(reverse = True)\n', 'ans = 1\n', 'if A[-1] >= 0:\n', '    for i in range(K):\n', '        ans *= A[i]\n', '        ans %= MOD\n', 'elif A[0] < 0:\n', '    if K % 2 == 0:\n', '        for i in range(K):\n', '            ans *= A[N-1-i]\n', '            ans %= MOD\n', '    else:\n', '        for i in range(K):\n', '            ans *= A[i]\n', '            ans %= MOD\n', 'else:\n', '    r,l = N-1,0\n', '    n = 0\n', '    while n < K:\n', '        if K-n == 1:\n', '            ans *= A[l]\n', '            ans %= MOD\n', '            n += 1\n', '        else:\n', '            if A[r]*A[r-1] > A[l]*A[l+1]:\n', '                ans *= (A[r]*A[r-1])\n', '                ans %= MOD\n', '                r -= 2\n', '                n += 2\n', '            else:\n', '                ans *= A[l]\n', '                ans %= MOD\n', '                l += 1\n', '                n += 1\n', 'print(ans)\n']",1
"[""'''\n"", 'Created on 2020/08/20\n', '\n', '@author: harurun\n', ""'''\n"", 'def main():\n', '  import sys\n', '  pin=sys.stdin.readline\n', '  pout=sys.stdout.write\n', '  perr=sys.stderr.write\n', '  \n', '  H=int(pin())\n', '  W=int(pin())\n', '  N=int(pin())\n', '  t=max(H,W)\n', '  if N%t==0:\n', '    print(N//t)\n', '  else:\n', '    print(N//t+1)\n', '  return \n', '\n', 'main()']","['H=int(input())\n', 'W=int(input())\n', 'N=int(input())\n', '\n', 'cnt=0\n', 'black=0\n', 'if H>=W:\n', '  for i in range(W):\n', '    black+=H\n', '    cnt+=1\n', '    if black>=N:\n', '      break\n', 'elif H<W:\n', '  for i in range(H):\n', '    black+=W\n', '    cnt+=1\n', '    if black>=N:\n', '      break\n', 'print(cnt)']",1
"['A,B = input().split()\n', 'print((int(A)*round(100*float(B)))//100)']","['a,b=map(str,input().split())\n', 'a=int(a)\n', 'b=100*int(b[0])+10*int(b[2])+1*int(b[3]) #bを100倍した値(整数)に直す\n', 'print((a*b)//100)']",1
"['N,M = map(int,input().split())\n', 'H = list(map(int,input().split()))\n', 'H.insert(0,0)\n', 'S = set()\n', '\n', 'for m in range(M):\n', '  A,B = map(int,input().split())\n', '  if H[A]<=H[B]:\n', '    S.add(A)\n', '  if H[A]>=H[B]:\n', '    S.add(B)\n', '\n', 'print(N-len(S))']","[' #12716015\n', '\n', 'n, m = map(int, input().split())\n', 'h = list(map(int, input().split()))\n', 'ans = [1]*n\n', 'for i in range(m):\n', '  a, b= map(int, input().split())\n', '  a -= 1\n', '  b -= 1\n', '  if h[a] > h[b]:\n', '    ans[b] = 0\n', '  elif h[a] < h[b]:\n', '    ans[a] = 0\n', '  if h[a] == h[b]:\n', '    ans[a] = 0\n', '    ans[b] = 0\n', 'print(ans.count(1))']",1
"['import sys\n', '\n', ""alpha = 'abcdefghijklmnopqrstuvwxyz'\n"", 'dic = {c:0 for c in alpha}\n', '\n', 't = sys.stdin.read()\n', '\n', 'for s in t:\n', '    s = s.lower()\n', '    if s in alpha:\n', '        dic[s] += 1\n', '\n', 'for i in sorted(dic):\n', '    print(""{} : {}"".format(i,dic[i]))']","[""s1 = ''\n"", 'try:\n', '    while True:\n', '        t = input()\n', ""        if t == '':\n"", '            break\n', '        s1 += t\n', 'except EOFError:\n', '    pass\n', '\n', 'n = [0] * 26\n', 's = s1.lower()\n', 'for i in range(len(s)):\n', '    j = ord(s[i]) - 97\n', '    if j >= 0 and j < 26:\n', '        n[j] += 1\n', 'for i in range(26):\n', ""    print('%s : %d' %(chr(i + 97),n[i]))\n""]",1
"['import fractions, sys\n', 'input = sys.stdin.buffer.readline\n', '\n', '\n', 'def lcm(x, y):\n', '    return (x * y) // fractions.gcd(x, y)\n', '\n', '\n', 'def calc(n, m):\n', '    for i in range(cycle//m+1):\n', '        X = m * (i + 0.5)\n', '        if X > M:\n', '            print(0)\n', '            exit()\n', '            return\n', '        flag = True\n', '        for x in n:\n', '            if (X - x // 2) % x != 0:\n', '                flag = False\n', '                break\n', '        if flag:\n', '            return int(X)\n', '    print(0)\n', '    exit()\n', '    return\n', '\n', '\n', 'N, M = map(int, input().split())\n', 'A = list(map(int, input().split()))\n', 'cycle = 1\n', 'ma = 0\n', 'for a in A:\n', '    cycle = lcm(cycle, a)\n', '    ma = max(ma, a)\n', 'start = calc(A, ma)\n', '\n', 'print((M - start) // cycle + 1)\n', '\n']","['from fractions import gcd\n', 'n,m=map(int,input().split())\n', '*a,=map(int,input().split())\n', '\n', 'g=a[0]\n', 'lcm=a[0]\n', '\n', 'for i in range(1,n):\n', '    g=gcd(lcm,a[i])\n', '    lcm*=a[i]\n', '    lcm//=g\n', '\n', 'for i in range(n):\n', '    if lcm//a[i]%2==0:\n', '        print(0)\n', '        exit(0)\n', '\n', 'print((2*m//lcm+1)//2)']",1
"['\n', 'n,x,t = map(int,input().split())\n', '\n', 'if n % x ==0:\n', '    print(int(n/x*t))\n', 'else:\n', '    print(int((n//x+1)*t))\n', '\n']","['n,x,t=[int(i) for i in input().split()]\n', 'k=n//x\n', 'if n%x:\n', '    print((k+1)*t)\n', 'else:\n', '    print(k*t)']",1
"['N = int(input())\n', 'd = list(map(int, input().split()))\n', 'ans = 0\n', 'for i in range(N):\n', '    for j in range(N-1):\n', '        if i == j:\n', '            break\n', '        else:\n', '            ans = ans + d[i]*d[j]\n', 'print(ans)\n']","['n=int(input())\n', 'd = list(map(int,input().split()))\n', 'import itertools\n', 'p = itertools.combinations(d, 2)\n', 's=0\n', 'for v in p:\n', '    s+=v[0]*v[1]\n', 'print(s)']",1
"['n = int(raw_input())\n', 'a = map(int,raw_input().split())\n', 'a.reverse()\n', 'for x in a:\n', '\tprint x,']","['n=int(input())\n', 'num_line=list(map(int,input().split()))\n', 'num_line.reverse()\n', 'print("" "".join(map(str,num_line)))\n', '\n']",1
"['MOD = 1000000007\n', 'n, k = map(int, input().split())\n', 'rsw = [0]*(n+2)\n', 'for i in range(1,n+2):\n', '    rsw[i] = (rsw[i-1]+i-1)%MOD\n', 'rsw_e = [0]*(n+2)\n', 'for i in range(1,n+2):\n', '    rsw_e[i] = (rsw_e[i-1]+n-(i-1))%MOD\n', 'res = 0\n', 'for i in range(k,n+2):\n', '    start = rsw[i]\n', '    end = rsw_e[i]\n', '    res += (end-start+1)%MOD\n', 'print(res%MOD)']","['import math\n', '\n', 'N,K=map(int,input().split())\n', '\n', '\n', 'sum=0\n', 'for s in range(K,N+1):\n', '    sum+=(s*(2*N-s+1))/2-(s*(s-1))/2+1\n', 'print(int(sum+1)%1000000007)']",1
"['st = input().split()\n', 'st.reverse()\n', ""print(''.join(st))""]","['# -*- coding: utf-8 -*-\n', '""""""\n', 'Created on Wed Mar 11 14:47:11 2020\n', '\n', '@author: Kanaru Sato\n', '""""""\n', '\n', 's,t = input().split()\n', '\n', 'u = t+s\n', '\n', 'print(u)']",1
"['_n = int(raw_input())\n', '_a = [int(x) for x in raw_input().split()]\n', '\n', 'for i in range(1, _n):\n', '    print("" "".join([str(x) for x in _a]))\n', '    key = _a[i]\n', '    j = i - 1\n', '    while j >= 0 and _a[j] > key:\n', '        _a[j+1] = _a[j]\n', '        j -= 1\n', '    _a[j+1] = key\n', '        \n', 'print("" "".join([str(x) for x in _a]))']","['n = raw_input()\n', '\n', 'A = map(int, raw_input().split())\n', '\n', 'for i, key in enumerate(A):\n', '\n', '    j = i - 1\n', '\n', '    while(j >= 0 and A[j] > key):\n', '        A[j+1] = A[j]\n', '        j -= 1\n', '\n', '    A[j+1] = key\n', '\n', '    for x in A:\n', '        print x,\n', '    print']",1
"['h,k = map(int,input().split())\n', 'arr=list(map(int,input().split()))\n', 'arr.sort()\n', 'print(sum(arr[0:h-k]) if h>=k else 0)']","['N,K=map(int,input().split())\n', 'H=sorted(list(map(int,input().split())))\n', 'if len(H) < K:\n', '    print(0)\n', 'else:\n', '    print(sum(H[:N-K]))\n']",1
"['n = int(input())\n', 's = input()\n', 'if n % 2 == 1:\n', '  res = ""No""\n', 'else:\n', '  if s[:n//2] == s[n//2:]:\n', '    res = ""Yes""\n', '  else:\n', '    res = ""No""\n', 'print(res)']","['import sys\n', 'N = int(input())\n', 'S = input()\n', 'if N % 2 == 1:\n', ""    print('No')\n"", '    sys.exit()\n', '\n', 'if S[:N//2] == S[N//2:]:\n', ""    print('Yes')\n"", '    sys.exit()\n', '\n', ""print('No')""]",1
"['from bisect import bisect_left\n', '\n', 'def main():\n', '    n, m = map(int, input().split())\n', '    a = list(map(int, input().split()))\n', '    a.sort()\n', '    L, R = 0, 2 * 10**5 + 1\n', '    while L+1 < R:\n', '        P = (L+R)//2\n', '        cnt = 0\n', '        for v in a:\n', '            x = P - v\n', '            cnt += n - bisect_left(a, x)\n', '        if cnt >= m:\n', '            L = P\n', '        else:\n', '            R = P\n', '    csum = [0]\n', '    for v in a:\n', '        csum.append(v)\n', '    for i in range(n):\n', '        csum[i+1] += csum[i]\n', '    ans = 0\n', '    cnt = 0\n', '    for v in a:\n', '        x = L - v\n', '        idx = bisect_left(a, x)\n', '        cnt += n-idx\n', '        ans += csum[-1] - csum[idx]\n', '        ans += v * (n - idx)\n', '    ans -= (cnt - m) * L\n', '    print(ans)\n', '\n', 'if __name__ == ""__main__"":\n', '    main()']","['from bisect import bisect_left, bisect_right\n', '\n', 'n,m = map(int, input().split())\n', 'al = list(map(int, input().split()))\n', 'al.sort()\n', '\n', 'ok, ng = 0, 10**18+1\n', 'while abs(ok-ng) > 1:\n', '    mid = (ok+ng)//2\n', '    ok_flag = True\n', '    cnt = 0\n', ""    # print('-----')\n"", '    # print(ok,ng,mid)\n', '    for i,a in enumerate(al):\n', '        rem = mid-a\n', '        cnt_a = n-bisect_left(al,rem)\n', '        # cnt_a = min(n-i-1, cnt_a)\n', '        cnt += cnt_a\n', '        # print(i,a,cnt_a)\n', '    if cnt >= m:\n', '        ok = mid\n', '    else:\n', '    \tng = mid\n', '\n', 'min_sum = ok\n', 'cum_sums = [0]\n', 'csum = 0\n', 'for a in al:\n', '    csum += a\n', '    cum_sums.append(csum)\n', '    \n', '# print(min_sum)\n', '\n', 'ans = 0\n', 'cnt = 0\n', 'for i,a in enumerate(al):\n', '    rem = min_sum - a\n', '    ind = bisect_left(al, rem)\n', '    # ind = ind if 0 <= ind < n else None\n', '    # ind = max(i+1,ind)\n', '    csum = cum_sums[n] - cum_sums[ind]\n', '    # print(i,a,csum)\n', '    ans += csum\n', '    ans += a*(n-ind)\n', '    cnt += (n-ind)\n', '\n', 'ans -= (cnt-m)*min_sum\n', '\n', 'print(ans)\n', '# print(min_sum)']",1
"['n, m, x = map(int, input().split())\n', 'a = list(list(map(int, input().split())) for _ in range(n))\n', '\n', '#print(n, m, x, a)\n', '\n', '#0b00・・・０~0b111・・・１を全部作成\n', 'cost_abl = []\n', 'cost_lis = []\n', 'abl_lis = []\n', 'for i in range(1 << n):\n', '    cost = 0\n', '    abl_sum = [0] * m\n', '    #print(abl_sum)\n', '    #abl_1, abl_2, abl_3 = 0, 0 ,0\n', '    for j in range (len(a)):\n', '        mask = 1 << j\n', '        if i & mask:\n', '            cost += a[j][0]\n', '            for k in range(m):\n', '                abl_sum[k] += a[j][k + 1]\n', '            # abl_1 +=  a[j][1]\n', '            # abl_2 += a[j][2]\n', '            # abl_3 += a[j][3]\n', '    cost_lis.append(cost)\n', '    abl_lis.append(abl_sum)\n', '    #print(bin(i))\n', '#print(cost_lis, abl_lis)\n', '\n', 'cost_new_lis = []\n', 'for i in range(len(abl_lis)):\n', '    if min(abl_lis[i]) >= x:\n', '        cost_new_lis.append(cost_lis[i])\n', '    else:\n', '        pass\n', '#print(cost_new_lis)\n', '\n', 'if cost_new_lis == []:\n', '    print(-1)\n', 'else:\n', '    print(min(cost_new_lis))\n']","['import numpy as np\n', 'N, M, X = map(int,input().split())\n', 'C = []\n', 'A = []\n', 'for i in range(N):\n', '    c = 0\n', '    a = []\n', '    c, *a = map(int,input().split())\n', '    C.append(c)\n', '    A.append(a)\n', 'inf = float(""inf"")\n', 'res = inf\n', 'for bit in range(1 << N):\n', '    Cost = 0\n', '    Wise = [0] * M\n', '    for i in range(N):\n', '        if (bit >> i) & 1:# i冊目を買うときの処理\n', '            Cost += C[i]\n', '            for j, a in enumerate(A[i]):\n', '                Wise[j] += a\n', '            #else:# i冊目を買わないときの処理（今回は何もしないので省略）\n', '    if min(Wise) >= X and Cost <= res:\n', '        res = Cost\n', 'if res == inf:\n', '    print(""-1"")\n', 'else:\n', '    print(res)\n']",1
"['N,K = map(int, input().split())\n', 'L,R = [0]*K, [0]*K\n', '\n', 'count = 0\n', 'for _ in range(K):\n', '    a,b = map(int, input().split())\n', '    for _1 in range(_):\n', '        x,y = L[_1],R[_1]\n', '        if x <= a <= y or x <= b <= y :\n', '            L[_1] = min(a,x)\n', '            R[_1] = max(b,y)\n', '            break\n', '    else:\n', '        L[_],R[_] =a,b\n', '        count += 1\n', 'L,R = L[0:count+1],R[0:count+1]\n', '\n', 'MOD = 998244353\n', 'dp = [0]*(4*10**5+100)\n', 'for l, r in zip(L, R):\n', '    dp[min(N + 1, 1 + l)] += 1\n', '    dp[min(N + 1, 1 + r + 1)] -= 1\n', '\n', 'for i in range(2,N+1):\n', '    number = dp[i-1] + dp[i]\n', '    if number > MOD:\n', '        number -= MOD\n', '    dp[i] = number\n', '    for l, r in zip(L,R):\n', '        dp[i + l] += number\n', '        dp[i + l] %= MOD\n', '        dp[i + r +1] -= number\n', '        dp[i + r +1] %= MOD\n', '\n', 'print(dp[N]%MOD)']","['n,k = map(int,input().split())\n', 'sec = []\n', 'for i in range(k):\n', '  l,r = map(int,input().split())\n', '  sec.append([l,r])\n', '\n', 'mod = 998244353\n', 'dp = [0]*(n+1)\n', 'dp[0],dp[1] = 0,1\n', 'cumsum = [0]*(n+1)\n', 'cumsum[1] = 1\n', 'for i in range(2,n+1):\n', '  for l,r in sec:\n', '    if i>l:\n', '      dp[i] += cumsum[i-l]-cumsum[max(0,i-r-1)]\n', '  cumsum[i] = (dp[i]+cumsum[i-1])%mod\n', 'print(dp[n]%mod)']",1
"['# -*- coding: utf-8 -*-\n', 'from sys import stdin\n', '\n', 'class Dice:\n', '\n', '    def __init__(self,dicelist):\n', '        self.dice_list = dicelist\n', '\n', '    def roll(self, direction):\n', '        work = list(self.dice_list)\n', ""        if (direction == 'N'):\n"", '            self.dice_list[0] = work[1]\n', '            self.dice_list[1] = work[5]\n', '            self.dice_list[2] = work[2]\n', '            self.dice_list[3] = work[3]\n', '            self.dice_list[4] = work[0]\n', '            self.dice_list[5] = work[4]\n', ""        elif (direction == 'E'):\n"", '            self.dice_list[0] = work[3]\n', '            self.dice_list[1] = work[1]\n', '            self.dice_list[2] = work[0]\n', '            self.dice_list[3] = work[5]\n', '            self.dice_list[4] = work[4]\n', '            self.dice_list[5] = work[2]\n', ""        elif (direction == 'S'):\n"", '            self.dice_list[0] = work[4]\n', '            self.dice_list[1] = work[0]\n', '            self.dice_list[2] = work[2]\n', '            self.dice_list[3] = work[3]\n', '            self.dice_list[4] = work[5]\n', '            self.dice_list[5] = work[1]\n', ""        elif (direction == 'W'):\n"", '            self.dice_list[0] = work[2]\n', '            self.dice_list[1] = work[1]\n', '            self.dice_list[2] = work[5]\n', '            self.dice_list[3] = work[0]\n', '            self.dice_list[4] = work[4]\n', '            self.dice_list[5] = work[3]\n', '\n', '    def getTop(self):\n', '        return self.dice_list[0]\n', '\n', 'dice_list = list(map(int, stdin.readline().rstrip().split()))\n', 'dice = Dice(dice_list)\n', '\n', 'rolls = stdin.readline().rstrip()\n', 'for roll in rolls:\n', '    dice.roll(roll)\n', 'else:\n', '    print(dice.getTop())\n']","['# -*- coding: utf-8 -*-\n', '\n', '\n', 'class Dice:\n', '    def __init__(self, n):\n', '        self.upper    = n[0]\n', '        self.backward = n[1]\n', '        self.right    = n[2]\n', '        self.left     = n[3]\n', '        self.ahead    = n[4]\n', '        self.bottom   = n[5]\n', '\n', '    def roll_north(self):\n', '        self.upper, self.ahead, self.bottom, self.backward = self.backward, self.upper, self.ahead, self.bottom\n', '\n', '    def roll_south(self):\n', '        self.upper, self.ahead, self.bottom, self.backward = self.ahead, self.bottom, self.backward, self.upper\n', '\n', '    def roll_east(self):\n', '        self.upper, self.right, self.bottom, self.left = self.left, self.upper, self.right, self.bottom\n', '\n', '    def roll_west(self):\n', '        self.upper, self.right, self.bottom, self.left = self.right, self.bottom, self.left, self.upper\n', '\n', '\n', 'dice_info = Dice(list(map(int, input().split())))\n', 'order = list(input())\n', '\n', 'for i in range(len(order)):\n', ""    if 'N' in order[i]:\n"", '        dice_info.roll_north()\n', '\n', ""    elif 'S' in order[i]:\n"", '        dice_info.roll_south()\n', '\n', ""    elif 'E' in order[i]:\n"", '        dice_info.roll_east()\n', '\n', ""    elif'W' in order[i]:\n"", '        dice_info.roll_west()\n', '\n', 'print(dice_info.upper)\n', '\n']",1
"['N = int(input())\n', 'X = input()\n', 'memo = [-1] * (N+1)\n', 'memo[0] = 0\n', '\n', 'def popcount(k):\n', ""    return bin(k).count('1')\n"", '\n', 'def calc(k):\n', '    pop = popcount(k)\n', ""    #print('  ', k, pop)\n"", '    key = k\n', '    if memo[key] < 0:\n', '        k %= pop\n', '        if k == 0:\n', '            memo[key] = 1\n', '        else:\n', '            memo[key] = calc(k) + 1\n', '    return memo[key]\n', '\n', 'K = int(X, 2)\n', 'one = popcount(K)\n', 'if one == 0:\n', '    K_MOD = K\n', 'elif one == 1:\n', '    K_MOD   = 0\n', '    K_MOD_M = K\n', 'else:\n', '    K_MOD   = K % one\n', '    K_MOD_M = K % (one-1)\n', 'K_MOD_P = K % (one+1)\n', '\n', 'T_M = [1]*(N+1)\n', 'T_P = [1]*(N+1)\n', 'for i in range(1,N+1):\n', '    if one > 1:\n', '        T_M[i] = (T_M[i-1]*2) % (one-1)\n', '    T_P[i] = (T_P[i-1]*2) % (one+1)\n', '\n', 'for i in range(N):\n', ""    if X[i] == '1':\n"", '        pop = one - 1\n', '        k = K_MOD_M - T_M[N-i-1]\n', '    else:\n', '        pop = one + 1\n', '        k = K_MOD_P + T_P[N-i-1]\n', '\n', '    if pop == 0:\n', '        print(0)\n', '    else:\n', '        k %= pop\n', '        print(calc(k)+1)\n']","['def g(x):\n', '  S=format(x,""22b"")\n', '  cnt=0\n', '  for i in range(20):\n', '    if S[-1-i]==""1"":\n', '      cnt=cnt+1\n', '  return x%cnt\n', '\n', 'n=int(input())\n', 'X=input()\n', 'a=0\n', 'for i in range(n):\n', '  if X[i]==""1"":\n', '    a=a+1\n', '#最初に割るのは a-1 or a+1 -> a==0,1 に注意\n', 'if a==0:\n', '  for i in range(n):\n', '    print(1)\n', '  exit()\n', 'if a==1:\n', '  if X[-1]==""1"":\n', '    for i in range(n-1):\n', '      print(2)\n', '    print(0)\n', '    exit()\n', '  else:\n', '    for i in range(n-1):\n', '      if X[i]==""1"":\n', '        print(0)\n', '      else:\n', '        print(1)\n', '    print(2)\n', '    exit()\n', 'D=[0]*n\n', 'E=[0]*n\n', 'D[0]=1%(a-1)\n', 'E[0]=1%(a+1)\n', 'b=int(X[-1])%(a-1)\n', 'c=int(X[-1])%(a+1)\n', 'for i in range(n-1):\n', '  D[i+1]=(D[i]*2)%(a-1)\n', '  E[i+1]=(E[i]*2)%(a+1)\n', '  if X[-2-i]==""1"":\n', '    b=(b+D[i+1])%(a-1)\n', '    c=(c+E[i+1])%(a+1)\n', 'for i in range(n):\n', '  if X[i]==""1"":\n', '    x=(b+a-1-D[-1-i])%(a-1)\n', '    ans=1\n', '    while x!=0:\n', '      x=g(x)\n', '      ans=ans+1\n', '    print(ans)\n', '  else:\n', '    x=(c+E[-1-i])%(a+1)\n', '    ans=1\n', '    while x!=0:\n', '      x=g(x)\n', '      ans=ans+1\n', '    print(ans)']",1
"['n = int(input())\n', '\n', 'for a in range(-118,120):\n', '    for b in range(-119,119):\n', '        if a ** 5 - b **5 == n :\n', '            print(a,b)\n', '            exit()']","['import math\n', '\n', 'X= int(input())\n', '\n', 'for A in range(-120,121):\n', '    for B in range(-120,A+1):\n', '        if A**5-B**5  == X:\n', '            print(A,B)\n', '            exit()']",1
"['import random\n', '\n', 'name = str(input())\n', 'a = len(name)\n', '\n', 'if  3<= a <= 20:\n', '    b = random.randint(0,a-3) \n', '    \n', '    ada_1 = name[b]\n', '    ada_2 = name[b+1]\n', '    ada_3 = name[b+2]\n', '    \n', '    print(ada_1+ada_2+ada_3)\n', 'else:\n', '    None']","['import random\n', '\n', 's = input()\n', '\n', 'len_s = len(s)\n', '\n', 'if len_s==3:\n', '\tnum = 0\n', 'else:\n', '\tnum = random.randint(0,len_s-4)\n', '\n', 'name = s[num]+s[num+1]+s[num+2]\n', '\n', 'print(name)']",1
"['# -*- coding: utf-8 -*-\n', '\n', 'a = [int(raw_input()) for _ in range(10)]\n', '#print a\n', 'b = sorted(a, reverse=True)\n', '#print b\n', 'for c in b[0:3]:\n', '    print c']","['l=[]\n', 'l.append(int(input()))\n', 'l.append(int(input()))\n', 'l.append(int(input()))\n', 'l.append(int(input()))\n', 'l.append(int(input()))\n', 'l.append(int(input()))\n', 'l.append(int(input()))\n', 'l.append(int(input()))\n', 'l.append(int(input()))\n', 'l.append(int(input()))\n', 'l.sort()\n', 'l.reverse()\n', 'print l[0]\n', 'print l[1]\n', 'print l[2]']",1
"['class Node(object):\n', '  def __init__(self, num, prv = None, next = None):\n', '    self.num = num\n', '    self.prv = prv\n', '    self.next = next\n', '\n', 'class DoublyLinkedList(object):\n', '  def __init__(self):\n', '    self.start = self.last = None\n', '\n', '  def insert(self, num):\n', '    new_element = Node(num)\n', '\n', '    if self.start is None: # 空の場合\n', '      self.start = self.last = new_element\n', '    else:\n', '      new_element.next = self.start\n', '      self.start.prv = new_element\n', '      self.start = new_element\n', '\n', '  def delete(self, target):\n', '    it = self.start\n', '    while it is not None: # 該当する最初のノードを見つける\n', '      if it.num == target:\n', '        if it.prv is None and it.next is None: # ノードが一つだけの時\n', '          self.start = self.last = None\n', '        else:\n', '          if it.prv is not None: # 先頭ではない\n', '            it.prv.next = it.next\n', '          else: # 先頭の場合、先頭の次をstartにする\n', '            self.start = self.start.next\n', '          if it.next is not None:  # 最後ではない場合\n', '            it.next.prv = it.prv\n', '          else: # 最後の場合、最後の一つ前をlastにする\n', '            self.last = self.last.prv\n', '        break\n', '      it = it.next\n', '\n', '  def deleteFirst(self):\n', '    if self.start is self.last:\n', '      self.start = self.last = None\n', '    else:\n', '      self.start.next.prv = None\n', '      self.start = self.start.next\n', '\n', '  def deleteLast(self):\n', '    if self.start is self.last:\n', '      self.start = self.last = None\n', '    else:\n', '      self.last.prv.next = None\n', '      self.last = self.last.prv\n', '\n', '  def contentToArray(self):\n', '    n_list = []\n', '    it  = self.start\n', '    while it is not None:\n', '      n_list.append(it.num)\n', '      it = it.next\n', ""    return ' '.join(n_list)\n"", '\n', 'def main():\n', '  from sys import stdin\n', '  N = int(input())\n', '\n', '  linkedList = DoublyLinkedList() # インスタンス作成\n', '\n', '  for i in range(N):\n', '    command = stdin.readline().rstrip().split()\n', ""    if command[0] == 'insert':\n"", '      linkedList.insert(command[1])\n', ""    elif command[0] == 'delete':\n"", '      linkedList.delete(command[1])\n', ""    elif command[0] == 'deleteFirst':\n"", '      linkedList.deleteFirst()\n', ""    elif command[0] == 'deleteLast':\n"", '      linkedList.deleteLast()\n', '\n', '  print(linkedList.contentToArray())\n', '\n', 'if __name__ == ""__main__"":\n', '  main()\n']","['#! python3\n', '# doubly_linked_list.py\n', '\n', 'from collections import deque\n', '\n', 'keys = deque([])\n', '\n', 'n = int(input())\n', '\n', 'for i in range(n):\n', '    command = input()\n', ""    if command == 'deleteFirst':\n"", '        keys.popleft()\n', ""    elif command == 'deleteLast':\n"", '        keys.pop()\n', '    else:\n', ""        command, x = command.split(' ')\n"", ""        if command == 'insert':\n"", '            keys.appendleft(int(x))\n', ""        elif command == 'delete':\n"", '            if int(x) in keys:\n', '                keys.remove(int(x))\n', '\n', ""print(' '.join([str(k) for k in keys]))\n""]",1
"['import math\n', 'H = int(input())\n', 'print(2**(math.floor(math.log2(H))+1)-1)\n']","['H = int(input())\n', 'cnt = 0\n', 'while H != 0:\n', '    H //= 2\n', '    cnt += 1\n', '\n', 'print(2**cnt-1)']",1
"['import sys\n', ' \n', 'nums = []\n', ' \n', ' \n', 'for line in sys.stdin:\n', '    nums.append(line)\n', ' \n', 'for i in range(len(nums)):\n', '    input_line = nums[i].split("" "")\n', '    a = int(input_line[0])\n', '    b = int(input_line[1])\n', ' \n', '    if a > b:\n', '        num_bigger = a\n', '        num_smaller = b\n', '    else:\n', '        num_bigger = b\n', '        num_smaller = a\n', '\n', '    r = 1   #?????????\n', '    while r > 0:\n', '        r = num_bigger % num_smaller\n', '        num_bigger = num_smaller\n', '        num_smaller = r\n', '\n', '    max_common_div = num_bigger\n', '    min_common_mpl = int((a * b)/max_common_div)\n', ' \n', '    print(str(max_common_div) + "" "" + str(min_common_mpl))']","['def gcd(a, b):\n', '    while b:\n', '        a, b = b, a % b\n', '\n', '    return a\n', '\n', '\n', 'def lcm(a, b):\n', '    return a * b // gcd(a, b)\n', '\n', '\n', 'while True:\n', '    try:\n', '        x, y = map(int, input().split())\n', '        print(gcd(x, y), lcm(x, y))\n', '    except:\n', '        break\n', '\n']",1
"['hills = [input() for x in xrange(10)]\n', 'hills.sort(reverse=True)\n', 'for x in xrange(3):\n', '\tprint hills[x]']","['height_list = []\n', 'for i in range(10):\n', '    height_list.append(input())\n', 'height_list.sort()\n', 'height_list.reverse()\n', '\n', 'for height in height_list[:3]:\n', '    print height']",1
"['N, K = map(int, input().split())\n', 'p=list(map(int,input().split()))\n', '\n', 'for i in range(N):\n', '  p[i]=(1+p[i])/2\n', '  \n', 'ans=[0]*(N-K+1)\n', 'ans[0]=sum(p[:K])\n', 'for i in range(1, N-K+1):\n', '  ans[i]=ans[i-1]-p[i-1]+p[i+K-1]\n', '\n', 'print(max(ans))']","['n, k = map(int,input().split())\n', 'p = list(map(int,input().split()))\n', 'mu = [(a+1)/2 for a in p]\n', 'maxsum = sum(mu[:k])\n', 'now = maxsum\n', 'left = 0\n', 'right = k\n', 'while right<n:\n', '    now = now+mu[right]-mu[left]\n', '    if maxsum<now:\n', '        maxsum = now\n', '    left += 1\n', '    right += 1\n', 'print(maxsum)']",1
"['N,M = map(int,input().split())\n', 'H = list(map(int,input().split()))\n', 'mx = [0 for i in range(N)]\n', 'for _ in range(M):\n', '    a,b = map(int,input().split())\n', '    a -= 1\n', '    b -= 1\n', '    mx[a] = max(mx[a], H[b])\n', '    mx[b] = max(mx[b], H[a])\n', 'ans = 0\n', 'for i in range(N):\n', '    if H[i] > mx[i]:\n', '        ans += 1\n', 'print(ans)']","['from collections import Counter,defaultdict,deque\n', 'from heapq import heappop,heappush\n', 'from bisect import bisect_left,bisect_right \n', 'import sys,math,itertools,fractions,pprint\n', 'sys.setrecursionlimit(10**8)\n', 'mod = 10**9+7\n', ""INF = float('inf')\n"", 'def inp(): return int(sys.stdin.readline())\n', 'def inpl(): return list(map(int, sys.stdin.readline().split()))\n', '\n', 'n,m = inpl()\n', 'h = inpl()\n', 'g = [[] for _ in range(n)]\n', 'for _ in range(m):\n', '    a,b = inpl()\n', '    a,b = a-1,b-1\n', '    g[a].append(b)\n', '    g[b].append(a)\n', 'res = 0\n', 'for i in range(n):\n', '    for j in g[i]:\n', '        if h[j] >= h[i]:\n', '            break\n', '    else:\n', '        res += 1\n', 'print(res)']",1
"['import math\n', 'n = float(input())\n', 'area = ""%.6f"" % float(n **2 *  math.pi)\n', 'circ = ""%.6f"" % float(n * 2 * math.pi)\n', 'print(area, circ)']","['import math\n', '\n', 'r = float(input())\n', '\n', 'S= r * r * math.pi\n', 'C= 2 * r * math.pi\n', '\n', ""print('{0:.6f} {1:.6f}'.format(S, C))""]",1
"['import sys\n', 'X = int(input())\n', 'for i in range(1,1000):\n', '  if 360*i % X == 0:\n', '    print(360*i//X)\n', '    sys.exit()']","['import math\n', ""print([ ( int(x) * 360 // math.gcd(int(x),360) ) // int(x) for x in input().split(' ') ][0])""]",1
"['#!/usr/bin/env python3\n', 'import sys\n', 'def input():\n', '    return sys.stdin.readline()[:-1]\n', '\n', 'def main():\n', '    N, K = map(int, input().split())\n', '\n', '    ans = N % K\n', '    ans = min(ans, abs(ans - K))\n', '\n', '    print(ans)\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']","['import sys\n', '\n', 'read = sys.stdin.read\n', 'readline = sys.stdin.readline\n', 'readlines = sys.stdin.readlines\n', 'sys.setrecursionlimit(10 ** 9)\n', 'INF = 1 << 60\n', 'MOD = 1000000007\n', '\n', '\n', 'def main():\n', '    N, K = map(int, readline().split())\n', '\n', '    n = N % K\n', '    print(min(n, K - n))\n', '\n', '    return\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    main()\n']",1
"['cnt = 0\n', 'def merge(A, left, mid, right):\n', '  global cnt\n', '  #print(""marge "",A,left,mid,right)\n', '  n1 = mid - left\n', '  n2 = right - mid\n', '  #L = [0] * (n1+1)\n', '  #R = [0] * (n2+1)\n', '  L = [0] * (n1+1)\n', '  R = [0] * (n2+1)\n', '  \n', '  for i in range(n1):\n', '    L[i] = A[left + i]\n', '  for i in range(n2):\n', '    R[i] = A[mid + i]\n', '  L[n1] = 999999999\n', '  R[n2] = 999999999\n', '  i = 0\n', '  j = 0\n', '  for k in range(left,right):\n', '    cnt+=1\n', '    if L[i] <= R[j]:\n', '      A[k] = L[i]\n', '      i = i + 1\n', '    else:\n', '      A[k] = R[j]\n', '      j = j + 1\n', '\n', 'def mergeSort(A, left, right):\n', '  #print(""margeSort "",A,left,right)\n', '  if left+1 < right:\n', '    mid = int((left + right)/2)\n', '    mergeSort(A, left, mid)\n', '    mergeSort(A, mid, right)\n', '    merge(A, left, mid, right)\n', '\n', 'n = int(input())\n', 'S = list(map(int,input().split()))\n', 'mergeSort(S, 0, n)\n', 'S = map(str, S)\n', ""print(' '.join(S))\n"", 'print(cnt)\n']","['INFTY = 10 ** 9\n', 'count = 0\n', '\n', 'def merge(A, left, mid, right):\n', '    global count\n', '\n', '    n1 = mid - left\n', '    n2 = right - mid\n', '\n', '    L = A[left:mid] + [INFTY]\n', '    R = A[mid:right] + [INFTY]\n', '\n', '    i = 0\n', '    j = 0\n', '    for k in range(left, right):\n', '        if L[i] <= R[j]:\n', '            A[k] = L[i]\n', '            i += 1\n', '        else:\n', '            A[k] = R[j]\n', '            j += 1\n', '        \n', '        count += 1\n', '\n', '\n', 'def mergeSort(A, left, right):\n', '    if left + 1 < right:\n', '        mid = (left + right) // 2\n', '        mergeSort(A, left, mid)\n', '        mergeSort(A, mid, right)\n', '        merge(A, left, mid, right)\n', '\n', '\n', '\n', 'n = int(input())\n', 'S = list(map(int, input().split()))\n', '\n', 'mergeSort(S, 0, len(S))\n', 'print(*S)\n', 'print(count)\n']",1
"['s=input()\n', 'if len(s)&1:\n', ""    print('No')\n"", '    exit()\n', 'for i in list(s[i*2:i*2+2] for i in range(len(s)//2)):\n', ""    if i!='hi':\n"", ""        print('No')\n"", '        exit()\n', ""print('Yes')""]","['S = input()\n', 'hi = []\n', '\n', 'for i in range(5):\n', '    hi.append(""hi""*(i+1))\n', '\n', 'print(""Yes"" if S in hi else ""No"")']",1
"['k, n =map(int,input().split())\n', 'a = list(map(int,input().split()))\n', 'longest = k - a[-1] + a [0]\n', 'for i in range(len(a)-1):\n', '    longest = max(longest,a[i+1]-a[i])\n', 'print(k-longest)']","['k,n = [int(x) for x in input().split()]\n', 'a = [int(x) for x in input().split()]\n', '\n', 'c = a[0] + (k - a[n - 1])\n', '\n', 'd = max([a[i] - a[i - 1] for i in range(1, n)])\n', '\n', 'c = max(c,d)\n', '\n', 'print(k - c)\n']",1
"['\n', 'from collections import deque\n', '\n', 'n = int(input())\n', 'linked_list = deque([])\n', '\n', 'for i in range(n):\n', '    line = input().split()\n', '    cmd = line[0]\n', '\n', '    if len(line) == 2:\n', '        value = line[1]\n', '\n', '    if cmd == ""insert"":\n', '        linked_list.appendleft(value)\n', '    elif cmd == ""delete"":\n', '        if value in linked_list:\n', '            linked_list.remove(value)\n', '    elif cmd == ""deleteFirst"":\n', '        linked_list.popleft()\n', '    elif cmd == ""deleteLast"":\n', '        linked_list.pop()\n', '\n', 'print(*linked_list)']","['# coding: utf-8\n', 'import sys\n', 'from collections import deque\n', '\n', 'output_str = deque()\n', 'data_cnt =  int(input())  \n', '\n', 'for i in range(data_cnt):\n', '    in_command = input().rstrip().split("" "")\n', '    \n', '    if in_command[0] == ""insert"":\n', '        output_str.appendleft(in_command[1])\n', '    elif in_command[0] == ""delete"":\n', '        if output_str.count(in_command[1]) > 0:\n', '            output_str.remove(in_command[1])\n', '    elif in_command[0] == ""deleteFirst"":\n', '        output_str.popleft()\n', '    elif in_command[0] == ""deleteLast"": \n', '        output_str.pop()\n', '\n', 'print("" "".join(output_str))']",1
"['# coding:utf-8\n', '# ??\\??????????????´??°????°???????????????????\n', '\n', 'i = 1\n', 'x = 1\n', 'y = 1\n', 'while x != 0 or y != 0:\n', '    xy = raw_input().split()\n', '    x = int(xy[0])\n', '    y = int(xy[1])\n', '    if x == 0 and y ==0:\n', '        break\n', '    if x < y :\n', '        print x,y\n', '    else:\n', '        print y,x']","['while True:\n', '\tx, y = list(map(int, input().split()))\n', '\tif (x == 0 and y == 0) :\n', '\t\tbreak\n', '\tif (x < y) :\n', '\t\tprint(str(x) + "" "" + str(y))\n', '\telse :\n', '\t\tprint(str(y) + "" "" + str(x))']",1
"['n=int(input())\n', 'a=list(map(int,input().split()))\n', 'c=0\n', 'for i in range(n-1):\n', ' for j in range(0,n-i-1):\n', '  if a[j]>a[j+1]:a[j],a[j+1]=a[j+1],a[j];c+=1\n', 'print(*a)\n', 'print(c)\n']","['n = int(input())\n', 'A = list(map(int,input().split()))\n', 'f = 1 \n', 'c = 0\n', '\n', 'while f == 1:\n', '    f = 0\n', '    for j in range(n-1,0,-1):\n', '        if A[j] < A[j-1]:\n', '            inc = A[j]\n', '            A[j] = A[j-1] \n', '            A[j-1] = inc\n', '            f = 1\n', '            c += 1\n', 'print("" "".join(map(str,A)))\n', 'print(c)']",1
"['X, Y = list(map(int, input().split()))\n', '\n', 'crane = 0\n', 'turtle = X\n', '\n', 'while turtle >= 0:\n', '\n', '    allLegs = crane * 2 + turtle * 4\n', '    if allLegs == Y:\n', '        print(""Yes"")\n', '        exit()\n', '\n', '    crane += 1\n', '    turtle -= 1\n', '\n', 'print(""No"")\n']","['X, Y =map(int,input().split())\n', 'a = 0\n', 'for i in range(X+1):\n', '  if 2*i+4*(X-i)==Y:\n', ""    print('Yes')\n"", '  else:\n', '    a +=1\n', '  \n', '    \n', 'if a ==X+1:\n', ""  print('No')""]",1
"['import fractions\n', 'import math\n', '\n', 'N,M = map(int,input().split())\n', 'A = list(map(int,input().split()))\n', 'A = [ a//2 for a in A ]\n', '\n', 'flg = True\n', 'times = None\n', 'for i,a in enumerate(A):\n', '  t = 0\n', '  while a%2==0:\n', '    a //= 2\n', '    t += 1\n', '\n', '  if times is None:\n', '    times = t\n', '  else:\n', '    if times != t:\n', '      flg = False\n', '      break\n', '  A[i] = a\n', 'M >>= times\n', '\n', 'if not flg:\n', '  print(0)\n', '  exit()\n', '\n', 'lcm = 1\n', 'for i in range(N):\n', '  lcm = lcm * A[i] // fractions.gcd(lcm, A[i])\n', '  if lcm > M:\n', '    print(0)\n', '    exit()\n', '\n', 'print(math.ceil((M // lcm)/2))']","['from functools import reduce\n', 'from fractions import gcd\n', '\n', 'N, M, *A = map(int, open(0).read().split())\n', '\n', 'def lcm(x, y):\n', '    return x * y // gcd(x, y)\n', '\n', 'def sub_by_2(n):\n', '    cnt = 0\n', '    while n % 2 == 0:\n', '        n //= 2\n', '        cnt += 1\n', '    return cnt\n', '\n', 'lcm_2 = [sub_by_2(n // 2) for n in A]\n', 'if all(lcm_2[0] == v for v in lcm_2):\n', '    num = reduce(lcm, [v // 2 for v in A])\n', '    res = M // num\n', '    print(res // 2 + res % 2)\n', 'else:\n', '    print(0)\n']",1
"['n,d = map(int,input().split())\n', 'ans = 0\n', 'for i in range(n):\n', '  x,y = map(int,input().split())\n', '  if x**2+y**2 <= d**2:\n', '    ans += 1\n', 'print(ans)']","['nd=input().split()\n', 'n=int(nd[0])\n', 'd=int(nd[1])\n', 'count=0\n', 'z=d*d\n', 'for i in range(0,n):\n', '\txy=input().split()\n', '\tx=int(xy[0])\n', '\ty=int(xy[1])\n', '\tif(x*x+y*y<=z):\n', '\t\tcount+=1\n', 'print(count)\n']",1
"['import sys\n', '\n', '\n', 'def solve():\n', '    readline = sys.stdin.buffer.readline\n', '    mod = 10 ** 9 + 7\n', ""    a = str(readline().rstrip().decode('utf-8'))\n"", '    print(""A"" if a.isupper() else ""a"")\n', '\n', '\n', ""if __name__ == '__main__':\n"", '    solve()\n']","['#!/usr/bin/env python3\n', '# -*- coding: utf-8 -*-\n', 'a = input()\n', 'if a.upper() == a:\n', ""  print('A')\n"", 'else:\n', ""  print('a')\n""]",1
"['def plus(x):\n', '    yen = 0\n', '    if x < 4:\n', '        yen = yen + 100000\n', '    if x < 3:\n', '        yen = yen + 100000\n', '    if x < 2:\n', '        yen = yen + 100000\n', '    return yen\n', '\n', 'x, y = map(int, input().split())\n', '\n', 'res = plus(x) + plus(y)\n', '\n', 'if x == 1 and y == 1:\n', '    res = res + 400000\n', '\n', 'print(res)']","['import sys\n', 'def input(): return sys.stdin.readline().strip()\n', '\n', 'def resolve():\n', '    x,y=map(int, input().split())\n', '    ans=0\n', '    if x==3:\n', '        ans+=100000\n', '    elif x==2:\n', '        ans+=200000\n', '    elif x==1:\n', '        ans+=300000\n', '    if y==3:\n', '        ans+=100000\n', '    elif y==2:\n', '        ans+=200000\n', '    elif y==1:\n', '        ans+=300000\n', '    if x==1 and y==1:\n', '        ans+=400000\n', '    print(ans)\n', '\n', 'resolve()']",1
"['# import math\n', '# import statistics\n', '# import itertools\n', '# a=int(input())\n', '# b=input()\n', '# c=[]\n', '# for i in a:\n', '#     c.append(int(i))\n', 'N,K= map(int,input().split())\n', '# f = list(map(int,input().split()))\n', '# g = [int(input()) for _ in range(N)]\n', '# h = []\n', '# for i in range(a):\n', '#     h.append(list(map(int,input().split())))\n', '# a = [[0] for _ in range(H)]#nizigen\n', '\n', 'if N%K==0:\n', '    print(0)\n', 'else:\n', '    et=N//K\n', '    a1=et*K\n', '    a2=(et+1)*K\n', '    mi = min(abs(a1-N),abs(a2-N))\n', '    print(mi)']","['def repint(n, k):\n', '\tif n % k == 0:\n', '\t\treturn 0\n', '\tres = abs((n % k) - k)\n', '\tif (n % k) > res:\n', '\t\treturn res\n', '\treturn (n % k)\n', 'n, k = map(int, input().split())\n', 'print(repint(n, k))']",1
"['import sys\n', 'from functools import lru_cache\n', 'from collections import defaultdict\n', ""inf = float('inf')\n"", 'readline = sys.stdin.buffer.readline\n', 'readlines = sys.stdin.buffer.readlines\n', 'sys.setrecursionlimit(10**6)\n', 'def input(): return sys.stdin.readline().rstrip()\n', 'def read():\n', '  return int(readline())\n', 'def reads():\n', '  return map(int, readline().split())\n', 'x=read()\n', 'a=list(reads())\n', 'dic=[]\n', 'dic2=defaultdict(int)\n', 'for i in range(x):\n', '  dic.append(i+a[i])\n', '  dic2[i-a[i]]+=1\n', 'ans=0\n', '#print(dic,dic2)\n', 'for i in dic:\n', '  ans+=dic2[i]\n', 'print(ans)\n', '  \n']","['from collections import defaultdict\n', '\n', 'N = int(input())\n', 'A = list(map(int,input().split()))\n', '\n', 'ans = 0\n', 'di = defaultdict(int)\n', 'for i, a in enumerate(A):\n', '    ans += di[i+1 - a]\n', '    di[i+1 + a] += 1\n', '\n', 'print(ans)']",1
"['s = input()\n', 'if s.islower():\n', '  print(""a"")\n', 'else:\n', '  print(""A"")']","['A = input()\n', ""ans = 'A' if A.isupper() else 'a'\n"", 'print(ans)']",1
"['i=1\n', 'while True:\n', '    line = int(input())\n', '    if line==0: break\n', ""    print('Case {i}: {line}'.format(i=i,line=line))\n"", '    i+=1']","['cnt = 1\n', 'while 1:\n', '    tmp = int(raw_input())\n', '    if tmp == 0:\n', '        break\n', '    else:\n', '        print ""Case "" + str(cnt) + "": "" + str(tmp)\n', '        cnt+=1\n']",1
"['import sys\n', 'line = sys.stdin.readline()\n', 'print(line[0:3])\n']","['from sys import stdin\n', 'input = stdin.readline\n', '\n', 'a=input()\n', 'print(a[:3])']",1
"['from sys import stdin\n', 'import sys\n', '\n', 'a = stdin.readline().rstrip()\n', 'b = stdin.readline().rstrip()\n', '\n', 'count = 0\n', 'for i in range(len(a)):\n', '    if a[i] != b[i]: count = count + 1\n', '\n', 'print (count)\n', '\n']","['s = input()\n', 't = input()\n', 'cnt = 0\n', 'for x in range(len(s)):\n', '    if s[x]!=t[x]:\n', '        cnt+=1\n', 'print(cnt)']",1
"['def factorization(n):\n', '    arr = []\n', '    temp = n\n', '    for i in range(2, int(-(-n**0.5//1))+1):\n', '        if temp%i==0:\n', '            cnt=0\n', '            while temp%i==0:\n', '                cnt+=1\n', '                temp //= i\n', '            arr.append([i, cnt])\n', '\n', '    if temp!=1:\n', '        arr.append([temp, 1])\n', '\n', '    if arr==[]:\n', '        arr.append([n, 1])\n', '\n', '    return arr\n', '\n', 'N = int(input())\n', '\n', 'if N == 1:\n', '    print(""0"")\n', '    exit()\n', '\n', 'factors = factorization(N)\n', '\n', 'ans = 0\n', 'for factor in factors:\n', '    num = factor[1]\n', '    x = 1\n', '    for i in range(num+1):\n', '        if i**2 + i > 2*num:\n', '            x = i-1\n', '            break\n', '#    print(num,x)                                                                                      \n', '    ans += x\n', '\n', 'print(ans)\n']","['import math\n', 'Max = 1000001\n', 'prime = Max*[1]\n', 'def sieve():\n', '\tprime[0] = 0\n', '\tprime[1] = 0\n', '\tfor i in range(2,Max):\n', '\t\tif prime[i]==1:\t\t\t\t\n', '\t\t\tj = 2*i\n', '\t\t\twhile j < Max:\n', '\t\t\t\tprime[j] = 0\n', '\t\t\t\tj += i\n', '\n', 'def Howmany(x):\n', '\tres = 1\n', '\twhile x>=res:\n', '\t\tx -= res\n', '\t\tres += 1\n', '\treturn res-1\n', '\n', 'N = int(input())\n', 'sieve()\n', 'ans = 0\n', 'R = int(math.sqrt(N))\n', 'for i in range(2, R):\n', '\tif prime[i]==1 and N%i==0:\n', '\t\tcnt = 0\n', '\t\twhile N%i==0:\n', '\t\t\tN //= i\n', '\t\t\tcnt+=1\n', '\t\tans += Howmany(cnt)\n', '\n', 'if N!=1:\n', '\tans += 1\n', 'print(ans)\n', '\n']",1
"['a,b,c=map(int,input().split())\n', 'k=int(input())\n', '\n', 'f=False\n', 'for _ in range(k):\n', '  if b<=a:\n', '    b*=2\n', '  elif c<=b:\n', '    c*=2\n', '  if c>b>a:\n', '    f=True\n', '    break\n', '\n', 'if f:\n', ""  print('Yes')\n"", 'else:\n', ""  print('No')""]","['import math as mt\n', 'import sys, string\n', 'from collections import Counter, defaultdict\n', 'input = sys.stdin.readline\n', '\n', 'MOD = 1000000007\n', '\n', '# input functions\n', 'I = lambda : int(input())\n', 'M = lambda : map(int, input().split())\n', 'Ms = lambda : map(str, input().split()) \n', 'ARR = lambda: list(map(int, input().split()))\n', '\n', 'def main():\n', '    a, b, c = M()\n', '    k = I()\n', '    ans = 0\n', '    while b <= a:\n', '        b *= 2\n', '        ans += 1\n', '    while c <= b:\n', '        c *= 2\n', '        ans += 1\n', '    if ans <= k:\n', '        print(""Yes"")\n', '    else:\n', '        print(""No"")\n', '\n', '# testcases\n', 'tc = 1\n', 'for _ in range(tc):\n', '    main()']",1
"[""'''\n"", 'Rjの最小値を保持することで最大利益の更新判定をn回で終わらせる\n', ""'''\n"", '\n', 'r = []\n', '\n', 'n = int(input())\n', 'for i in range(n):\n', '    i = int(input())\n', '    r.append(i)\n', '\n', 'minv = r[0]\n', 'maxv = r[1] - r[0]\n', '\n', 'for j in range(1,n):\n', '    maxv = max(maxv, r[j]-minv)\n', '    minv = min(minv, r[j])\n', '\n', 'print(maxv)\n', '\n']","[""s_max = -float('inf')\n"", 's = 0\n', 'for i in range(int(input())):\n', '\tr = int(input())\n', '\tif i:\n', '\t\ts = max(s, 0) + r - prev\n', '\t\ts_max = max(s, s_max)\n', '\tprev = r\n', 'print(s_max)\n']",1
"['import collections\n', 'import sys\n', '\n', 'S1 = collections.deque()\n', 'S2 = collections.deque()\n', 'S3 = collections.deque()\n', '\n', 'for i, j in enumerate(sys.stdin.readline()):\n', ""    if j == '\\\\':\n"", '        S1.append(i)\n', ""    elif j == '/':\n"", '        if S1:\n', '            left_edge = S1.pop()\n', '            new_puddle = i - left_edge\n', '            while S2 and (S2[-1] > left_edge):\n', '                if S2[-1] > left_edge:\n', '                    S2.pop()\n', '                    new_puddle += S3.pop()\n', '            S2.append(left_edge)\n', '            S3.append(new_puddle)\n', '        else:\n', '            pass\n', '\n', '\n', 'print(sum(S3))\n', '\n', 'print(len(S3), *S3)']","['#alds13c\n', 'from collections import deque\n', '\n', 'd_stack=deque()\n', 'res_stack=deque()\n', 's = input()\n', '\n', 'for i in range(len(s)):\n', '    #print(d_stack,res_stack)\n', '    if s[i]==""\\\\"":\n', '        d_stack.append(i)\n', '    elif s[i]==""/"":\n', '        if len(d_stack)==0:\n', '            continue\n', '        left = d_stack.pop()\n', '        area = i-left\n', '        #res_stack.append((left,area))\n', '        if len(res_stack)>0:\n', '            flag=True\n', '            #merge_candidate = []\n', '            mergeareasum=0\n', '            while flag:\n', '                if len(res_stack)>0 and left<res_stack[-1][0]:\n', '                    mc = res_stack.pop()\n', '                    mergeareasum += mc[1]\n', '                    #res_stack.append((left,under[1]+area))\n', '                else:\n', '                    flag = False\n', '                    res_stack.append((left,area+mergeareasum))\n', '        else:\n', '                res_stack.append((left,area))\n', '\n', 'ans=0\n', 'v_devided=[]\n', 'for pair in res_stack:\n', '    ans += pair[1]\n', '    v_devided.append(str(pair[1]))\n', 'print(ans)\n', 'if len(v_devided)>0:\n', '    print(len(v_devided),"" "".join(v_devided))\n', 'else:\n', '    print(0)\n']",1
"['X = int(input())\n', '\n', 'for i in range(1, 100001):\n', '    if 100*i <= X <= 105*i:\n', '        print(1)\n', '        exit(0)\n', 'print(0)\n']","['N=int(input())\n', 'b=0\n', 'x = N //100\n', 'for y in range(100*x,105*x+1):\n', '  if N==y:\n', '    print(1)\n', '    exit()\n', 'print(0)\n']",1
"['from sys import stdin\n', 'inp = lambda : stdin.readline().strip()\n', '\n', 'n= int(inp())\n', 'prices = [int(x) for x in inp().split()]\n', '\n', 'money= 1000\n', 'buy = -1\n', 'if prices[0] <=money: \n', '    buy = prices[0]\n', 'for i in range(1, len(prices)):\n', '    if prices[i] > prices[i - 1]:\n', '        if buy != -1:\n', '            money = money%buy + (money//buy)*prices[i]\n', '            buy = prices[i]\n', '    else:\n', '        if prices[i] < buy and prices[i] < money:\n', '            buy = prices[i]\n', 'print(money)']","['n, *a = map(int, open(0).read().split())\n', 'max_a = max(a)\n', 'money = 1000\n', 'stock = 0\n', 'for i in range(n-1):\n', '    if a[i] < a[i+1]:\n', '        stock = money // a[i]\n', '        money += (a[i+1] - a[i]) * stock\n', 'print(money)']",1
"['S = input()\n', 'T = input()\n', 'ans = 99999999\n', 'for i in range(len(S)-len(T)+1):\n', '    word = S[i:i+len(T)]\n', '    cnt = 0\n', '    for j in range(len(word)):\n', '\n', '        if word[j]!=T[j]:\n', '            cnt+=1\n', '    ans = min(ans,cnt)\n', 'print(ans)']","['S = list(input())\n', 'T = list(input())\n', '\n', 'i = 0\n', 'ans =[]\n', '\n', 'while i + len(T) <= len(S):\n', '    n = 0\n', '    for s, t in zip(S[i:i+len(T)], T):\n', '        if s != t:\n', '            n += 1\n', '    ans.append(n)\n', '    i += 1\n', '\n', 'print(min(ans))']",1
"['def solve():\n', '    N = int(input())\n', '    A = [int(i) for i in input().split()]\n', '\n', '    set_A = set([])\n', '    for num in A:\n', '        if num in set_A:\n', ""            print('NO')\n"", '            return\n', '        set_A.add(num)\n', ""    print('YES')\n"", '\n', 'if __name__ == ""__main__"":\n', '    solve()']","['N = int(input())\n', 'A = list(map(int, input().split()))\n', '\n', 'A_set = set(A)\n', '\n', 'if len(A) == len(A_set):\n', ""  print('YES')\n"", 'else:\n', ""  print('NO')""]",1
"['S,T=map(str, input().split())\n', 'a,b=map(int, input().split())\n', 'U = str(input())\n', '\n', 'if S == U :\n', '    a -= 1\n', 'if T == U:\n', '    b -= 1\n', 'print(a,b)']","['S,T=list(input().split())\n', 'A,B=list(map(int,input().split()))\n', 'U=input()\n', 'D={}\n', 'D[S]=A\n', 'D[T]=B\n', 'D[U]-=1\n', 'print(D[S],D[T])']",1
"['while True:\n', '    n,x = [int(x) for x in input().split()]\n', '    if (n,x)==(0,0): break\n', '    cnt=0\n', '    if 3*(n-1) >= x:     # If n-2 + n-1 + n < x, there is no combination\n', '        a_max = x//3 - 1 # a_max + a_max+1 + a_max+2 = x\n', '        if 2*n-1 < x: \n', '            a_min = x - (2*n-1) # set minimum value of a\n', '        else:\n', '            a_min = 1\n', '        for a in range(a_min,a_max+1):\n', '            b_max = (x-a-1)//2 # b_max + b_max+1 <= x-a\n', '            b_min = (x-a) - n  # set minimum value of b\n', '            b_min = b_min if b_min > a+1 else a+1\n', '            cnt += b_max - b_min + 1\n', '    print(cnt)']","['while True:\n', '    n, x = map(int, input().split())\n', '    if n == 0 and x == 0:\n', '        break\n', '    else:\n', '        counter = 0\n', '        for a in range(1,(x // 3)):\n', '            for c in range ((x//3)+1,n+1):\n', '                b = x - a - c\n', '                if a < b < c:\n', '                    counter += 1\n', '        print(counter)']",1
"['import sys\n', '\n', 'N,K = map(int,input().split())\n', 'H = sorted(list(map(int,input().split())),reverse = True)\n', '\n', 'for i in range(N):\n', '    if not H[i] >= K:\n', '        print(i)\n', '        sys.exit()\n', '        \n', 'print(N)']","['n,k=map(int,input().split())\n', 'hlist=list(map(int,input().split()))\n', '\n', 'counter=0\n', 'for h in hlist:\n', '\tif h >= k:\n', '\t\tcounter += 1\n', 'print(counter)']",1
